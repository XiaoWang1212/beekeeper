{"version":3,"file":"js/app.42207502.js","mappings":"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","sources":["webpack://beekeeper/./src/App.vue","webpack://beekeeper/./src/App.vue?7ccd","webpack://beekeeper/./src/views/LoginView.vue","webpack://beekeeper/./src/views/LoginView.vue?5755","webpack://beekeeper/./src/views/GameView.vue","webpack://beekeeper/./src/components/ForagingModal.vue","webpack://beekeeper/./src/components/ForagingModal.vue?c02f","webpack://beekeeper/./src/components/LaborTaskModal.vue","webpack://beekeeper/./src/components/LaborTaskModal.vue?a16c","webpack://beekeeper/./src/components/HoneyStorageModal.vue","webpack://beekeeper/./src/components/HoneyStorageModal.vue?9a6a","webpack://beekeeper/./src/components/TasksModal.vue","webpack://beekeeper/./src/components/TasksModal.vue?2691","webpack://beekeeper/./src/components/AchievementsModal.vue","webpack://beekeeper/./src/components/AchievementsModal.vue?43ac","webpack://beekeeper/./src/views/GameView.vue?3e8c","webpack://beekeeper/./src/router/index.js","webpack://beekeeper/./src/store/modules/bees.js","webpack://beekeeper/./src/store/modules/honey.js","webpack://beekeeper/./src/store/modules/orders.js","webpack://beekeeper/./src/store/modules/foraging.js","webpack://beekeeper/./src/store/modules/challenges.js","webpack://beekeeper/./src/store/modules/weather.js","webpack://beekeeper/./src/store/modules/laborTasks.js","webpack://beekeeper/./src/store/modules/tasks.js","webpack://beekeeper/./src/store/modules/achievements.js","webpack://beekeeper/./src/store/modules/firebase.js","webpack://beekeeper/./src/store/helpers/persistence.js","webpack://beekeeper/./src/store/index.js","webpack://beekeeper/./src/main.js","webpack://beekeeper/webpack/bootstrap","webpack://beekeeper/webpack/runtime/chunk loaded","webpack://beekeeper/webpack/runtime/define property getters","webpack://beekeeper/webpack/runtime/global","webpack://beekeeper/webpack/runtime/hasOwnProperty shorthand","webpack://beekeeper/webpack/runtime/publicPath","webpack://beekeeper/webpack/runtime/jsonp chunk loading","webpack://beekeeper/webpack/startup"],"sourcesContent":["<template>\n  <router-view/>\n</template>\n\n<script>\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase } from \"firebase/database\"; // 改用 Realtime Database\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { mapActions } from 'vuex';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAkYvKj5JpAL_0lpzrdDaYm9xi0SE9nox4\",\n  authDomain: \"beekeeper-4bccb.firebaseapp.com\",\n  projectId: \"beekeeper-4bccb\",\n  databaseURL: \"https://beekeeper-4bccb-default-rtdb.firebaseio.com\", // 添加此行\n  storageBucket: \"beekeeper-4bccb.firebasestorage.app\",\n  messagingSenderId: \"126642118467\",\n  appId: \"1:126642118467:web:1040498c3de60af13d19f6\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getDatabase(app);\nconst auth = getAuth(app);\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      currentUser: null,\n      db: db,\n      auth: auth\n    }\n  },\n  created() {\n    // 設置 Firebase 實例到 Vuex\n    this.setFirebaseInstances({ db, auth });\n    \n    // 監聽用戶登入狀態\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        // 用戶已登入\n        this.currentUser = user;\n        this.setCurrentUser(user);\n        console.log('用戶已登入:', user.displayName || user.email);\n        \n        // 嘗試載入遊戲數據\n        this.loadGame();\n      } else {\n        // 用戶已登出\n        this.currentUser = null;\n        this.setCurrentUser(null);\n        console.log('用戶已登出');\n        this.$router.push('/login'); // 重定向到登入頁面\n      }\n    });\n  },\n  methods: {\n    ...mapActions({\n      setFirebaseInstances: 'firebase/setInstances',\n      setCurrentUser: 'firebase/setCurrentUser',\n      loadGame: 'persistence/loadGame'\n    })\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=49cd8699\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=49cd8699&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"login-container\">\n    <div class=\"login-card\">\n      <h1>養蜂達人</h1>\n      <div class=\"game-description\">\n        <p>歡迎來到養蜂達人！開始你的養蜂生涯吧！</p>\n      </div>\n      \n      <div class=\"bee-animation\">\n        <img src=\"@/assets/images/honeybee.png\" alt=\"蜜蜂\" class=\"bee-icon\" />\n      </div>\n      \n      <form @submit.prevent=\"handleSubmit\" class=\"login-form\">\n        <!-- 切換登入/註冊模式 -->\n        <div class=\"mode-switch\">\n          <button \n            type=\"button\" \n            :class=\"['mode-button', { active: mode === 'login' }]\"\n            @click=\"mode = 'login'\"\n          >\n            登入\n          </button>\n          <button \n            type=\"button\" \n            :class=\"['mode-button', { active: mode === 'register' }]\"\n            @click=\"mode = 'register'\"\n          >\n            註冊\n          </button>\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"username\">電子郵件</label>\n          <input \n            type=\"text\" \n            id=\"username\" \n            v-model=\"username\" \n            placeholder=\"請輸入電子郵件\" \n            maxlength=\"50\"\n            required\n          />\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"password\">密碼</label>\n          <input \n            type=\"password\" \n            id=\"password\" \n            v-model=\"password\" \n            placeholder=\"請輸入密碼\" \n            required\n          />\n        </div>\n        \n        <div class=\"form-group\" v-if=\"mode === 'register'\">\n          <label for=\"characterName\">你的養蜂人名稱</label>\n          <input \n            type=\"text\" \n            id=\"characterName\" \n            v-model=\"characterName\" \n            placeholder=\"請輸入你的名稱\" \n            maxlength=\"12\"\n            required\n          />\n        </div>\n        \n        <div class=\"message\" v-if=\"message\" :class=\"messageType\">{{ message }}</div>\n        \n        <button type=\"submit\" class=\"submit-button\" :disabled=\"!canSubmit || isLoading\">\n          {{ mode === 'login' ? '登入遊戲' : '創建帳號' }}\n        </button>\n      </form>\n      \n      <div class=\"game-features\">\n        <h3>遊戲特色</h3>\n        <ul>\n          <li>🐝 建立你自己的蜂場</li>\n          <li>🌼 派遣蜜蜂採集各種花蜜</li>\n          <li>🏆 升級你的蜂巢，增加產量</li>\n          <li>⚡ 應對各種自然挑戰和病蟲害</li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// 引入 Firebase 認證相關函數\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { mapActions } from 'vuex';\n\nexport default {\n  name: 'LoginView',\n  data() {\n    return {\n      mode: 'login',\n      username: '',\n      password: '',\n      characterName: '',\n      message: '',\n      messageType: 'info',\n      accounts: {},\n      isLoading: false\n    };\n  },\n  \n  computed: {\n    canSubmit() {\n      if (this.mode === 'login') {\n        return this.username.trim().length >= 3 && this.password.length >= 4;\n      } else {\n        return this.username.trim().length >= 3 && \n               this.password.length >= 4 && \n               this.characterName.trim().length >= 2;\n      }\n    }\n  },\n  \n  mounted() {\n    // 從 URL 獲取可能的錯誤訊息\n    if (this.$route.query.error) {\n      this.message = decodeURIComponent(this.$route.query.error);\n      this.messageType = 'error';\n      this.$router.replace({ path: this.$route.path });\n    }\n    \n    // 檢查是否已經登入\n    const auth = getAuth();\n    if (auth.currentUser) {\n      // 已經登入，直接導航到遊戲頁面\n      this.$router.push('/game');\n    } else {\n      // 仍然載入本地帳號以支持舊版功能\n      this.loadAccounts();\n    }\n  },\n  \n  methods: {\n    ...mapActions({\n      setCurrentUser: 'firebase/setCurrentUser',\n      loadGame: 'persistence/loadGame'\n    }),\n    \n    async handleSubmit() {\n      if (!this.canSubmit || this.isLoading) return;\n      \n      this.isLoading = true;\n      \n      if (this.mode === 'login') {\n        await this.loginUser();\n      } else {\n        await this.registerUser();\n      }\n      \n      this.isLoading = false;\n    },\n    \n    async loginUser() {\n      // 清除之前的錯誤訊息\n      this.message = '';\n      \n      try {\n        const auth = getAuth();\n        \n        // 使用 Firebase 進行登入\n        const userCredential = await signInWithEmailAndPassword(auth, this.username, this.password);\n        const user = userCredential.user;\n        \n        // 設置當前用戶到 Vuex\n        this.setCurrentUser(user);\n        \n        // 保存用戶信息到本地存儲\n        localStorage.setItem('beekeeper_current_user', user.uid);\n        \n        // 如果有顯示名稱，保存它\n        if (user.displayName) {\n          localStorage.setItem('beekeeper_name', user.displayName);\n        } else {\n          // 使用電子郵件前綴作為顯示名稱\n          const emailName = this.username.split('@')[0];\n          localStorage.setItem('beekeeper_name', emailName);\n        }\n        \n        // 登入成功，顯示訊息\n        this.message = '登入成功，正在載入遊戲...';\n        this.messageType = 'success';\n        \n        // 載入遊戲數據\n        await this.loadGame();\n        \n        // 導航到遊戲頁面\n        setTimeout(() => {\n          this.$router.push('/game');\n        }, 1000);\n      } catch (error) {\n        // 處理登入錯誤\n        console.error(\"登入錯誤:\", error);\n        \n        let errorMessage = '';\n        switch (error.code) {\n          case 'auth/invalid-email':\n            errorMessage = '無效的電子郵件格式';\n            break;\n          case 'auth/user-disabled':\n            errorMessage = '此帳號已被停用';\n            break;\n          case 'auth/user-not-found':\n            errorMessage = '找不到此用戶';\n            break;\n          case 'auth/wrong-password':\n            errorMessage = '密碼不正確';\n            break;\n          default:\n            errorMessage = `登入失敗: ${error.message}`;\n        }\n        \n        this.message = errorMessage;\n        this.messageType = 'error';\n        \n        // 回退到本地登入邏輯作為備選\n        this.localLoginUser();\n      }\n    },\n    \n    // 保留本地登入邏輯作為備選\n    localLoginUser() {\n      // 檢查帳號是否存在\n      if (!this.accounts[this.username]) {\n        this.message = '帳號不存在';\n        this.messageType = 'error';\n        return false;\n      }\n      \n      // 檢查密碼是否正確\n      if (this.accounts[this.username].password !== this.password) {\n        this.message = '密碼不正確';\n        this.messageType = 'error';\n        return false;\n      }\n      \n      // 登入成功，載入該帳號的遊戲數據\n      this.message = '登入成功，正在載入遊戲...';\n      this.messageType = 'success';\n      \n      // 設定當前使用者\n      localStorage.setItem('beekeeper_current_user', this.username);\n      localStorage.setItem('beekeeper_name', this.accounts[this.username].characterName);\n      \n      // 導航到遊戲頁面\n      setTimeout(() => {\n        this.$router.push('/game');\n      }, 1000);\n      \n      return true;\n    },\n    \n    async registerUser() {\n      // 清除之前的錯誤訊息\n      this.message = '';\n      \n      try {\n        const auth = getAuth();\n        \n        // 使用 Firebase 創建新用戶\n        const userCredential = await createUserWithEmailAndPassword(auth, this.username, this.password);\n        const user = userCredential.user;\n        \n        // 設置用戶顯示名稱\n        // 注意：需要單獨導入 updateProfile 函數\n        // import { updateProfile } from \"firebase/auth\";\n        // await updateProfile(user, {\n        //   displayName: this.characterName\n        // });\n        \n        // 設置當前用戶到 Vuex\n        this.setCurrentUser(user);\n        \n        // 保存用戶信息到本地存儲\n        localStorage.setItem('beekeeper_current_user', user.uid);\n        localStorage.setItem('beekeeper_name', this.characterName);\n        localStorage.setItem('beekeeper_new_game', 'true');  // 新帳號需要新遊戲\n        \n        // 同時保存到本地帳號系統以向後兼容\n        this.accounts[this.username] = {\n          password: this.password,\n          characterName: this.characterName,\n          created: Date.now(),\n          firebaseUid: user.uid\n        };\n        this.saveAccounts();\n        \n        // 註冊成功，顯示訊息\n        this.message = '帳號創建成功，正在進入遊戲...';\n        this.messageType = 'success';\n        \n        // 導航到遊戲頁面\n        setTimeout(() => {\n          this.$router.push('/game');\n        }, 1000);\n      } catch (error) {\n        // 處理註冊錯誤\n        console.error(\"註冊錯誤:\", error);\n        \n        let errorMessage = '';\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            errorMessage = '此電子郵件已被使用';\n            break;\n          case 'auth/invalid-email':\n            errorMessage = '無效的電子郵件格式';\n            break;\n          case 'auth/weak-password':\n            errorMessage = '密碼強度不足';\n            break;\n          default:\n            errorMessage = `註冊失敗: ${error.message}`;\n        }\n        \n        this.message = errorMessage;\n        this.messageType = 'error';\n      }\n    },\n    \n    // 保留原有的本地帳號管理方法\n    loadAccounts() {\n      // 從 localStorage 載入帳號信息\n      const accountsData = localStorage.getItem('beekeeper_accounts');\n      if (accountsData) {\n        try {\n          this.accounts = JSON.parse(accountsData);\n        } catch (e) {\n          console.error('解析帳號數據時出錯:', e);\n          this.accounts = {};\n        }\n      }\n      \n      // 如果有記住的用戶名，自動填充\n      const lastUser = localStorage.getItem('beekeeper_current_user');\n      if (lastUser && this.accounts[lastUser]) {\n        this.username = lastUser;\n      }\n    },\n    \n    saveAccounts() {\n      // 將帳號信息保存到 localStorage\n      localStorage.setItem('beekeeper_accounts', JSON.stringify(this.accounts));\n    }\n  }\n};\n</script>\n\n<style scoped>\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-size: cover;\n  background-position: center;\n  padding: 20px;\n}\n\n.login-card {\n  background-color: rgba(255, 255, 255, 0.9);\n  border-radius: 15px;\n  padding: 30px;\n  width: 100%;\n  max-width: 450px;\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);\n  text-align: center;\n  position: relative;\n}\n\nh1 {\n  color: #d4a017;\n  margin-bottom: 15px;\n  font-size: 2.5rem;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n}\n\n.game-description {\n  margin-bottom: 20px;\n  color: #5d4215;\n  font-size: 1.1rem;\n}\n\n.bee-animation {\n  margin: 15px 0;\n  height: 80px;\n  position: relative;\n}\n\n.bee-icon {\n  width: 60px;\n  height: 60px;\n  animation: flyBee 3s infinite alternate ease-in-out;\n  position: relative;\n}\n\n@keyframes flyBee {\n  0% { transform: translate(-30px, 5px) rotate(5deg); }\n  50% { transform: translate(30px, -10px) rotate(-5deg); }\n  100% { transform: translate(-10px, 0) rotate(10deg); }\n}\n\n.login-form {\n  margin: 20px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n}\n\n.mode-switch {\n  display: flex;\n  width: 100%;\n  margin-bottom: 20px;\n  border-radius: 25px;\n  overflow: hidden;\n  border: 2px solid #ffd24d;\n}\n\n.mode-button {\n  flex: 1;\n  padding: 10px;\n  border: none;\n  background-color: #f9f5ea;\n  color: #8c6d3c;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.mode-button.active {\n  background-color: #ffc226;\n  color: #5d4215;\n}\n\n.form-group {\n  width: 100%;\n  margin-bottom: 20px;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 8px;\n  font-weight: bold;\n  color: #5d4215;\n  font-size: 1.1rem;\n  text-align: left;\n}\n\ninput {\n  width: 100%;\n  padding: 12px 15px;\n  border: 2px solid #ffd24d;\n  border-radius: 25px;\n  font-size: 1rem;\n  background-color: rgba(255, 255, 255, 0.8);\n  color: #5d4215;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #d4a017;\n  box-shadow: 0 0 0 3px rgba(212, 160, 23, 0.3);\n}\n\n.submit-button {\n  margin-top: 10px;\n  padding: 12px 24px;\n  border: none;\n  border-radius: 25px;\n  font-size: 1.1rem;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.2s;\n  width: 180px;\n  background-color: #ffc226;\n  color: #5d4215;\n}\n\n.submit-button:hover {\n  background-color: #ffb300;\n  transform: translateY(-2px);\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n}\n\n.submit-button:disabled {\n  background-color: #d6d6d6;\n  color: #888;\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: none;\n}\n\n.message {\n  margin: 15px 0;\n  padding: 10px;\n  border-radius: 5px;\n  width: 100%;\n}\n\n.message.info {\n  color: #0c5460;\n  background-color: #d1ecf1;\n  border: 1px solid #bee5eb;\n}\n\n.message.error {\n  color: #721c24;\n  background-color: #f8d7da;\n  border: 1px solid #f5c6cb;\n}\n\n.message.success {\n  color: #155724;\n  background-color: #d4edda;\n  border: 1px solid #c3e6cb;\n}\n\n.game-features {\n  margin-top: 30px;\n  text-align: left;\n  background-color: rgba(255, 248, 230, 0.7);\n  padding: 15px;\n  border-radius: 10px;\n}\n\n.game-features h3 {\n  color: #d4a017;\n  margin-bottom: 10px;\n  text-align: center;\n}\n\n.game-features ul {\n  padding-left: 20px;\n}\n\n.game-features li {\n  margin-bottom: 8px;\n  color: #5d4215;\n}\n\n@media (max-width: 480px) {\n  .login-card {\n    padding: 20px;\n  }\n  \n  h1 {\n    font-size: 2rem;\n  }\n  \n  .game-description {\n    font-size: 1rem;\n  }\n  \n  .form-group {\n    margin-bottom: 15px;\n  }\n  \n  input {\n    padding: 10px 12px;\n  }\n  \n  .submit-button {\n    width: 100%;\n    padding: 10px 20px;\n  }\n}\n</style>","import { render } from \"./LoginView.vue?vue&type=template&id=0e0e9470&scoped=true\"\nimport script from \"./LoginView.vue?vue&type=script&lang=js\"\nexport * from \"./LoginView.vue?vue&type=script&lang=js\"\n\nimport \"./LoginView.vue?vue&type=style&index=0&id=0e0e9470&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0e0e9470\"]])\n\nexport default __exports__","<template>\n  <div class=\"game-container\">\n    <header>\n      <h1>養蜂達人</h1>\n      <div class=\"weather-display\">\n        <span id=\"weather-icon\">{{ currentWeather.icon }}</span>\n        <span id=\"weather-status\">{{ currentWeather.name }}</span>\n      </div>\n    </header>\n\n    <div class=\"resources-panel\">\n      <div class=\"resource\">\n        <img\n          src=\"@/assets/images/honeybee.png\"\n          alt=\"蜜蜂\"\n          class=\"resource-icon\"\n        />\n        <div class=\"resource-info\">\n          <span class=\"resource-name\">蜜蜂</span>\n          <span>{{ availableBees }}</span>\n        </div>\n      </div>\n      <div class=\"resource\">\n        <img\n          src=\"@/assets/images/honeyTotal.png\"\n          alt=\"蜂蜜\"\n          class=\"resource-icon\"\n        />\n        <div class=\"resource-info\">\n          <span class=\"resource-name\">蜂蜜 (kg)</span>\n          <span>{{ honey.toFixed(1) }}</span>\n        </div>\n      </div>\n      <div class=\"resource\">\n        <img src=\"@/assets/images/coin.png\" alt=\"金錢\" class=\"resource-icon\" />\n        <div class=\"resource-info\">\n          <span class=\"resource-name\">金錢</span>\n          <span>{{ money }}</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"hive-display\">\n      <h2>蜂巢狀況</h2>\n      <div class=\"hive-container\" ref=\"hiveContainer\">\n        <!-- 蜂巢將由Vue動態生成 -->\n      </div>\n      <div class=\"hive-stats\">\n        <div>\n          健康度: <span :style=\"healthColorStyle\">{{ hiveHealth }}%</span>\n        </div>\n        <div>\n          等級: <span>{{ hiveLevel }}</span>\n        </div>\n        <div>\n          產蜜效率:\n          <span>{{ honeyPerBeePerMinute.toFixed(2) }} kg/分鐘/蜂</span>\n        </div>\n        <div>\n          蜂箱容量: <span>{{ hiveCapacity }} 隻</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"action-panel\">\n      <button\n        @click=\"collectHoney\"\n        :disabled=\"!canCollectHoney\"\n        class=\"game-button\"\n      >\n        採集蜂蜜\n      </button>\n      <button @click=\"buyBee\" :disabled=\"!canBuyBee\" class=\"game-button\">\n        購買蜜蜂 (¥{{ beeCost }})\n      </button>\n      <button\n        @click=\"upgradeHive\"\n        :disabled=\"!canUpgradeHive\"\n        class=\"game-button\"\n      >\n        升級蜂巢 (¥{{ hiveUpgradeCost }})\n      </button>\n      <button @click=\"checkHive\" class=\"game-button\">檢查蜂巢</button>\n      <button @click=\"openForagingModal\" class=\"game-button special\">\n        採蜜任務\n      </button>\n      <button\n        @click=\"openHoneyStorage\"\n        class=\"game-button honey-storage-button\"\n        :disabled=\"disableButtons\"\n      >\n        <span class=\"icon\">🍯</span>\n        蜂蜜倉庫\n        <span class=\"badge\" v-if=\"hasNewOrders\">!</span>\n      </button>\n    </div>\n\n    <!-- 在 resources-panel 的下方添加兩個小框框 -->\n    <div class=\"game-panels\">\n      <div class=\"panel-buttons\">\n        <button @click=\"openTasksPanel\" class=\"panel-button tasks-button\">\n          <span class=\"icon\">📋</span>\n          任務\n          <span class=\"badge\" v-if=\"hasNewTasks\">!</span>\n        </button>\n\n        <button\n          @click=\"openAchievementsPanel\"\n          class=\"panel-button achievements-button\"\n        >\n          <span class=\"icon\">🏆</span>\n          成就\n          <span class=\"badge\" v-if=\"hasNewAchievements\">!</span>\n        </button>\n      </div>\n    </div>\n\n    <div class=\"challenges-panel\">\n      <h2>養蜂挑戰</h2>\n      <div\n        :class=\"['challenge-card', currentChallenge?.type]\"\n        v-if=\"currentChallenge\"\n        v-show=\"!challengeHidden\"\n      >\n        <h3>{{ currentChallenge.data.title }}</h3>\n        <p>{{ currentChallenge.data.description }}</p>\n        <div class=\"challenge-actions\">\n          <button\n            v-for=\"(solution, index) in currentChallenge.data.solutions\"\n            :key=\"index\"\n            @click=\"applySolution(solution)\"\n            class=\"challenge-button\"\n          >\n            {{ solution.name }}\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"notification-area\">\n      <!-- 通知將由Vue動態生成 -->\n    </div>\n\n    <div class=\"education-panel\">\n      <h2>今日養蜂知識</h2>\n      <p>{{ currentBeeFact }}</p>\n    </div>\n\n    <!-- 模態框覆蓋層 -->\n    <div\n      id=\"modal-overlay\"\n      class=\"modal-overlay\"\n      :class=\"{ active: isModalActive, hidden: !isModalActive }\"\n      @click=\"closeAllModals\"\n    ></div>\n\n    <!-- 採蜜任務模態框 -->\n    <foraging-modal\n      :is-active=\"isForagingModalActive\"\n      @close-modal=\"closeForagingModal\"\n      @start-mission=\"startForagingMission\"\n      @sell-all-honey=\"sellAllHoney\"\n      @update-selected-area=\"updateSelectedArea\"\n    />\n\n    <!-- 勞力任務模態框 -->\n    <labor-task-modal\n      v-if=\"$store.state.laborTasks && $store.state.laborTasks.currentTask\"\n      :task=\"$store.state.laborTasks\"\n      @complete=\"completeLaborTask\"\n    />\n\n    <honey-storage-modal\n      :is-active=\"isHoneyStorageModalActive\"\n      @close-modal=\"closeHoneyStorageModal\"\n    />\n\n    <tasks-modal\n      :is-active=\"isTasksModalActive\"\n      @close-modal=\"closeTasksModal\"\n    />\n\n    <achievements-modal\n      :is-active=\"isAchievementsModalActive\"\n      @close-modal=\"closeAchievementsModal\"\n    />\n  </div>\n</template>\n\n<script>\n  import { mapState, mapGetters, mapActions } from \"vuex\";\n  import ForagingModal from \"@/components/ForagingModal.vue\";\n  import LaborTaskModal from \"@/components/LaborTaskModal.vue\";\n  import HoneyStorageModal from \"@/components/HoneyStorageModal.vue\";\n  import TasksModal from \"@/components/TasksModal.vue\";\n  import AchievementsModal from \"@/components/AchievementsModal.vue\";\n\n  export default {\n    name: \"GameView\",\n    components: {\n      ForagingModal,\n      LaborTaskModal,\n      HoneyStorageModal,\n      TasksModal,\n      AchievementsModal,\n    },\n    data() {\n      return {\n        // 模態框狀態\n        isModalActive: false,\n        isForagingModalActive: false,\n        isHoneyStorageModalActive: false,\n        isTasksModalActive: false,\n        isAchievementsModalActive: false,\n      };\n    },\n    computed: {\n      ...mapState({\n        bees: (state) => state.bees.bees,\n        honey: (state) => state.honey.production || 0,\n        money: (state) => state.money,\n        hiveLevel: (state) => state.bees.hiveLevel,\n        hiveHealth: (state) => state.bees.hiveHealth,\n        hiveCapacity: (state) => state.bees.hiveCapacity,\n        honeyPerBeePerMinute: (state) => state.bees.honeyPerBeePerMinute,\n        beeCost: (state) => state.bees.costs.bee,\n        hiveUpgradeCost: (state) => state.bees.costs.hiveUpgrade,\n        currentChallenge: (state) => state.challenges.currentChallenge,\n        challengeHidden: (state) => state.challenges.challengeHidden,\n        currentBeeFact: (state) => state.currentBeeFact,\n        laborTask: (state) => state.laborTasks,\n        weatherTypes: (state) => state.weather.weatherTypes,\n      }),\n      ...mapGetters({\n        healthColorStyle: \"bees/healthColorStyle\",\n        canBuyBee: \"bees/canBuyBee\",\n        canUpgradeHive: \"bees/canUpgradeHive\",\n        canCollectHoney: \"honey/canCollectHoney\",\n        hasNewOrders: \"orders/hasNewOrders\",\n        currentWeather: \"weather/currentWeather\",\n        hasNewTasks: \"tasks/hasNewTasks\",\n        hasNewAchievements: \"achievements/hasNewAchievements\",\n        availableBees: \"bees/availableBees\",\n      }),\n      disableButtons() {\n        return (\n          this.$store.state.laborTasks &&\n          this.$store.state.laborTasks.currentTask !== null\n        );\n      },\n    },\n    mounted() {\n      // 先加載遊戲數據，再初始化遊戲邏輯\n      this.$store.dispatch(\"persistence/loadGame\").then(() => {\n        // 加載完成後再初始化遊戲\n        this.setupGame();\n\n        // 設置蜜蜂渲染\n        this.$nextTick(() => {\n          this.renderBees();\n        });\n      });\n\n      // 設置 bees 變化時重新渲染蜜蜂\n      this.$watch(\n        () => this.$store.state.bees.bees,\n        () => {\n          this.renderBees();\n        }\n      );\n\n      // 添加頁面關閉前的保存\n      window.addEventListener(\"beforeunload\", this.saveGameBeforeUnload);\n    },\n    beforeUnmount() {\n      // 移除事件監聽器\n      window.removeEventListener(\"beforeunload\", this.saveGameBeforeUnload);\n    },\n    methods: {\n      ...mapActions({\n        setupGame: \"setupGame\",\n        collectHoney: \"honey/collectHoney\",\n        buyBee: \"bees/buyBee\",\n        upgradeHive: \"bees/upgradeHive\",\n        checkHive: \"bees/checkHive\",\n        applySolution: \"challenges/applySolution\",\n        startForagingMission: \"foraging/startForagingMission\",\n        sellAllHoney: \"honey/sellAllHoney\",\n        updateSelectedArea: \"foraging/selectArea\",\n        completeLaborTask: \"laborTasks/progressTask\",\n      }),\n\n      // 開啟採蜜模態框\n      openForagingModal() {\n        this.isModalActive = true;\n        this.isForagingModalActive = true;\n      },\n\n      // 關閉採蜜模態框\n      closeForagingModal() {\n        this.isForagingModalActive = false;\n        this.isModalActive = false;\n      },\n\n      // 關閉所有模態框\n      closeAllModals(event) {\n        // 只有當點擊的是覆蓋層本身時才關閉\n        if (event.target.id === \"modal-overlay\") {\n          this.isForagingModalActive = false;\n          this.isModalActive = false;\n          this.isHoneyStorageModalActive = false;\n          this.isTasksModalActive = false;\n          this.isAchievementsModalActive = false;\n        }\n      },\n\n      // 渲染蜜蜂動畫\n      renderBees() {\n        const hiveContainer = this.$refs.hiveContainer;\n        if (!hiveContainer) return;\n\n        // 清空現有蜜蜂\n        while (hiveContainer.firstChild) {\n          hiveContainer.removeChild(hiveContainer.firstChild);\n        }\n\n        // 獲取容器尺寸，用於計算安全範圍\n        const containerWidth = hiveContainer.clientWidth;\n        const containerHeight = hiveContainer.clientHeight;\n\n        // 安全邊距 (讓蜜蜂不飛出容器)\n        const safeMargin = 30; // 像素\n\n        // 添加蜜蜂\n        for (let i = 0; i < this.availableBees; i++) {\n          const bee = document.createElement(\"div\");\n          bee.className = \"bee\";\n\n          // 計算安全的隨機位置 (避開邊緣)\n          // 使用百分比 20% - 80% 確保有足夠邊距\n          let left = Math.random() * 60 + 20; // 20% to 80%\n          let top = Math.random() * 60 + 20; // 20% to 80%\n\n          bee.style.left = `${left}%`;\n          bee.style.top = `${top}%`;\n\n          // 隨機飛行動畫延遲，讓蜜蜂不同步移動\n          bee.style.animationDelay = `${Math.random() * 5}s`;\n\n          // 計算最大安全飛行距離 (像素)\n          // 根據蜜蜂的初始位置計算安全飛行範圍\n          const posX = (left / 100) * containerWidth; // 轉換為像素\n          const posY = (top / 100) * containerHeight; // 轉換為像素\n\n          // 計算到各邊界的距離\n          const distToLeft = posX;\n          const distToRight = containerWidth - posX;\n          const distToTop = posY;\n          const distToBottom = containerHeight - posY;\n\n          // 安全飛行距離應該是到最近邊界距離的一半，再減去安全邊距\n          const maxSafeDistance =\n            Math.min(distToLeft, distToRight, distToTop, distToBottom) -\n            safeMargin;\n\n          // 確保最小值為 5px (避免負值)\n          const flyDistance = Math.min(Math.max(maxSafeDistance * 0.7, 5), 15);\n\n          // 設置 CSS 變數，定義隨機飛行軌跡\n          // 現在使用較小的範圍，確保不會飛出\n          bee.style.setProperty(\n            \"--x0\",\n            `${Math.random() * flyDistance - flyDistance / 2}px`\n          );\n          bee.style.setProperty(\n            \"--y0\",\n            `${Math.random() * flyDistance - flyDistance / 2}px`\n          );\n          bee.style.setProperty(\"--r0\", `${Math.random() * 20 - 10}deg`);\n\n          bee.style.setProperty(\n            \"--x25\",\n            `${Math.random() * flyDistance - flyDistance / 2}px`\n          );\n          bee.style.setProperty(\n            \"--y25\",\n            `${Math.random() * flyDistance - flyDistance / 2}px`\n          );\n          bee.style.setProperty(\"--r25\", `${Math.random() * 20 - 10}deg`);\n\n          bee.style.setProperty(\n            \"--x50\",\n            `${Math.random() * flyDistance - flyDistance / 2}px`\n          );\n          bee.style.setProperty(\n            \"--y50\",\n            `${Math.random() * flyDistance - flyDistance / 2}px`\n          );\n          bee.style.setProperty(\"--r50\", `${Math.random() * 20 - 10}deg`);\n\n          bee.style.setProperty(\n            \"--x75\",\n            `${Math.random() * flyDistance - flyDistance / 2}px`\n          );\n          bee.style.setProperty(\n            \"--y75\",\n            `${Math.random() * flyDistance - flyDistance / 2}px`\n          );\n          bee.style.setProperty(\"--r75\", `${Math.random() * 20 - 10}deg`);\n\n          bee.style.setProperty(\n            \"--x100\",\n            `${Math.random() * flyDistance - flyDistance / 2}px`\n          );\n          bee.style.setProperty(\n            \"--y100\",\n            `${Math.random() * flyDistance - flyDistance / 2}px`\n          );\n          bee.style.setProperty(\"--r100\", `${Math.random() * 20 - 10}deg`);\n\n          // 根據蜜蜂位置調整動畫時間 (更靠近中心的蜜蜂飛得慢一些)\n          const centerDistance = Math.sqrt(\n            Math.pow((left - 50) / 50, 2) + Math.pow((top - 50) / 50, 2)\n          );\n          // 3-7秒，中心較慢，邊緣較快\n          const animationDuration = 3 + (1 - centerDistance) * 4;\n          bee.style.animationDuration = `${animationDuration}s`;\n\n          hiveContainer.appendChild(bee);\n        }\n      },\n\n      openHoneyStorage() {\n        this.isHoneyStorageModalActive = true;\n        this.isModalActive = true;\n      },\n\n      // 關閉蜂蜜倉庫\n      closeHoneyStorageModal() {\n        this.isHoneyStorageModalActive = false;\n        this.isModalActive = false;\n      },\n\n      openTasksPanel() {\n        this.isTasksModalActive = true;\n        this.isModalActive = true;\n      },\n\n      closeTasksModal() {\n        this.isTasksModalActive = false;\n        this.isModalActive = false;\n      },\n\n      openAchievementsPanel() {\n        this.isAchievementsModalActive = true;\n        this.isModalActive = true;\n      },\n\n      closeAchievementsModal() {\n        this.isAchievementsModalActive = false;\n        this.isModalActive = false;\n      },\n\n      saveGameBeforeUnload() {\n        this.$store.dispatch(\"persistence/saveGame\");\n      },\n    },\n  };\n</script>\n\n<style>\n  /* 匯入原始CSS樣式 */\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: \"微軟正黑體\", Arial, sans-serif;\n  }\n\n  body {\n    background-color: #f5f0e5;\n    color: #453018;\n    line-height: 1.6;\n  }\n\n  .game-container {\n    max-width: 900px;\n    margin: 20px auto;\n    padding: 20px;\n    background-color: rgba(255, 255, 255, 0.9);\n    border-radius: 15px;\n    box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);\n  }\n\n  header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n    padding-bottom: 10px;\n    border-bottom: 2px solid #ffd24d;\n  }\n\n  h1 {\n    color: #d4a017;\n    font-size: 2.2rem;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);\n  }\n\n  h2 {\n    color: #b38728;\n    font-size: 1.5rem;\n    margin-bottom: 10px;\n    border-bottom: 1px solid #ffd24d;\n    padding-bottom: 5px;\n  }\n\n  /* 天氣顯示 */\n  .weather-display {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    font-size: 1.2rem;\n    padding: 5px 15px;\n    background-color: #e9f5ff;\n    border-radius: 20px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  }\n\n  #weather-icon {\n    font-size: 2rem;\n  }\n\n  /* 資源面板 */\n  .resources-panel {\n    display: flex;\n    justify-content: space-around;\n    margin-bottom: 25px;\n    padding: 15px;\n    background-color: #fff8e6;\n    border-radius: 10px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\n  }\n\n  .resource {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n  }\n\n  .resource-icon {\n    width: 40px;\n    height: 40px;\n    object-fit: contain;\n  }\n\n  .resource-info {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .resource-name {\n    font-size: 0.9rem;\n    color: #6a5a3e;\n  }\n\n  /* 蜂巢顯示區域 */\n  .hive-display {\n    margin-bottom: 25px;\n    padding: 20px;\n    background-color: #fefaf0;\n    border-radius: 10px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\n  }\n\n  .hive-container {\n    display: flex;\n    justify-content: center;\n    margin: 20px 0;\n    height: 150px;\n    background-size: contain;\n    position: relative;\n  }\n\n  .bee {\n    position: absolute !important;\n    width: 20px !important;\n    height: 20px !important;\n    background: url(\"@/assets/images/bee-sprite.png\") no-repeat !important;\n    background-size: contain !important;\n    animation: fly 5s infinite alternate !important;\n    z-index: 10;\n  }\n\n  @keyframes fly {\n    0% {\n      transform: translate(var(--x0, 0), var(--y0, 0)) rotate(var(--r0, 0deg));\n    }\n    20% {\n      transform: translate(var(--x25, 5px), var(--y25, 5px))\n        rotate(var(--r25, 5deg));\n    }\n    40% {\n      transform: translate(var(--x50, -5px), var(--y50, 5px))\n        rotate(var(--r50, -5deg));\n    }\n    60% {\n      transform: translate(var(--x75, 5px), var(--y75, -5px))\n        rotate(var(--r75, 5deg));\n    }\n    80% {\n      transform: translate(var(--x100, -5px), var(--y100, -5px))\n        rotate(var(--r100, -5deg));\n    }\n    100% {\n      transform: translate(var(--x0, 0), var(--y0, 0)) rotate(var(--r0, 0deg)); /* 回到起點 */\n    }\n  }\n\n  .hive-stats {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 10px;\n    font-size: 0.95rem;\n  }\n\n  .hive-stats span {\n    font-weight: bold;\n    color: #8c6d3c;\n  }\n\n  /* 操作按鈕區 */\n  .action-panel {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 15px;\n    margin-bottom: 25px;\n    justify-content: center;\n  }\n\n  .game-button {\n    padding: 12px 20px;\n    border: none;\n    border-radius: 25px;\n    background-color: #ffc226;\n    color: #5d4215;\n    font-size: 1rem;\n    font-weight: bold;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\n  }\n\n  .game-button:hover {\n    background-color: #ffb300;\n    transform: translateY(-2px);\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.15);\n  }\n\n  .game-button:active {\n    transform: translateY(1px);\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  }\n\n  .game-button:disabled {\n    background-color: #d6d6d6;\n    color: #888;\n    cursor: not-allowed;\n    transform: none;\n    box-shadow: none;\n  }\n\n  /* 挑戰面板 */\n  .challenges-panel {\n    margin-bottom: 25px;\n    padding: 15px;\n    background-color: #fff8e6;\n    border-radius: 10px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\n  }\n\n  .challenge-card {\n    background-color: #fff;\n    border-radius: 12px;\n    padding: 20px;\n    margin-top: 15px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    border-left: 5px solid #ff9800;\n    transition: transform 0.2s ease;\n  }\n\n  .challenge-card.weather {\n    border-left-color: #42a5f5;\n  }\n\n  .challenge-card.pest {\n    border-left-color: #ef5350;\n  }\n\n  .challenge-card.environment {\n    border-left-color: #66bb6a;\n  }\n\n  .challenge-card h3 {\n    margin-bottom: 8px;\n    color: #d46700;\n  }\n\n  .challenge-actions {\n    display: flex;\n    gap: 10px;\n    margin-top: 15px;\n  }\n\n  .challenge-button {\n    padding: 8px 15px;\n    border: none;\n    border-radius: 20px;\n    background-color: #8c6d3c;\n    color: white;\n    cursor: pointer;\n    transition: background-color 0.3s;\n  }\n\n  .challenge-button:hover {\n    background-color: #6a512a;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  /* 通知區域 */\n  .notification-area {\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    max-width: 300px;\n    z-index: 999;\n  }\n\n  .notification {\n    padding: 12px 20px;\n    background-color: rgba(255, 255, 255, 0.95);\n    border-radius: 8px;\n    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);\n    animation: slideIn 0.3s forwards;\n    border-left: 5px solid #4caf50;\n    font-size: 0.9rem;\n  }\n\n  .notification.danger {\n    border-left-color: #f44336;\n  }\n\n  .notification.warning {\n    border-left-color: #ff9800;\n  }\n\n  .notification.info {\n    border-left-color: #2196f3;\n  }\n\n  @keyframes slideIn {\n    from {\n      transform: translateX(100%);\n      opacity: 0;\n    }\n    to {\n      transform: translateX(0);\n      opacity: 1;\n    }\n  }\n\n  @keyframes slideOut {\n    from {\n      transform: translateX(0);\n      opacity: 1;\n    }\n    to {\n      transform: translateX(100%);\n      opacity: 0;\n    }\n  }\n\n  /* 知識面板 */\n  .education-panel {\n    padding: 15px;\n    background-color: #e7f5e4;\n    border-radius: 10px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\n  }\n\n  .honey-storage-button {\n    background-color: #ffcc00 !important;\n    color: #8b5a00 !important;\n    position: relative;\n  }\n\n  .badge {\n    position: absolute;\n    top: -5px;\n    right: -5px;\n    background-color: #e53935;\n    color: white;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 14px;\n    font-weight: bold;\n  }\n\n  /* 響應式設計 */\n  @media (max-width: 768px) {\n    .resources-panel {\n      flex-direction: column;\n      gap: 15px;\n    }\n\n    .action-panel {\n      flex-direction: column;\n    }\n\n    .game-button {\n      width: 100%;\n    }\n  }\n\n  /* 模態框基本樣式 */\n  .modal-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.7);\n    z-index: 1000;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    opacity: 0;\n    transition: opacity 0.3s ease;\n  }\n\n  .modal-overlay.active {\n    opacity: 1;\n  }\n\n  .modal {\n    background-color: #fff;\n    border-radius: 15px;\n    width: 90%;\n    max-width: 900px;\n    max-height: 85vh;\n    overflow: hidden;\n    box-shadow: 0 5px 30px rgba(0, 0, 0, 0.3);\n    display: flex;\n    flex-direction: column;\n    transform: translateY(50px);\n    opacity: 0;\n    transition: all 0.3s ease;\n    z-index: 1001;\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) translateY(50px);\n  }\n\n  .modal.active {\n    opacity: 1;\n    transform: translate(-50%, -50%) translateY(0);\n  }\n\n  /* 特殊按鈕樣式 */\n  .game-button.special {\n    background-color: #63b3ed;\n    color: #fff;\n  }\n\n  .game-button.special:hover {\n    background-color: #4299e1;\n  }\n\n  /* 新增的面板樣式 */\n  .game-panels {\n    display: flex;\n    justify-content: flex-end;\n    margin-bottom: 15px;\n  }\n\n  .panel-buttons {\n    display: flex;\n    gap: 10px;\n  }\n\n  .panel-button {\n    display: flex;\n    align-items: center;\n    gap: 10px; /* 增加間距 */\n    padding: 8px 15px 8px 35px; /* 左側增加更多間距給圖示 */\n    border: none;\n    border-radius: 20px;\n    font-size: 0.9rem;\n    font-weight: bold;\n    cursor: pointer;\n    transition: all 0.2s;\n    position: relative; /* 保持相對定位 */\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  }\n\n  .panel-button:hover {\n    background-color: #0077cc;\n    transform: translateY(-2px);\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.15);\n  }\n\n  .panel-button:active {\n    transform: translateY(1px);\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  }\n\n  .panel-button .badge {\n    position: absolute;\n    top: -5px; /* 改為 -5px */\n    right: -5px; /* 改為 -5px */\n    background-color: #e53935;\n    color: white;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 14px;\n    font-weight: bold;\n  }\n\n  .panel-button .icon {\n    position: absolute;\n    left: 10px;\n    top: 50%;\n    transform: translateY(-50%);\n    font-size: 1.2rem;\n  }\n\n  .tasks-button {\n    background-color: #f9a825;\n    color: #fff;\n  }\n\n  .tasks-button:hover {\n    background-color: #f57f17;\n    transform: translateY(-2px);\n  }\n\n  .achievements-button {\n    background-color: #7b1fa2;\n    color: #fff;\n  }\n\n  .achievements-button:hover {\n    background-color: #6a1b9a;\n    transform: translateY(-2px);\n  }\n\n  .panel-button .badge {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    background-color: #e53935;\n    color: white;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 14px;\n    font-weight: bold;\n  }\n</style>\n","<template>\n  <div class=\"modal\" :class=\"{ active: isActive, hidden: !isActive }\">\n    <div class=\"modal-header\">\n      <h2>採蜜任務中心</h2>\n      <button class=\"modal-close\" @click=\"$emit('close-modal')\">&times;</button>\n    </div>\n    <div class=\"modal-content\">\n      <div class=\"modal-tabs\">\n        <button\n          v-for=\"(tab, index) in tabs\"\n          :key=\"index\"\n          :class=\"['tab-button', { active: activeTab === tab.id }]\"\n          @click=\"activeTab = tab.id\"\n        >\n          {{ tab.name }}\n        </button>\n      </div>\n\n      <div class=\"tab-content\">\n        <!-- 採蜜區域標籤頁 -->\n        <div :class=\"['tab-pane', { active: activeTab === 'areas-tab' }]\">\n          <div class=\"area-selection\">\n            <h3>選擇採蜜區域</h3>\n            <div class=\"area-grid\">\n              <div\n                v-for=\"area in areas\"\n                :key=\"area.id\"\n                :class=\"[\n                  'area-card',\n                  {\n                    locked: area.locked,\n                    selected: selectedArea === area.id,\n                  },\n                ]\"\n                :data-area=\"area.id\"\n                @click=\"selectArea(area)\"\n              >\n                <div :class=\"['area-image', area.id]\"></div>\n                <h4>{{ area.name }}</h4>\n                <p>{{ area.description }}</p>\n                <div v-if=\"!area.locked\" class=\"area-stats\">\n                  <span class=\"area-stat\"\n                    >收益：<span class=\"yield\">{{ area.yield }}</span></span\n                  >\n                  <span class=\"area-stat\"\n                    >風險：<span :class=\"['risk', area.riskLevel]\">{{\n                      area.risk\n                    }}</span></span\n                  >\n                  <span class=\"area-stat\"\n                    >時間：<span class=\"time\">{{ area.time }}</span></span\n                  >\n                </div>\n                <div v-if=\"area.locked\" class=\"lock-icon\">🔒</div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"mission-setup\">\n            <h3>派遣採蜜隊伍</h3>\n            <div class=\"mission-form\">\n              <div class=\"form-group\">\n                <label for=\"bees-assigned\">指派蜜蜂數量：</label>\n                <div class=\"slider-container\">\n                  <input\n                    type=\"range\"\n                    id=\"bees-assigned\"\n                    :min=\"1\"\n                    :max=\"maxBeesAssignable\"\n                    v-model.number=\"beesAssigned\"\n                    class=\"slider\"\n                  />\n                  <span>{{ beesAssigned }}</span> 隻\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label>採集時間：</label>\n                <div class=\"duration-buttons\">\n                  <button\n                    type=\"button\"\n                    class=\"duration-button\"\n                    :class=\"{ active: missionDuration === 'short' }\"\n                    @click=\"missionDuration = 'short'\"\n                  >\n                    短程\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"duration-button\"\n                    :class=\"{ active: missionDuration === 'medium' }\"\n                    @click=\"missionDuration = 'medium'\"\n                  >\n                    中程\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"duration-button\"\n                    :class=\"{ active: missionDuration === 'long' }\"\n                    @click=\"missionDuration = 'long'\"\n                  >\n                    長程\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-info\">\n                <div>\n                  預計收穫：<span>{{ expectedYield }}</span>\n                </div>\n                <div>\n                  風險評估：<span>{{ missionRisk }}</span>\n                </div>\n              </div>\n              <button\n                @click=\"startMission\"\n                class=\"game-button mission-button\"\n                :disabled=\"!canStartMission\"\n              >\n                開始採蜜任務\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- 進行中任務標籤頁 -->\n        <div :class=\"['tab-pane', { active: activeTab === 'missions-tab' }]\">\n          <h3>進行中的任務</h3>\n          <div class=\"missions-container\">\n            <div v-if=\"activeMissions.length === 0\" class=\"empty-missions\">\n              目前沒有進行中的採蜜任務\n            </div>\n            <div\n              v-for=\"(mission, index) in localMissions\"\n              :key=\"mission.id || index\"\n              class=\"mission-card\"\n            >\n              <div class=\"mission-header\">\n                <div>\n                  <div class=\"mission-title\">採蜜任務 #{{ index + 1 }}</div>\n                  <div class=\"mission-area\">\n                    {{ getAreaName(mission.area) }}\n                  </div>\n                </div>\n                <div class=\"mission-timer\">\n                  {{ formatTime(mission.timeRemaining) }}\n                </div>\n              </div>\n              <div class=\"mission-details\">\n                <div>指派蜜蜂：{{ mission.bees }} 隻</div>\n                <div>風險等級：{{ mission.risk }}</div>\n              </div>\n              <div class=\"mission-progress\">\n                <div\n                  class=\"progress-bar\"\n                  :style=\"{ width: mission.progress + '%' }\"\n                ></div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 替換花蜜收集標籤頁為戰損報告標籤頁 -->\n        <div :class=\"['tab-pane', { active: activeTab === 'report-tab' }]\">\n          <h3>採蜜任務報告</h3>\n\n          <div class=\"report-section\">\n            <h4>總體統計</h4>\n            <div class=\"report-stats\">\n              <div class=\"stat-item\">\n                <div class=\"stat-label\">總採蜜任務</div>\n                <div class=\"stat-value\">{{ missionStats.totalMissions }}</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-label\">成功任務</div>\n                <div class=\"stat-value\">{{ missionStats.successMissions }}</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-label\">失敗任務</div>\n                <div class=\"stat-value\">{{ missionStats.failedMissions }}</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-label\">成功率</div>\n                <div class=\"stat-value\">{{ calculateSuccessRate() }}%</div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"report-section\">\n            <h4>蜂蜜收穫統計 (已存入倉庫)</h4>\n            <div class=\"honey-stats\">\n              <div\n                v-for=\"honey in honeyTypes\"\n                :key=\"honey.id\"\n                class=\"honey-stat\"\n              >\n                <div\n                  class=\"honey-icon\"\n                  :style=\"{ backgroundColor: getHoneyColor(honey.id) }\"\n                ></div>\n                <div class=\"honey-name\">{{ honey.name }}</div>\n                <div class=\"honey-amount\">\n                  {{ getHoneyAmount(honey.id) }} kg\n                </div>\n                <div class=\"honey-value\">\n                  價值: {{ calculateHoneyValue(honey.id) }} 元\n                </div>\n              </div>\n            </div>\n            <div class=\"total-honey\">\n              <div>總收穫量: {{ calculateTotalHoney() }} kg</div>\n              <div>總價值: {{ calculateTotalValue() }} 元</div>\n              <div class=\"storage-status\">\n                <span class=\"status-icon\">✓</span> 已存入倉庫\n              </div>\n            </div>\n          </div>\n\n          <div class=\"report-section\">\n            <h4>最近任務記錄</h4>\n            <div class=\"mission-history\">\n              <div v-if=\"missionHistory.length === 0\" class=\"empty-history\">\n                尚無任務記錄\n              </div>\n              <div\n                v-for=\"(mission, index) in missionHistory\"\n                :key=\"index\"\n                class=\"mission-record\"\n              >\n                <div class=\"mission-record-header\">\n                  <div\n                    :class=\"[\n                      'status-indicator',\n                      mission.success ? 'success' : 'failure',\n                    ]\"\n                  ></div>\n                  <div class=\"mission-area-name\">\n                    {{ getAreaName(mission.area) }}\n                  </div>\n                  <div class=\"mission-date\">{{ formatDate(mission.date) }}</div>\n                </div>\n                <div class=\"mission-record-details\">\n                  <div>蜜蜂數量: {{ mission.bees }} 隻</div>\n                  <div>風險等級: {{ mission.risk }}</div>\n                  <div v-if=\"mission.success\" class=\"mission-harvest\">\n                    <div class=\"harvest-header\">收穫:</div>\n                    <div class=\"harvest-grid\">\n                      <div\n                        v-for=\"item in formatHoneyGain(mission.rewards)\"\n                        :key=\"item.id\"\n                        class=\"harvest-item\"\n                      >\n                        <div\n                          class=\"honey-dot\"\n                          :style=\"{ backgroundColor: getHoneyColor(item.id) }\"\n                        ></div>\n                        <div class=\"honey-info\">\n                          <span class=\"honey-name\">{{ item.name }}</span>\n                          <span\n                            class=\"honey-amount\"\n                            :class=\"{ zero: item.amount === 0 }\"\n                          >\n                            {{ item.amount.toFixed(1) }} kg\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div v-else>\n                    損失:\n                    {{\n                      mission.lostBees > 0 ? `${mission.lostBees} 隻蜜蜂` : \"無\"\n                    }}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { mapState, mapActions } from \"vuex\";\n\n  export default {\n    name: \"ForagingModal\",\n    props: {\n      isActive: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    data() {\n      return {\n        activeTab: \"areas-tab\",\n        beesAssigned: 1,\n        missionDuration: \"short\",\n        selectedArea: null, // 本地追蹤選擇的區域\n        tabs: [\n          { id: \"areas-tab\", name: \"採蜜區域\" },\n          { id: \"missions-tab\", name: \"進行中任務\" },\n          { id: \"report-tab\", name: \"採蜜報告\" },\n        ],\n        missionStats: {\n          totalMissions: 0,\n          successMissions: 0,\n          failedMissions: 0,\n        },\n        missionHistory: [], // 最近的任務記錄\n\n        // 蜂蜜顏色\n        honeyColors: {\n          common: \"#ffcc00\",\n          wildflower: \"#ffa64d\",\n          mountain: \"#996633\",\n          rare: \"#e64d00\",\n        },\n        areas: [\n          {\n            id: \"meadow\",\n            name: \"花草草地\",\n            description: \"常見花蜜，安全性高\",\n            yield: \"普通\",\n            risk: \"低\",\n            riskLevel: \"low\",\n            time: \"短\",\n            locked: false,\n          },\n          {\n            id: \"forest\",\n            name: \"深林山谷\",\n            description: \"野花蜜源，品質較佳\",\n            yield: \"良好\",\n            risk: \"中\",\n            riskLevel: \"medium\",\n            time: \"中\",\n            locked: false,\n          },\n          {\n            id: \"mountain\",\n            name: \"高山草原\",\n            description: \"高海拔蜜源，稀有花種\",\n            yield: \"優質\",\n            risk: \"高\",\n            riskLevel: \"high\",\n            time: \"長\",\n            locked: false,\n          },\n          {\n            id: \"orchard\",\n            name: \"果園花區\",\n            description: \"需達到蜂巢3級解鎖\",\n            locked: true,\n            minLevel: 3,\n          },\n          {\n            id: \"rare\",\n            name: \"稀有花園\",\n            description: \"需達到蜂巢5級解鎖\",\n            locked: true,\n            minLevel: 5,\n          },\n        ],\n        honeyTypes: [\n          { id: \"common\", name: \"普通花蜜\", price: 10 },\n          { id: \"wildflower\", name: \"野花蜜\", price: 15 },\n          { id: \"mountain\", name: \"高山花蜜\", price: 25 },\n          { id: \"rare\", name: \"稀有花蜜\", price: 50 },\n        ],\n        missionTimer: null, // 用於定時更新任務時間的計時器\n        localMissions: [],\n      };\n    },\n    computed: {\n      ...mapState({\n        bees: (state) => state.bees.bees,\n        hiveLevel: (state) => state.bees.hiveLevel,\n        storeSelectedArea: (state) => state.foraging.selectedArea,\n        foragingAreas: (state) => state.foraging.areas,\n        activeMissions: (state) => state.foraging.activeMissions,\n        honeyCollected: (state) => state.foraging.honeyCollected,\n        storedMissionStats: (state) => state.foraging.missionStats,\n        storedMissionHistory: (state) => state.foraging.missionHistory,\n      }),\n      maxBeesAssignable() {\n        // 考慮可用蜜蜂數量而不是總數\n        const availableBees = this.bees - this.calculateAssignedBees();\n\n        // 確保有足夠蜜蜂滿足所選區域的最低需求\n        if (this.selectedArea) {\n          const area = this.foragingAreas[this.selectedArea];\n          if (area && availableBees < area.beeCount) {\n            return 0; // 不夠滿足最低需求\n          }\n        }\n\n        return Math.min(10, availableBees); // 最多可派遣10隻蜜蜂\n      },\n      expectedYield() {\n        if (!this.selectedArea) return \"請選擇區域\";\n\n        const area = this.areas.find((a) => a.id === this.selectedArea);\n        let yieldValue = \"\";\n\n        switch (area.id) {\n          case \"meadow\":\n            yieldValue =\n              this.beesAssigned <= 2 ? \"少量普通花蜜\" : \"中量普通花蜜\";\n            break;\n          case \"forest\":\n            yieldValue = this.beesAssigned <= 2 ? \"少量野花蜜\" : \"中量野花蜜\";\n            break;\n          case \"mountain\":\n            yieldValue =\n              this.beesAssigned <= 2 ? \"少量高山花蜜\" : \"中量高山花蜜\";\n            break;\n          default:\n            yieldValue = \"少量普通花蜜\";\n        }\n\n        if (this.missionDuration === \"medium\") {\n          yieldValue = yieldValue\n            .replace(\"少量\", \"中量\")\n            .replace(\"中量\", \"大量\");\n        } else if (this.missionDuration === \"long\") {\n          yieldValue = yieldValue\n            .replace(\"少量\", \"大量\")\n            .replace(\"中量\", \"豐富\");\n        }\n\n        return yieldValue;\n      },\n      missionRisk() {\n        if (!this.selectedArea) return \"未知\";\n\n        const area = this.areas.find((a) => a.id === this.selectedArea);\n        let risk = \"\";\n\n        switch (area.riskLevel) {\n          case \"low\":\n            risk = this.beesAssigned <= 2 ? \"極低\" : \"低\";\n            break;\n          case \"medium\":\n            risk = this.beesAssigned <= 2 ? \"低\" : \"中\";\n            break;\n          case \"high\":\n            risk = this.beesAssigned <= 2 ? \"中\" : \"高\";\n            break;\n          default:\n            risk = \"未知\";\n        }\n\n        if (this.missionDuration === \"medium\") {\n          if (risk === \"極低\") risk = \"低\";\n          else if (risk === \"低\") risk = \"中\";\n          else if (risk === \"中\") risk = \"高\";\n        } else if (this.missionDuration === \"long\") {\n          if (risk === \"極低\") risk = \"中\";\n          else if (risk === \"低\") risk = \"高\";\n          else if (risk === \"中\") risk = \"極高\";\n        }\n\n        return risk;\n      },\n      canStartMission() {\n        return (\n          this.selectedArea &&\n          this.beesAssigned > 0 &&\n          this.beesAssigned <= this.bees\n        );\n      },\n    },\n    watch: {\n      // 當 store 中的 selectedArea 變化時同步到本地狀態\n      storeSelectedArea(newVal) {\n        this.selectedArea = newVal;\n      },\n      storedMissionStats: {\n        handler(newVal) {\n          this.missionStats = { ...newVal };\n        },\n        deep: true,\n        immediate: true,\n      },\n      storedMissionHistory: {\n        handler(newVal) {\n          this.missionHistory = [...newVal];\n        },\n        deep: true,\n        immediate: true,\n      },\n      activeMissions: {\n        handler(missions) {\n          console.log(\"活動任務更新:\", missions.length);\n          this.updateLocalMissions(missions);\n        },\n        deep: true,\n        immediate: true,\n      },\n    },\n    mounted() {\n      // 更新區域解鎖狀態\n      this.checkAndUnlockAreas();\n\n      // 初始化本地區域選擇狀態\n      this.selectedArea = this.storeSelectedArea;\n      this.startMissionTimer();\n    },\n    updated() {\n      // 如果是進行中任務標籤頁，確保計時器啟動\n      if (\n        this.activeTab === \"missions-tab\" &&\n        this.activeMissions.length > 0 &&\n        !this.missionTimer\n      ) {\n        this.startMissionTimer();\n      }\n    },\n    beforeUnmount() {\n      // 組件銷毀前清除計時器\n      this.clearMissionTimer();\n    },\n\n    methods: {\n      ...mapActions({\n        updateSelectedArea: \"foraging/selectArea\",\n        startForagingMission: \"foraging/startForagingMission\",\n      }),\n      selectArea(area) {\n        if (area.locked) return;\n\n        // 更新本地選擇狀態\n        this.selectedArea = area.id;\n\n        // 通過 Vuex action 更新全局狀態\n        this.updateSelectedArea(area.id);\n      },\n\n      startMission() {\n        if (!this.canStartMission) return;\n\n        const area = this.foragingAreas[this.selectedArea];\n        if (area) {\n          console.log(`該區域基礎時間: ${area.baseDuration}秒`);\n        }\n\n        const missionData = {\n          area: this.selectedArea,\n          bees: parseInt(this.beesAssigned),\n          duration: this.missionDuration,\n          risk: this.missionRisk,\n        };\n\n        // 使用 Vuex action 啟動任務\n        this.startForagingMission(missionData);\n\n        // 重置表單\n        this.beesAssigned = 1;\n        this.missionDuration = \"short\";\n\n        // 切換到進行中任務標籤\n        this.activeTab = \"missions-tab\";\n\n        // 可選：平滑滾動到頂部\n        this.$nextTick(() => {\n          const modalContent = document.querySelector(\".modal-content\");\n          if (modalContent) {\n            modalContent.scrollTo({\n              top: 0,\n              behavior: \"smooth\",\n            });\n          }\n        });\n      },\n\n      checkAndUnlockAreas() {\n        // 根據蜂巢等級解鎖區域，但只更新本地數據\n        this.areas.forEach((area) => {\n          if (area.minLevel && this.hiveLevel >= area.minLevel) {\n            area.locked = false;\n          }\n        });\n      },\n\n      getAreaName(areaId) {\n        const area = this.areas.find((a) => a.id === areaId);\n        return area ? area.name : \"未知區域\";\n      },\n\n      formatTime(seconds) {\n        if (!seconds && seconds !== 0) return \"--:--\";\n\n        const mins = Math.floor(seconds / 60);\n        const secs = Math.floor(seconds % 60);\n        return `${mins.toString().padStart(2, \"0\")}:${secs\n          .toString()\n          .padStart(2, \"0\")}`;\n      },\n\n      getHoneyAmount(honeyType) {\n        // 安全地獲取蜂蜜數量，避免未定義錯誤\n        if (\n          this.honeyCollected &&\n          this.honeyCollected[honeyType] !== undefined\n        ) {\n          return this.honeyCollected[honeyType].toFixed(1);\n        }\n        return \"0.0\";\n      },\n\n      // 計算成功率\n      calculateSuccessRate() {\n        if (this.missionStats.totalMissions === 0) return \"0.0\";\n        const rate =\n          (this.missionStats.successMissions /\n            this.missionStats.totalMissions) *\n          100;\n        return rate.toFixed(1);\n      },\n\n      // 獲取蜂蜜顏色\n      getHoneyColor(type) {\n        return this.honeyColors[type] || \"#ffcc00\";\n      },\n\n      // 計算蜂蜜價值\n      calculateHoneyValue(type) {\n        const honey = this.honeyTypes.find((h) => h.id === type);\n        const amount = this.getHoneyAmount(type);\n        return (honey.price * parseFloat(amount)).toFixed(0);\n      },\n\n      // 計算總蜂蜜量\n      calculateTotalHoney() {\n        if (!this.honeyCollected) return \"0.0\";\n\n        const total = Object.values(this.honeyCollected).reduce(\n          (sum, val) => sum + (val || 0),\n          0\n        );\n        return total.toFixed(1);\n      },\n\n      // 計算總價值\n      calculateTotalValue() {\n        if (!this.honeyCollected) return \"0\";\n\n        let total = 0;\n        this.honeyTypes.forEach((honey) => {\n          const amount = this.honeyCollected[honey.id] || 0;\n          total += amount * honey.price;\n        });\n\n        return total.toFixed(0);\n      },\n\n      calculateAssignedBees() {\n        return this.activeMissions.reduce((total, mission) => {\n          return total + mission.bees;\n        }, 0);\n      },\n\n      // 格式化日期\n      formatDate(timestamp) {\n        const date = new Date(timestamp);\n        return `${\n          date.getMonth() + 1\n        }/${date.getDate()} ${date.getHours()}:${date\n          .getMinutes()\n          .toString()\n          .padStart(2, \"0\")}`;\n      },\n\n      // 格式化蜂蜜獲取\n      formatHoneyGain(rewards) {\n        if (!rewards) return \"無收穫\";\n\n        // 列出所有蜂蜜類型\n        const allTypes = this.honeyTypes.map((h) => h.id);\n\n        // 使用表格格式顯示所有蜂蜜類型的收穫\n        return allTypes.map((type) => {\n          const honey = this.honeyTypes.find((h) => h.id === type);\n          const amount = rewards[type] || 0;\n          return {\n            id: type,\n            name: honey ? honey.name : type,\n            amount: amount,\n          };\n        });\n      },\n\n      updateLocalMissions(missions) {\n        this.localMissions = missions.map((mission) => {\n          // 計算剩餘時間（毫秒）\n          const now = Date.now();\n          const timeRemaining = Math.max(0, mission.endTime - now);\n\n          // 計算進度百分比\n          const totalDuration = mission.endTime - mission.startTime;\n          const elapsed = now - mission.startTime;\n          const progress = Math.min(\n            100,\n            Math.max(0, (elapsed / totalDuration) * 100)\n          );\n\n          return {\n            ...mission,\n            timeRemaining: Math.floor(timeRemaining / 1000), // 轉換為秒\n            progress: progress.toFixed(1),\n          };\n        });\n      },\n\n      // 開始計時器，定期更新任務時間\n      startMissionTimer() {\n        // 先清除現有計時器\n        this.clearMissionTimer();\n\n        // 設置新計時器，每秒更新一次\n        this.missionTimer = setInterval(() => {\n          if (this.activeMissions.length > 0) {\n            this.updateLocalMissions(this.activeMissions);\n          } else {\n            this.clearMissionTimer();\n          }\n        }, 1000);\n      },\n\n      // 清除計時器\n      clearMissionTimer() {\n        if (this.missionTimer) {\n          clearInterval(this.missionTimer);\n          this.missionTimer = null;\n        }\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  /* 這裡可以放置組件特定樣式，但大部分樣式已在全局CSS中定義 */\n  .modal-tabs {\n    display: flex;\n    background-color: #f5f0e5;\n    border-bottom: 1px solid #e0d8c8;\n  }\n\n  .tab-button {\n    padding: 12px 20px;\n    background: none;\n    border: none;\n    border-bottom: 3px solid transparent;\n    font-size: 1rem;\n    color: #8c6d3c;\n    cursor: pointer;\n    transition: all 0.2s;\n  }\n\n  .tab-button:hover {\n    background-color: #f8f5ee;\n    color: #5d4215;\n  }\n\n  .tab-button.active {\n    border-bottom-color: #ffc226;\n    color: #5d4215;\n    font-weight: bold;\n  }\n\n  .tab-content {\n    padding: 20px;\n  }\n\n  .tab-pane {\n    display: none;\n  }\n\n  .tab-pane.active {\n    display: block;\n  }\n\n  .honey-types {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n    gap: 15px;\n    margin: 15px 0;\n  }\n\n  .area-card.selected {\n    background-color: #fff0c8;\n    box-shadow: 0 0 0 2px #ffb300, 0 5px 15px rgba(0, 0, 0, 0.1);\n  }\n\n  .report-section {\n    margin-bottom: 25px;\n    background-color: #fff;\n    border-radius: 8px;\n    padding: 15px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  }\n\n  .report-section h4 {\n    margin-top: 0;\n    margin-bottom: 12px;\n    color: #5d4215;\n    border-bottom: 1px solid #e0d8c8;\n    padding-bottom: 8px;\n  }\n\n  .report-stats {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\n    gap: 15px;\n  }\n\n  .stat-item {\n    text-align: center;\n    padding: 10px;\n    background-color: #f9f5ea;\n    border-radius: 6px;\n  }\n\n  .stat-label {\n    font-size: 0.9rem;\n    color: #8c6d3c;\n    margin-bottom: 5px;\n  }\n\n  .stat-value {\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: #5d4215;\n  }\n\n  .honey-stats {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    gap: 12px;\n    margin-bottom: 15px;\n  }\n\n  .honey-stat {\n    display: flex;\n    flex-direction: column;\n    padding: 12px;\n    background-color: #f9f5ea;\n    border-radius: 6px;\n  }\n\n  .honey-icon {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    margin-bottom: 8px;\n  }\n\n  .honey-name {\n    font-weight: bold;\n    margin-bottom: 4px;\n  }\n\n  .honey-amount {\n    color: #8c6d3c;\n  }\n\n  .honey-value {\n    color: #5d4215;\n    font-size: 0.9rem;\n  }\n\n  .duration-buttons {\n    display: flex;\n    gap: 8px;\n    margin-top: 5px;\n  }\n\n  .duration-button {\n    flex: 1;\n    padding: 8px 0;\n    background-color: #f9f5ea;\n    border: 1px solid #e0d8c8;\n    border-radius: 4px;\n    color: #8c6d3c;\n    font-size: 0.9rem;\n    cursor: pointer;\n    transition: all 0.2s;\n  }\n\n  .duration-button:hover {\n    background-color: #f5efe0;\n    border-color: #d5c9b0;\n  }\n\n  .duration-button.active {\n    background-color: #ffc226;\n    border-color: #ffb300;\n    color: #5d4215;\n    font-weight: bold;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  }\n\n  .total-honey {\n    display: flex;\n    justify-content: space-between;\n    padding: 10px;\n    background-color: #fff0c8;\n    border-radius: 6px;\n    font-weight: bold;\n    color: #5d4215;\n  }\n\n  .mission-harvest {\n    grid-column: 1 / -1;\n    margin-top: 8px;\n    padding-top: 8px;\n    border-top: 1px dashed #e0d8c8;\n  }\n\n  .harvest-header {\n    font-weight: bold;\n    margin-bottom: 5px;\n    color: #5d4215;\n  }\n\n  .harvest-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 12px;\n  }\n\n  .harvest-item {\n    display: flex;\n    align-items: center;\n  }\n\n  .honey-dot {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    margin-right: 6px;\n  }\n\n  .honey-info {\n    display: flex;\n    justify-content: space-between;\n    flex-grow: 1;\n    font-size: 0.85rem;\n  }\n\n  .honey-name {\n    color: #8c6d3c;\n  }\n\n  .honey-amount {\n    font-weight: bold;\n    color: #5d4215;\n  }\n\n  .honey-amount.zero {\n    color: #aaa;\n    font-weight: normal;\n  }\n\n  .storage-status {\n    margin-top: 8px;\n    font-size: 0.9rem;\n    color: #4caf50;\n    display: flex;\n    align-items: center;\n  }\n\n  .status-icon {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    width: 18px;\n    height: 18px;\n    background-color: #4caf50;\n    color: white;\n    border-radius: 50%;\n    font-size: 12px;\n    margin-right: 5px;\n  }\n\n  /* 當螢幕較小時改為單欄顯示 */\n  @media (max-width: 500px) {\n    .harvest-grid {\n      grid-template-columns: 1fr;\n    }\n  }\n\n  .mission-history {\n    max-height: 300px;\n    overflow-y: auto;\n  }\n\n  .mission-record {\n    padding: 10px;\n    background-color: #f9f5ea;\n    border-radius: 6px;\n    margin-bottom: 8px;\n  }\n\n  .mission-record-header {\n    display: flex;\n    align-items: center;\n    margin-bottom: 5px;\n  }\n\n  .status-indicator {\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    margin-right: 8px;\n  }\n\n  .status-indicator.success {\n    background-color: #4caf50;\n  }\n\n  .status-indicator.failure {\n    background-color: #f44336;\n  }\n\n  .mission-area-name {\n    font-weight: bold;\n    margin-right: auto;\n  }\n\n  .mission-date {\n    font-size: 0.8rem;\n    color: #8c6d3c;\n  }\n\n  .mission-record-details {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    font-size: 0.9rem;\n    color: #5d4215;\n  }\n\n  .empty-history {\n    text-align: center;\n    padding: 20px;\n    color: #8c6d3c;\n    font-style: italic;\n  }\n</style>\n","import { render } from \"./ForagingModal.vue?vue&type=template&id=9ea61b9e&scoped=true\"\nimport script from \"./ForagingModal.vue?vue&type=script&lang=js\"\nexport * from \"./ForagingModal.vue?vue&type=script&lang=js\"\n\nimport \"./ForagingModal.vue?vue&type=style&index=0&id=9ea61b9e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9ea61b9e\"]])\n\nexport default __exports__","<template>\n  <div class=\"labor-overlay\" v-if=\"task && task.currentTask\">\n    <div class=\"labor-container\">\n      <h3 class=\"labor-title\">{{ task.taskName }}</h3>\n      <div class=\"progress-container\">\n        <div class=\"progress-bar\" :style=\"{ width: progress + '%' }\"></div>\n      </div>\n      <button\n        @click=\"performWork\"\n        :class=\"['game-button', { completed: isCompleted }]\"\n        :disabled=\"isCompleted\"\n      >\n        <span class=\"button-text\">{{ buttonText }}</span>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { mapActions } from \"vuex\";\n\n  export default {\n    name: \"LaborTaskModal\",\n    props: {\n      task: {\n        type: Object,\n        required: true,\n      },\n    },\n    data() {\n      return {\n        isCompleted: false,\n        localClicksDone: 0,\n      };\n    },\n    computed: {\n      progress() {\n        const currentClicks =\n          this.localClicksDone + (this.task.clicksCompleted || 0);\n        return (currentClicks / this.task.clicksNeeded) * 100;\n      },\n      buttonText() {\n        if (this.isCompleted) {\n          return \"完成！\";\n        } else {\n          const remainingClicks =\n            this.task.clicksNeeded -\n            ((this.task.clicksCompleted || 0) + this.localClicksDone);\n          return `努力工作 (還需 ${remainingClicks} 次)`;\n        }\n      },\n    },\n    watch: {\n      // 當 task 改變時重置本地狀態\n      task: {\n        handler() {\n          this.isCompleted = false;\n          this.localClicksDone = 0;\n        },\n        deep: true,\n      },\n    },\n    methods: {\n      ...mapActions({\n        completeLaborTask: \"laborTasks/progressTask\",\n      }),\n      performWork() {\n        if (this.isCompleted) return;\n\n        // 更新本地點擊次數\n        this.localClicksDone++;\n\n        // 檢查是否完成任務\n        if (\n          this.localClicksDone + this.task.clicksCompleted <\n          this.task.clicksNeeded\n        ) {\n          this.completeLaborTask();\n        } else {\n          this.isCompleted = true;\n\n          // 延遲關閉模態框，給用戶一個視覺反饋\n          setTimeout(() => {\n            this.$emit(\"complete\", this.localClicksDone);\n          }, 500);\n        }\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  .labor-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.7);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1000;\n  }\n\n  .labor-task {\n    background-color: white;\n    padding: 20px;\n    border-radius: 10px;\n    text-align: center;\n    max-width: 400px;\n    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.3);\n  }\n\n  .labor-container {\n    background-color: #fff;\n    border-radius: 15px;\n    padding: 25px;\n    width: 320px;\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3), 0 0 0 1px rgba(0, 0, 0, 0.05);\n    text-align: center;\n    animation: popIn 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n    border: 2px solid #ffc226;\n    position: relative;\n    overflow: hidden;\n  }\n\n  .labor-container::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 5px;\n    background: linear-gradient(to right, #ffc226, #ffeb3b, #ffc226);\n  }\n\n  .labor-title {\n    margin: 0 0 20px 0;\n    padding-bottom: 12px;\n    font-size: 1.4rem;\n    color: #5d4215;\n    position: relative;\n    font-weight: bold;\n    text-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);\n  }\n\n  .labor-title::after {\n    content: \"\";\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 60px;\n    height: 3px;\n    background-color: #ffc226;\n    border-radius: 3px;\n  }\n\n  h3 {\n    margin-bottom: 15px;\n    color: #5d4215;\n  }\n\n  .progress-container {\n    width: 100%;\n    height: 20px;\n    background-color: #f5f5f5;\n    border-radius: 10px;\n    overflow: hidden;\n    margin-bottom: 20px;\n    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);\n    border: 1px solid #e0e0e0;\n  }\n\n  .progress-bar {\n    height: 100%;\n    background: linear-gradient(to right, #4caf50, #8bc34a);\n    transition: width 0.3s ease;\n    width: 0%;\n    box-shadow: 0 0 5px rgba(76, 175, 80, 0.5);\n  }\n\n  .game-button {\n    margin: 0 auto;\n    display: block;\n    padding: 12px 24px;\n    font-size: 1.1rem;\n    transition: all 0.3s;\n    min-width: 180px;\n  }\n\n  .game-button:disabled {\n    background-color: #4caf50;\n    cursor: default;\n  }\n\n  .button-text {\n    position: relative;\n    z-index: 2;\n  }\n\n  .game-button.completed {\n    background-color: #2196f3;\n    color: white;\n    font-weight: bold;\n    position: relative;\n    overflow: hidden;\n    border: 2px solid #1976d2;\n  }\n\n  .game-button.completed::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(\n      45deg,\n      rgba(255, 255, 255, 0.2) 25%,\n      transparent 25%,\n      transparent 50%,\n      rgba(255, 255, 255, 0.2) 50%,\n      rgba(255, 255, 255, 0.2) 75%,\n      transparent 75%,\n      transparent\n    );\n    background-size: 20px 20px;\n    z-index: 1;\n    animation: shine 1s linear infinite;\n  }\n\n  @keyframes shine {\n    0% {\n      background-position: 0 0;\n    }\n    100% {\n      background-position: 20px 0;\n    }\n  }\n</style>\n","import { render } from \"./LaborTaskModal.vue?vue&type=template&id=8b48be4a&scoped=true\"\nimport script from \"./LaborTaskModal.vue?vue&type=script&lang=js\"\nexport * from \"./LaborTaskModal.vue?vue&type=script&lang=js\"\n\nimport \"./LaborTaskModal.vue?vue&type=style&index=0&id=8b48be4a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8b48be4a\"]])\n\nexport default __exports__","<template>\n  <div class=\"modal\" :class=\"{ active: isActive, hidden: !isActive }\">\n    <div class=\"modal-header\">\n      <h2>蜂蜜倉庫</h2>\n      <button class=\"modal-close\" @click=\"closeModal\">&times;</button>\n    </div>\n    <div class=\"modal-content\">\n      <div class=\"storage-info\">\n        <div class=\"capacity-bar\">\n          <div\n            class=\"capacity-fill\"\n            :style=\"{ width: capacityPercentage + '%' }\"\n          ></div>\n        </div>\n        <div class=\"capacity-text\">\n          {{ totalHoney.toFixed(1) }}kg / {{ honeyCapacity }}kg\n        </div>\n        <button\n          @click=\"upgradeStorage\"\n          class=\"upgrade-button\"\n          :disabled=\"!canUpgradeStorage\"\n        >\n          擴充倉庫 (¥{{ upgradeCost }})\n        </button>\n      </div>\n\n      <h3>蜂蜜庫存</h3>\n      <div class=\"honey-list\">\n        <div\n          v-for=\"(amount, type) in inventory\"\n          :key=\"type\"\n          class=\"honey-item\"\n          v-show=\"amount > 0 || allHoneyTypes[type]\"\n        >\n          <div class=\"honey-info\">\n            <div\n              class=\"honey-color\"\n              :style=\"{ backgroundColor: honeyTypeColor(type) }\"\n            ></div>\n            <div class=\"honey-details\">\n              <h3>{{ honeyTypeName(type) }}</h3>\n              <p>{{ honeyTypeDescription(type) }}</p>\n              <div class=\"honey-amount\">{{ amount.toFixed(1) }}kg</div>\n            </div>\n          </div>\n          <div class=\"honey-actions\">\n            <div class=\"sell-controls\">\n              <input\n                type=\"number\"\n                min=\"0.1\"\n                :max=\"amount\"\n                step=\"0.1\"\n                v-model.number=\"sellAmounts[type]\"\n                :disabled=\"amount <= 0\"\n              />\n              <button\n                @click=\"sellHoney(type)\"\n                :disabled=\"!canSell(type)\"\n                class=\"sell-button\"\n              >\n                出售 (¥{{ calculateSellValue(type) }})\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <h3>客戶訂單</h3>\n      <div class=\"orders-list\">\n        <div v-if=\"activeOrders.length === 0\" class=\"no-orders\">\n          目前沒有訂單，請等待客戶下單。\n        </div>\n        <div\n          v-for=\"(order, index) in activeOrders\"\n          :key=\"order.id\"\n          class=\"order-item\"\n        >\n          <div class=\"order-header\">\n            <h3>{{ order.customer }}的訂單</h3>\n            <div class=\"order-expiry\">\n              剩餘時間: {{ formatRemainingTime(order.expiryTime) }}\n            </div>\n          </div>\n          <div class=\"order-requirements\">\n            <div\n              v-for=\"(req, reqIndex) in order.requirements\"\n              :key=\"reqIndex\"\n              class=\"requirement-item\"\n            >\n              <div\n                class=\"honey-color\"\n                :style=\"{ backgroundColor: honeyTypeColor(req.type) }\"\n              ></div>\n              <span>{{ honeyTypeName(req.type) }}</span>\n              <span class=\"requirement-amount\">\n                {{ req.amount }}kg /\n                {{ Math.min(req.amount, inventory[req.type]).toFixed(1) }}kg\n              </span>\n            </div>\n          </div>\n          <div class=\"order-value\">\n            <div class=\"base-value\">基本價值: ¥{{ order.baseValue }}</div>\n            <div class=\"bonus-value\">獎勵: ¥{{ order.bonusValue }}</div>\n            <div class=\"total-value\">總價: ¥{{ order.totalValue }}</div>\n          </div>\n          <button\n            @click=\"fulfillOrder(index)\"\n            :disabled=\"!canFulfillOrder(order)\"\n            class=\"fulfill-button\"\n          >\n            完成訂單\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { mapState } from \"vuex\";\n\n  export default {\n    props: {\n      isActive: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    data() {\n      return {\n        sellAmounts: {\n          common: 1.0,\n          wildflower: 1.0,\n          mountain: 1.0,\n          rare: 1.0,\n        },\n      };\n    },\n    computed: {\n      ...mapState({\n        inventory: (state) => state.honey.inventory,\n        honeyCapacity: (state) => state.honey.capacity,\n        activeOrders: (state) => state.orders.active,\n        allHoneyTypes: (state) => state.honey.honeyTypes,\n        money: (state) => state.money,\n      }),\n\n      totalHoney() {\n        return Object.values(this.inventory).reduce(\n          (sum, amount) => sum + amount,\n          0\n        );\n      },\n\n      capacityPercentage() {\n        return (this.totalHoney / this.honeyCapacity) * 100;\n      },\n\n      upgradeCost() {\n        return Math.floor(this.honeyCapacity * 1.2);\n      },\n\n      canUpgradeStorage() {\n        return this.money >= this.upgradeCost;\n      },\n    },\n    methods: {\n      closeModal() {\n        this.$emit(\"close-modal\");\n      },\n\n      honeyTypeName(type) {\n        return this.allHoneyTypes[type]?.name || type;\n      },\n\n      honeyTypeDescription(type) {\n        return this.allHoneyTypes[type]?.description || \"\";\n      },\n\n      honeyTypeColor(type) {\n        return this.allHoneyTypes[type]?.color || \"#cccccc\";\n      },\n\n      calculateSellValue(type) {\n        const amount = this.sellAmounts[type] || 0;\n        const price = this.allHoneyTypes[type]?.basePrice * 0.9 || 0;\n        return Math.floor(amount * price);\n      },\n\n      canSell(type) {\n        const amount = this.sellAmounts[type] || 0;\n        return amount > 0 && amount <= this.inventory[type];\n      },\n\n      sellHoney(type) {\n        if (!this.canSell(type)) return;\n\n        this.$store.dispatch(\"honey/sellHoneyByType\", {\n          type,\n          amount: this.sellAmounts[type],\n        });\n      },\n\n      upgradeStorage() {\n        this.$store.dispatch(\"honey/upgradeHoneyStorage\");\n      },\n\n      canFulfillOrder(order) {\n        for (const req of order.requirements) {\n          if (this.inventory[req.type] < req.amount) {\n            return false;\n          }\n        }\n        return true;\n      },\n\n      fulfillOrder(index) {\n        this.$store.dispatch(\"orders/fulfillOrder\", index);\n      },\n\n      formatRemainingTime(expiryTime) {\n        const now = Date.now();\n        const remainingMs = expiryTime - now;\n\n        if (remainingMs <= 0) return \"已過期\";\n\n        const hours = Math.floor(remainingMs / (60 * 60 * 1000));\n        const minutes = Math.floor(\n          (remainingMs % (60 * 60 * 1000)) / (60 * 1000)\n        );\n\n        return `${hours}小時${minutes}分鐘`;\n      },\n    },\n  };\n</script>\n\n<style scoped>\n\n  .modal-background {\n    display: none;\n  }\n\n  .modal-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 15px 20px;\n    border-bottom: 1px solid #e0d8c8;\n  }\n\n  .modal-header h2 {\n    margin: 0;\n    color: #8b5a00;\n  }\n\n  .modal-close {\n    background: none;\n    border: none;\n    font-size: 1.5rem;\n    cursor: pointer;\n    color: #8c6d3c;\n  }\n\n  .modal-close:hover {\n    color: #5d4215;\n  }\n\n  .modal-content {\n    position: relative;\n    background-color: #fff;\n    border-radius: 8px;\n    padding: 20px;\n    max-height: 80vh;\n    overflow-y: auto;\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3), 0 0 0 1px rgba(0, 0, 0, 0.05);\n    margin: 0;\n    animation: popIn 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  }\n\n  @keyframes popIn {\n    0% {\n      opacity: 0;\n      transform: scale(0.95);\n    }\n    100% {\n      opacity: 1;\n      transform: scale(1);\n    }\n  }\n\n  .storage-info {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    margin-bottom: 20px;\n    background-color: #f9f5ea;\n    padding: 15px;\n    border-radius: 8px;\n  }\n\n  .capacity-bar {\n    width: 100%;\n    height: 20px;\n    background-color: #f0f0f0;\n    border-radius: 10px;\n    overflow: hidden;\n  }\n\n  .capacity-fill {\n    height: 100%;\n    background-color: #ffcc00;\n    transition: width 0.3s;\n  }\n\n  .capacity-text {\n    font-weight: bold;\n    color: #5d4215;\n  }\n\n  .upgrade-button {\n    background-color: #4caf50;\n    color: white;\n    border: none;\n    padding: 8px 16px;\n    border-radius: 4px;\n    cursor: pointer;\n    margin-top: 5px;\n  }\n\n  .upgrade-button:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n\n  /* 蜂蜜列表樣式 */\n  .honey-list {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    margin-bottom: 20px;\n  }\n\n  .honey-item {\n    display: flex;\n    justify-content: space-between;\n    background-color: #f9f5ea;\n    padding: 15px;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  }\n\n  .honey-info {\n    display: flex;\n    gap: 15px;\n    flex: 1;\n  }\n\n  .honey-color {\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    align-self: center;\n  }\n\n  .honey-details {\n    flex: 1;\n  }\n\n  .honey-details h3 {\n    margin: 0 0 5px 0;\n    color: #8b5a00;\n    font-size: 1rem;\n  }\n\n  .honey-details p {\n    margin: 0 0 10px 0;\n    font-size: 0.9em;\n    color: #666;\n  }\n\n  .honey-amount {\n    font-weight: bold;\n    font-size: 1.1em;\n    color: #5d4215;\n  }\n\n  .honey-actions {\n    display: flex;\n    align-items: center;\n  }\n\n  .sell-controls {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n  }\n\n  .sell-controls input {\n    width: 60px;\n    padding: 5px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n  }\n\n  .sell-button {\n    background-color: #4caf50;\n    color: white;\n    border: none;\n    padding: 8px 12px;\n    border-radius: 4px;\n    cursor: pointer;\n    white-space: nowrap;\n  }\n\n  .sell-button:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n\n  /* 訂單列表樣式 */\n  h3 {\n    margin-top: 20px;\n    margin-bottom: 15px;\n    color: #5d4215;\n    border-bottom: 1px solid #e0d8c8;\n    padding-bottom: 8px;\n  }\n\n  .orders-list {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n  }\n\n  .order-item {\n    background-color: #f9f5ea;\n    padding: 15px;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  }\n\n  .order-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 10px;\n  }\n\n  .order-header h3 {\n    margin: 0;\n    color: #8b5a00;\n    border-bottom: none;\n    padding-bottom: 0;\n    font-size: 1rem;\n  }\n\n  .order-expiry {\n    color: #e53935;\n    font-weight: bold;\n    font-size: 0.9em;\n  }\n\n  .order-requirements {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    margin-bottom: 15px;\n  }\n\n  .requirement-item {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n  }\n\n  .requirement-amount {\n    margin-left: auto;\n    font-weight: bold;\n  }\n\n  .order-value {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    margin-bottom: 15px;\n    background-color: rgba(255, 255, 255, 0.5);\n    padding: 10px;\n    border-radius: 6px;\n  }\n\n  .base-value,\n  .bonus-value {\n    flex: 1;\n    min-width: 120px;\n  }\n\n  .total-value {\n    font-weight: bold;\n    font-size: 1.1em;\n    flex: 100%;\n    color: #5d4215;\n  }\n\n  .fulfill-button {\n    background-color: #8b5a00;\n    color: white;\n    border: none;\n    padding: 10px;\n    border-radius: 4px;\n    cursor: pointer;\n    width: 100%;\n  }\n\n  .fulfill-button:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n\n  .no-orders {\n    text-align: center;\n    padding: 20px;\n    color: #8c6d3c;\n    font-style: italic;\n  }\n</style>\n","import { render } from \"./HoneyStorageModal.vue?vue&type=template&id=6435ef66&scoped=true\"\nimport script from \"./HoneyStorageModal.vue?vue&type=script&lang=js\"\nexport * from \"./HoneyStorageModal.vue?vue&type=script&lang=js\"\n\nimport \"./HoneyStorageModal.vue?vue&type=style&index=0&id=6435ef66&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6435ef66\"]])\n\nexport default __exports__","<template>\n    <div class=\"modal\" :class=\"{ active: isActive, hidden: !isActive }\">\n      <div class=\"modal-header\">\n        <h2>任務版</h2>\n        <button class=\"modal-close\" @click=\"$emit('close-modal')\">&times;</button>\n      </div>\n      <div class=\"modal-content\">\n        <div class=\"tasks-container\">\n          <div class=\"tasks-tabs\">\n            <button \n              :class=\"['tab-button', { active: activeTab === 'daily' }]\" \n              @click=\"activeTab = 'daily'\"\n            >\n              每日任務\n            </button>\n            <button \n              :class=\"['tab-button', { active: activeTab === 'weekly' }]\" \n              @click=\"activeTab = 'weekly'\"\n            >\n              每週任務\n            </button>\n            <button \n              :class=\"['tab-button', { active: activeTab === 'main' }]\" \n              @click=\"activeTab = 'main'\"\n            >\n              主線任務\n            </button>\n          </div>\n          \n          <div class=\"tasks-list\">\n            <div v-if=\"filteredTasks.length === 0\" class=\"no-tasks\">\n              目前沒有可用的任務，請稍後再來！\n            </div>\n            \n            <div v-for=\"task in filteredTasks\" :key=\"task.id\" class=\"task-item\">\n              <div class=\"task-content\">\n                <div class=\"task-header\">\n                  <h3 class=\"task-title\">{{ task.title }}</h3>\n                  <div class=\"task-reward\">\n                    <span>獎勵: </span>\n                    <span v-if=\"task.rewards.money\">¥{{ task.rewards.money }}</span>\n                    <span v-if=\"task.rewards.honey\"> + {{ task.rewards.honey }}kg 蜂蜜</span>\n                    <span v-if=\"task.rewards.bees\"> + {{ task.rewards.bees }} 隻蜜蜂</span>\n                  </div>\n                </div>\n                \n                <p class=\"task-description\">{{ task.description }}</p>\n                \n                <div class=\"task-progress\">\n                  <div class=\"progress-bar\">\n                    <div \n                      class=\"progress-fill\" \n                      :style=\"{ width: `${calculateProgress(task)}%` }\"\n                    ></div>\n                  </div>\n                  <div class=\"progress-text\">\n                    {{ task.currentValue || 0 }} / {{ task.targetValue }} {{ task.unit || '' }}\n                  </div>\n                </div>\n              </div>\n              \n              <button \n                @click=\"claimReward(task)\" \n                class=\"claim-button\" \n                :disabled=\"!task.canClaim\"\n                :class=\"{ completed: task.completed }\"\n              >\n                {{ task.completed ? '已完成' : (task.canClaim ? '領取獎勵' : '進行中') }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { mapState, mapActions } from 'vuex';\n  \n  export default {\n    props: {\n      isActive: {\n        type: Boolean,\n        default: false\n      }\n    },\n    \n    data() {\n      return {\n        activeTab: 'daily',\n      };\n    },\n    \n    computed: {\n      ...mapState({\n        tasks: state => state.tasks.tasks\n      }),\n      \n      filteredTasks() {\n        return this.tasks.filter(task => task.type === this.activeTab);\n      }\n    },\n    \n    methods: {\n      ...mapActions({\n        claimTaskReward: 'tasks/claimReward',\n        refreshTasks: 'tasks/refreshTasks'\n      }),\n      \n      calculateProgress(task) {\n        if (task.targetValue <= 0) return 0;\n        const progress = Math.min(100, (task.currentValue / task.targetValue) * 100);\n        return progress;\n      },\n      \n      claimReward(task) {\n        if (task.canClaim && !task.completed) {\n          this.claimTaskReward(task.id);\n        }\n      }\n    },\n    \n    mounted() {\n      // 當任務版開啟時，刷新任務\n      if (this.isActive) {\n        this.refreshTasks();\n      }\n    },\n    \n    watch: {\n      isActive(newValue) {\n        if (newValue) {\n          this.refreshTasks();\n        }\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  .modal-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 15px 20px;\n    border-bottom: 1px solid #e0d8c8;\n  }\n  \n  .modal-header h2 {\n    margin: 0;\n    color: #d4a017;\n    border-bottom: none;\n    padding-bottom: 0;\n  }\n  \n  .modal-close {\n    background: none;\n    border: none;\n    font-size: 1.5rem;\n    cursor: pointer;\n    color: #8c6d3c;\n  }\n  \n  .modal-close:hover {\n    color: #5d4215;\n  }\n  \n  .tasks-container {\n    padding: 20px;\n  }\n  \n  .tasks-tabs {\n    display: flex;\n    margin-bottom: 20px;\n    border-bottom: 2px solid #f0e8d6;\n  }\n  \n  .tab-button {\n    padding: 10px 15px;\n    background: none;\n    border: none;\n    border-bottom: 3px solid transparent;\n    font-size: 1rem;\n    font-weight: bold;\n    color: #8c6d3c;\n    cursor: pointer;\n    transition: all 0.2s;\n  }\n  \n  .tab-button.active {\n    color: #d4a017;\n    border-bottom-color: #d4a017;\n  }\n  \n  .tab-button:hover {\n    background-color: #f9f5ea;\n  }\n  \n  .tasks-list {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n  }\n  \n  .task-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 15px;\n    background-color: #f9f5ea;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  }\n  \n  .task-content {\n    flex: 1;\n  }\n  \n  .task-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 10px;\n  }\n  \n  .task-title {\n    margin: 0;\n    font-size: 1.1rem;\n    color: #5d4215;\n  }\n  \n  .task-reward {\n    font-size: 0.9rem;\n    font-weight: bold;\n    color: #d4a017;\n  }\n  \n  .task-description {\n    margin-bottom: 15px;\n    color: #666;\n    font-size: 0.95rem;\n  }\n  \n  .task-progress {\n    margin-top: 10px;\n  }\n  \n  .progress-bar {\n    height: 8px;\n    background-color: #e0e0e0;\n    border-radius: 4px;\n    overflow: hidden;\n    margin-bottom: 5px;\n  }\n  \n  .progress-fill {\n    height: 100%;\n    background-color: #4caf50;\n    transition: width 0.3s;\n  }\n  \n  .progress-text {\n    font-size: 0.85rem;\n    text-align: right;\n    color: #666;\n  }\n  \n  .claim-button {\n    min-width: 100px;\n    padding: 8px 12px;\n    border: none;\n    border-radius: 4px;\n    background-color: #4caf50;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    transition: all 0.2s;\n  }\n  \n  .claim-button:hover:not(:disabled) {\n    background-color: #388e3c;\n  }\n  \n  .claim-button:disabled {\n    background-color: #e0e0e0;\n    color: #9e9e9e;\n    cursor: not-allowed;\n  }\n  \n  .claim-button.completed {\n    background-color: #9e9e9e;\n  }\n  \n  .no-tasks {\n    padding: 30px;\n    text-align: center;\n    color: #666;\n    font-style: italic;\n  }\n  </style>","import { render } from \"./TasksModal.vue?vue&type=template&id=d39ce0d8&scoped=true\"\nimport script from \"./TasksModal.vue?vue&type=script&lang=js\"\nexport * from \"./TasksModal.vue?vue&type=script&lang=js\"\n\nimport \"./TasksModal.vue?vue&type=style&index=0&id=d39ce0d8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d39ce0d8\"]])\n\nexport default __exports__","<template>\n    <div class=\"modal\" :class=\"{ active: isActive, hidden: !isActive }\">\n      <div class=\"modal-header\">\n        <h2>成就殿堂</h2>\n        <button class=\"modal-close\" @click=\"$emit('close-modal')\">&times;</button>\n      </div>\n      <div class=\"modal-content\">\n        <div class=\"achievements-container\">\n          <div class=\"achievements-stats\">\n            <div class=\"stat-item\">\n              <span class=\"stat-value\">{{ unlockedCount }}</span>\n              <span class=\"stat-label\">已解鎖</span>\n            </div>\n            <div class=\"stat-item\">\n              <span class=\"stat-value\">{{ totalAchievements }}</span>\n              <span class=\"stat-label\">總成就數</span>\n            </div>\n            <div class=\"stat-item\">\n              <span class=\"stat-value\">{{ completionPercentage }}%</span>\n              <span class=\"stat-label\">完成度</span>\n            </div>\n          </div>\n          \n          <div class=\"achievements-categories\">\n            <button \n              v-for=\"category in categories\" \n              :key=\"category.id\"\n              :class=\"['category-button', { active: activeCategory === category.id }]\"\n              @click=\"activeCategory = category.id\"\n            >\n              {{ category.name }}\n            </button>\n          </div>\n          \n          <div class=\"achievements-list\">\n            <div v-for=\"achievement in filteredAchievements\" :key=\"achievement.id\" \n              :class=\"['achievement-item', { 'unlocked': achievement.unlocked }]\">\n              <div class=\"achievement-icon\">\n                <span v-if=\"achievement.unlocked\">{{ achievement.icon }}</span>\n                <span v-else>🔒</span>\n              </div>\n              <div class=\"achievement-content\">\n                <h3 class=\"achievement-title\">{{ achievement.title }}</h3>\n                <p class=\"achievement-description\">\n                  {{ achievement.unlocked ? achievement.description : achievement.hint || '???' }}\n                </p>\n                <div v-if=\"!achievement.unlocked && achievement.progress > 0\" class=\"achievement-progress\">\n                  <div class=\"progress-bar\">\n                    <div \n                      class=\"progress-fill\" \n                      :style=\"{ width: `${(achievement.progress / achievement.target) * 100}%` }\"\n                    ></div>\n                  </div>\n                  <div class=\"progress-text\">\n                    {{ achievement.progress }} / {{ achievement.target }}\n                  </div>\n                </div>\n                <div v-if=\"achievement.unlocked\" class=\"unlock-date\">\n                  解鎖於: {{ formatDate(achievement.unlockedAt) }}\n                </div>\n              </div>\n            </div>\n            \n            <div v-if=\"filteredAchievements.length === 0\" class=\"no-achievements\">\n              這個類別還沒有成就，繼續努力探索吧！\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { mapState, mapGetters } from 'vuex';\n  \n  export default {\n    props: {\n      isActive: {\n        type: Boolean,\n        default: false\n      }\n    },\n    \n    data() {\n      return {\n        activeCategory: 'all'\n      };\n    },\n    \n    computed: {\n      ...mapState({\n        achievements: state => state.achievements.achievements\n      }),\n      \n      ...mapGetters({\n        unlockedAchievements: 'achievements/unlockedAchievements'\n      }),\n      \n      categories() {\n        return [\n          { id: 'all', name: '全部' },\n          { id: 'bees', name: '蜜蜂' },\n          { id: 'honey', name: '蜂蜜' },\n          { id: 'foraging', name: '採集' },\n          { id: 'orders', name: '訂單' },\n          { id: 'challenges', name: '挑戰' }\n        ];\n      },\n      \n      filteredAchievements() {\n        if (this.activeCategory === 'all') {\n          return this.achievements;\n        }\n        return this.achievements.filter(a => a.category === this.activeCategory);\n      },\n      \n      unlockedCount() {\n        return this.unlockedAchievements.length;\n      },\n      \n      totalAchievements() {\n        return this.achievements.length;\n      },\n      \n      completionPercentage() {\n        if (this.totalAchievements === 0) return 0;\n        return Math.round((this.unlockedCount / this.totalAchievements) * 100);\n      }\n    },\n    \n    methods: {\n      formatDate(timestamp) {\n        if (!timestamp) return '未知';\n        const date = new Date(timestamp);\n        return date.toLocaleDateString('zh-TW');\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  .modal-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 15px 20px;\n    border-bottom: 1px solid #e0d8c8;\n  }\n  \n  .modal-header h2 {\n    margin: 0;\n    color: #7b1fa2;\n    border-bottom: none;\n    padding-bottom: 0;\n  }\n  \n  .modal-close {\n    background: none;\n    border: none;\n    font-size: 1.5rem;\n    cursor: pointer;\n    color: #8c6d3c;\n  }\n  \n  .modal-close:hover {\n    color: #5d4215;\n  }\n  \n  .achievements-container {\n    padding: 20px;\n  }\n  \n  .achievements-stats {\n    display: flex;\n    justify-content: space-around;\n    padding: 15px;\n    background-color: #f3e5f5;\n    border-radius: 8px;\n    margin-bottom: 20px;\n  }\n  \n  .stat-item {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n  \n  .stat-value {\n    font-size: 1.5rem;\n    font-weight: bold;\n    color: #7b1fa2;\n  }\n  \n  .stat-label {\n    font-size: 0.9rem;\n    color: #6a1b9a;\n  }\n  \n  .achievements-categories {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    margin-bottom: 20px;\n  }\n  \n  .category-button {\n    padding: 8px 15px;\n    background-color: #e1bee7;\n    border: none;\n    border-radius: 20px;\n    color: #6a1b9a;\n    font-weight: bold;\n    cursor: pointer;\n    transition: all 0.2s;\n  }\n  \n  .category-button.active {\n    background-color: #7b1fa2;\n    color: white;\n  }\n  \n  .category-button:hover:not(.active) {\n    background-color: #ce93d8;\n  }\n  \n  .achievements-list {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n  }\n  \n  .achievement-item {\n    display: flex;\n    gap: 15px;\n    padding: 15px;\n    background-color: #f9f5ea;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    opacity: 0.7;\n    transition: all 0.2s;\n  }\n  \n  .achievement-item.unlocked {\n    background-color: #f3e5f5;\n    opacity: 1;\n    border-left: 5px solid #7b1fa2;\n  }\n  \n  .achievement-icon {\n    width: 50px;\n    height: 50px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 2rem;\n    background-color: #e1bee7;\n    border-radius: 50%;\n    flex-shrink: 0;\n  }\n  \n  .achievement-item.unlocked .achievement-icon {\n    background-color: #9c27b0;\n    color: white;\n  }\n  \n  .achievement-content {\n    flex: 1;\n  }\n  \n  .achievement-title {\n    margin: 0 0 5px 0;\n    font-size: 1.1rem;\n    color: #5d4215;\n  }\n  \n  .achievement-item.unlocked .achievement-title {\n    color: #7b1fa2;\n  }\n  \n  .achievement-description {\n    margin: 0 0 10px 0;\n    color: #666;\n    font-size: 0.95rem;\n  }\n  \n  .achievement-progress {\n    margin-top: 10px;\n  }\n  \n  .progress-bar {\n    height: 6px;\n    background-color: #e0e0e0;\n    border-radius: 3px;\n    overflow: hidden;\n    margin-bottom: 5px;\n  }\n  \n  .progress-fill {\n    height: 100%;\n    background-color: #9c27b0;\n    transition: width 0.3s;\n  }\n  \n  .progress-text {\n    font-size: 0.85rem;\n    text-align: right;\n    color: #666;\n  }\n  \n  .unlock-date {\n    font-size: 0.85rem;\n    color: #7b1fa2;\n    margin-top: 5px;\n  }\n  \n  .no-achievements {\n    padding: 30px;\n    text-align: center;\n    color: #666;\n    font-style: italic;\n  }\n  </style>","import { render } from \"./AchievementsModal.vue?vue&type=template&id=61b36fc0&scoped=true\"\nimport script from \"./AchievementsModal.vue?vue&type=script&lang=js\"\nexport * from \"./AchievementsModal.vue?vue&type=script&lang=js\"\n\nimport \"./AchievementsModal.vue?vue&type=style&index=0&id=61b36fc0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-61b36fc0\"]])\n\nexport default __exports__","import { render } from \"./GameView.vue?vue&type=template&id=3f3cadb2\"\nimport script from \"./GameView.vue?vue&type=script&lang=js\"\nexport * from \"./GameView.vue?vue&type=script&lang=js\"\n\nimport \"./GameView.vue?vue&type=style&index=0&id=3f3cadb2&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport LoginView from '../views/LoginView.vue'\nimport GameView from '../views/GameView.vue'\n\nconst routes = [\n  {\n    path: '/',\n    redirect: '/login'\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: LoginView\n  },\n  {\n    path: '/game',\n    name: 'game',\n    component: GameView\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nexport default router\n","export default {\n  namespaced: true,\n\n  state: {\n    bees: 0,\n    hiveLevel: 1,\n    hiveHealth: 100,\n    hiveCapacity: 10,\n    honeyPerBeePerMinute: 0.1,\n    costs: {\n      bee: 50,\n      hiveUpgrade: 200,\n    },\n    assignedBees: 0,\n  },\n\n  getters: {\n    healthColorStyle(state) {\n      if (state.hiveHealth < 30) {\n        return { color: \"#e53935\" };\n      } else if (state.hiveHealth < 60) {\n        return { color: \"#ff9800\" };\n      } else {\n        return { color: \"#4caf50\" };\n      }\n    },\n\n    canBuyBee(state, getters, rootState) {\n      return (\n        rootState.money >= state.costs.bee && state.bees < state.hiveCapacity\n      );\n    },\n\n    canUpgradeHive(state, getters, rootState) {\n      return rootState.money >= state.costs.hiveUpgrade;\n    },\n\n    availableBees(state) {\n      return state.bees - (state.assignedBees || 0);\n    },\n  },\n\n  mutations: {\n    SET_BEES(state, amount) {\n      state.bees = amount;\n    },\n\n    ADD_BEES(state, amount) {\n      state.bees += amount;\n    },\n\n    REMOVE_BEES(state, amount) {\n      state.bees = Math.max(0, state.bees - amount);\n    },\n\n    // 派遣蜜蜂到採蜜任務\n    ASSIGN_BEES(state, count) {\n      state.assignedBees = (state.assignedBees || 0) + count;\n    },\n\n    // 從採蜜任務歸還蜜蜂\n    RETURN_BEES(state, count) {\n      state.assignedBees = Math.max(0, (state.assignedBees || 0) - count);\n    },\n\n    SET_HIVE_LEVEL(state, level) {\n      state.hiveLevel = level;\n    },\n\n    SET_HIVE_CAPACITY(state, capacity) {\n      state.hiveCapacity = capacity;\n    },\n\n    SET_HONEY_EFFICIENCY(state, efficiency) {\n      state.honeyPerBeePerMinute = efficiency;\n    },\n\n    SET_COSTS(state, costs) {\n      state.costs = costs;\n    },\n\n    SET_HIVE_HEALTH(state, amount) {\n      state.hiveHealth = Math.min(100, Math.max(0, amount));\n    },\n\n    UPGRADE_HIVE(state) {\n      state.hiveLevel += 1;\n      state.hiveCapacity += 5;\n      state.honeyPerBeePerMinute += 0.05;\n      state.costs.hiveUpgrade = Math.floor(state.costs.hiveUpgrade * 1.5);\n    },\n\n    SET_ASSIGNED_BEES(state, count) {\n      state.assignedBees = count;\n    },\n  },\n\n  actions: {\n    // 購買蜜蜂\n    buyBee({ state, commit, rootGetters, dispatch }) {\n      if (!rootGetters[\"bees/canBuyBee\"]) return;\n\n      commit(\"REMOVE_MONEY\", state.costs.bee, { root: true });\n      commit(\"ADD_BEES\", 1);\n\n      dispatch(\n        \"showNotification\",\n        {\n          message: \"購買了1隻新蜜蜂！\",\n          type: \"success\",\n        },\n        { root: true }\n      );\n\n      dispatch(\"tasks/trackBuyBee\", null, { root: true });\n      dispatch(\"achievements/checkAchievements\", null, { root: true });\n    },\n\n    // 升級蜂巢\n    upgradeHive({ state, commit, rootGetters, dispatch }) {\n      if (!rootGetters[\"bees/canUpgradeHive\"]) return;\n\n      commit(\"REMOVE_MONEY\", state.costs.hiveUpgrade, { root: true });\n      commit(\"UPGRADE_HIVE\");\n\n      dispatch(\n        \"showNotification\",\n        {\n          message: `蜂巢升級到等級 ${state.hiveLevel}！容量和效率提升了`,\n          type: \"success\",\n        },\n        { root: true }\n      );\n\n      dispatch(\"tasks/trackUpgradeHive\", null, { root: true });\n      dispatch(\"achievements/checkAchievements\", null, { root: true });\n    },\n\n    // 檢查蜂巢\n    checkHive({ state, commit, dispatch }) {\n      dispatch(\n        \"laborTasks/startLaborTask\",\n        {\n          taskName: \"檢查蜂巢\",\n          clicksNeeded: 8,\n          onComplete: () => {\n            // 檢查可以發現問題並略微提升蜂群健康\n            commit(\"SET_HIVE_HEALTH\", state.hiveHealth + 5);\n\n            dispatch(\n              \"showNotification\",\n              {\n                message: \"檢查完成，蜂巢狀況良好！\",\n                type: \"success\",\n              },\n              { root: true }\n            );\n          },\n        },\n        { root: true }\n      );\n    },\n  },\n};\n","export default {\n  namespaced: true,\n\n  state: {\n    // 未收集的蜂蜜\n    production: 0,\n\n    // 已收集的蜂蜜\n    inventory: {\n      common: 0,\n      wildflower: 0,\n      mountain: 0,\n      rare: 0,\n    },\n    capacity: 100,\n\n    // 蜂蜜品種定義\n    honeyTypes: {\n      common: {\n        name: \"普通蜂蜜\",\n        basePrice: 10,\n        color: \"#ffcc00\",\n        description: \"最常見的蜂蜜，微甜且口感溫和。\",\n      },\n      wildflower: {\n        name: \"野花蜂蜜\",\n        basePrice: 15,\n        color: \"#ffa64d\",\n        description: \"採自各種野花，口感豐富，帶有花香。\",\n      },\n      mountain: {\n        name: \"山地蜂蜜\",\n        basePrice: 25,\n        color: \"#996633\",\n        description: \"來自高山植物，味道濃郁，營養價值高。\",\n      },\n      rare: {\n        name: \"稀有蜂蜜\",\n        basePrice: 50,\n        color: \"#e64d00\",\n        description: \"極為罕見的特殊蜂蜜，具有獨特的風味和藥用價值。\",\n      },\n    },\n  },\n\n  getters: {\n    // 能否收集蜂蜜\n    canCollectHoney(state) {\n      return state.production > 0;\n    },\n\n    // 倉庫中的總蜂蜜量\n    totalHoney(state) {\n      return Object.values(state.inventory).reduce(\n        (sum, amount) => sum + amount,\n        0\n      );\n    },\n\n    // 倉庫剩餘空間\n    availableSpace(state, getters) {\n      return Math.max(0, state.capacity - getters.totalHoney);\n    },\n\n    // 倉庫容量百分比\n    capacityPercentage(state, getters) {\n      return (getters.totalHoney / state.capacity) * 100;\n    },\n\n    // 升級倉庫的成本\n    upgradeCost(state) {\n      return Math.floor(state.capacity * 1.2);\n    },\n  },\n\n  mutations: {\n    // 添加特定類型的蜂蜜到倉庫\n    ADD_HONEY_BY_TYPE(state, { type, amount }) {\n      // 確保蜂蜜類型有效\n      if (!state.inventory[type]) {\n        state.inventory[type] = 0;\n      }\n\n      // 更新特定類型的蜂蜜\n      state.inventory[type] += amount;\n    },\n\n    // 從倉庫移除特定類型的蜂蜜\n    REMOVE_HONEY_BY_TYPE(state, { type, amount }) {\n      // 確保不會減到負數\n      const amountToRemove = Math.min(amount, state.inventory[type] || 0);\n\n      // 更新特定類型的蜂蜜\n      state.inventory[type] -= amountToRemove;\n\n      return amountToRemove; // 返回實際減少的量\n    },\n\n    // 設置倉庫容量\n    SET_HONEY_CAPACITY(state, capacity) {\n      state.capacity = capacity;\n    },\n\n    // 設置蜂蜜產出\n    SET_PRODUCTION(state, amount) {\n      state.production = amount;\n    },\n\n    // 增加未收集的蜂蜜產出\n    ADD_PRODUCTION(state, amount) {\n      state.production += amount;\n    },\n\n    // 清除未收集的蜂蜜產出\n    CLEAR_PRODUCTION(state) {\n      state.production = 0;\n    },\n  },\n\n  actions: {\n    // 生產蜂蜜 (由主循環呼叫)\n    produceHoney({ rootState, commit }) {\n      const bees = rootState.bees.bees;\n      const honeyPerBeePerMinute = rootState.bees.honeyPerBeePerMinute;\n      const weatherMultiplier = rootState.weather.effectMultiplier || 1.0;\n\n      const honeyProduction =\n        (bees * honeyPerBeePerMinute * weatherMultiplier) / 60;\n\n      // 只有當生產值大於0才添加\n      if (honeyProduction > 0) {\n        commit(\"ADD_PRODUCTION\", honeyProduction);\n      }\n    },\n\n    // 擴充蜂蜜倉庫\n    upgradeHoneyStorage({ getters, rootState, commit, dispatch }) {\n      const cost = getters.upgradeCost;\n\n      if (rootState.money < cost) {\n        dispatch(\n          \"showNotification\",\n          {\n            message: `金錢不足！擴充倉庫需要${cost}元`,\n            type: \"warning\",\n          },\n          { root: true }\n        );\n        return;\n      }\n\n      // 扣除費用\n      commit(\"REMOVE_MONEY\", cost, { root: true });\n\n      // 增加50kg容量\n      const newCapacity = Math.floor(getters.upgradeCost / 1.2) + 50;\n      commit(\"SET_HONEY_CAPACITY\", newCapacity);\n\n      dispatch(\n        \"showNotification\",\n        {\n          message: `倉庫已擴充！新容量: ${newCapacity}kg`,\n          type: \"success\",\n        },\n        { root: true }\n      );\n    },\n\n    // 直接出售特定類型的蜂蜜\n    sellHoneyByType({ state, commit, dispatch }, { type, amount }) {\n      // 檢查庫存\n      if (state.inventory[type] < amount) {\n        dispatch(\n          \"showNotification\",\n          {\n            message: `${state.honeyTypes[type].name}庫存不足！`,\n            type: \"warning\",\n          },\n          { root: true }\n        );\n        return;\n      }\n\n      // 計算價值 (直接賣出略低於訂單價格)\n      const price = state.honeyTypes[type].basePrice * 0.9;\n      const value = Math.floor(amount * price);\n\n      // 減少蜂蜜\n      commit(\"REMOVE_HONEY_BY_TYPE\", { type, amount });\n\n      // 增加金錢\n      commit(\"ADD_MONEY\", value, { root: true });\n\n      dispatch(\n        \"showNotification\",\n        {\n          message: `已出售${amount}kg ${state.honeyTypes[type].name}，獲得${value}元`,\n          type: \"success\",\n        },\n        { root: true }\n      );\n      dispatch(\"tasks/trackSellHoney\", amount, { root: true });\n    },\n\n    // 採集蜂蜜 (存入倉庫)\n    collectHoney({ state, getters, commit, dispatch }) {\n      if (state.production <= 0) {\n        dispatch(\n          \"showNotification\",\n          {\n            message: \"沒有可收集的蜂蜜！\",\n            type: \"info\",\n          },\n          { root: true }\n        );\n        return;\n      }\n\n      // 檢查倉庫容量\n      if (getters.availableSpace <= 0) {\n        dispatch(\n          \"showNotification\",\n          {\n            message: \"蜂蜜倉庫已滿！請先出售一些蜂蜜或擴充倉庫。\",\n            type: \"warning\",\n          },\n          { root: true }\n        );\n        return;\n      }\n\n      // 使用勞力任務\n      dispatch(\n        \"laborTasks/startLaborTask\",\n        {\n          taskName: \"採集蜂蜜\",\n          clicksNeeded: 5,\n          onComplete: () => {\n            // 先保存當前蜂蜜產出量\n            const honeyToCollect = state.production;\n\n            // 計算實際可收集的蜂蜜量\n            const collectableAmount = Math.min(\n              honeyToCollect,\n              getters.availableSpace\n            );\n\n            // 隨機分配不同類型的蜂蜜\n            const typeChances = {\n              common: 0.7, // 70% 獲得普通蜂蜜\n              wildflower: 0.2, // 20% 獲得野花蜂蜜\n              mountain: 0.08, // 8% 獲得山地蜂蜜\n              rare: 0.02, // 2% 獲得稀有蜂蜜\n            };\n\n            // 決定每種蜂蜜的數量\n            const honeyDistribution = {};\n            let remainingHoney = collectableAmount;\n            let collectedAmount = 0;\n\n            for (const [type, chance] of Object.entries(typeChances)) {\n              if (remainingHoney <= 0) break;\n\n              // 計算這種類型的蜂蜜數量\n              const typeAmount = Math.min(\n                remainingHoney * chance * (1 + Math.random() * 0.5), // 添加一些隨機變化\n                remainingHoney\n              );\n\n              if (typeAmount > 0) {\n                honeyDistribution[type] = typeAmount;\n                remainingHoney -= typeAmount;\n                collectedAmount += typeAmount;\n\n                // 添加到倉庫\n                commit(\"ADD_HONEY_BY_TYPE\", {\n                  type,\n                  amount: typeAmount,\n                });\n              }\n            }\n\n            // 如果還有剩餘的蜂蜜（由於舍入或其他原因），添加到普通蜂蜜\n            if (remainingHoney > 0) {\n              commit(\"ADD_HONEY_BY_TYPE\", {\n                type: \"common\",\n                amount: remainingHoney,\n              });\n              honeyDistribution.common =\n                (honeyDistribution.common || 0) + remainingHoney;\n              collectedAmount += remainingHoney;\n            }\n\n            // 生成消息文本\n            let messageText = `成功收集了 ${collectedAmount.toFixed(\n              1\n            )}kg 蜂蜜到倉庫！`;\n            if (honeyToCollect > collectableAmount) {\n              messageText += ` (${(honeyToCollect - collectableAmount).toFixed(\n                1\n              )}kg 因倉庫空間不足而丟失)`;\n            }\n\n            // 更詳細的收集信息\n            const details = Object.entries(honeyDistribution)\n              .filter(([, amount]) => amount > 0)\n              .map(\n                ([type, amount]) =>\n                  `${state.honeyTypes[type].name}: ${amount.toFixed(1)}kg`\n              )\n              .join(\", \");\n\n            if (details) {\n              messageText += `\\n收集明細: ${details}`;\n            }\n\n            dispatch(\n              \"showNotification\",\n              {\n                message: messageText,\n                type: \"success\",\n              },\n              { root: true }\n            );\n\n            // 清空蜂蜜產出\n            commit(\"CLEAR_PRODUCTION\");\n            dispatch(\"tasks/trackCollectHoney\", collectedAmount, {\n              root: true,\n            });\n            dispatch(\"achievements/trackHoneyCollected\", collectedAmount, {\n              root: true,\n            });\n          },\n        },\n        { root: true }\n      );\n    },\n\n    // 全部蜂蜜出售\n    sellAllHoney({ state, getters, commit, dispatch }) {\n      if (getters.totalHoney <= 0) {\n        dispatch(\n          \"showNotification\",\n          {\n            message: \"倉庫中沒有蜂蜜可供出售！\",\n            type: \"warning\",\n          },\n          { root: true }\n        );\n        return;\n      }\n\n      let totalValue = 0;\n      let totalAmount = 0;\n\n      // 遍歷所有類型的蜂蜜\n      for (const type in state.inventory) {\n        const amount = state.inventory[type];\n        if (amount > 0) {\n          // 計算這種類型的價值\n          const price = state.honeyTypes[type].basePrice * 0.9;\n          const value = Math.floor(amount * price);\n\n          totalValue += value;\n          totalAmount += amount;\n\n          // 清空這種類型的蜂蜜\n          commit(\"REMOVE_HONEY_BY_TYPE\", { type, amount });\n        }\n      }\n\n      // 增加金錢\n      commit(\"ADD_MONEY\", totalValue, { root: true });\n\n      dispatch(\n        \"showNotification\",\n        {\n          message: `已出售所有蜂蜜 (${totalAmount.toFixed(\n            1\n          )}kg)，獲得${totalValue}元`,\n          type: \"success\",\n        },\n        { root: true }\n      );\n    },\n  },\n};\n","export default {\n    namespaced: true,\n    \n    state: {\n      active: [],\n      completed: 0,\n      maxActive: 3\n    },\n    \n    getters: {\n      hasNewOrders(state) {\n        return state.active.length > 0;\n      }\n    },\n    \n    mutations: {\n      ADD_ORDER(state, order) {\n        if (state.active.length < state.maxActive) {\n          state.active.push(order);\n        }\n      },\n      \n      REMOVE_ORDER(state, index) {\n        state.active.splice(index, 1);\n      },\n      \n      COMPLETE_ORDER(state) {\n        state.completed++;\n      },\n      \n      SET_ORDERS(state, orders) {\n        state.active = orders.active || [];\n        state.completed = orders.completed || 0;\n        state.maxActive = orders.maxActive || 3;\n      }\n    },\n    \n    actions: {\n      // 初始化訂單系統\n      initOrders({ dispatch }) {\n        // 設置訂單系統\n        setInterval(() => {\n          dispatch('generateOrder');\n          dispatch('checkExpiredOrders');\n        }, 30 * 60 * 1000); // 30分鐘\n        \n        // 初始生成1-2個訂單\n        const initialOrderCount = Math.floor(Math.random() * 2) + 1;\n        for (let i = 0; i < initialOrderCount; i++) {\n          dispatch('generateOrder');\n        }\n      },\n      \n      // 檢查過期訂單\n      checkExpiredOrders({ state, commit, dispatch }) {\n        const now = Date.now();\n        const expiredOrders = [];\n        \n        state.active.forEach((order, index) => {\n          if (order.expiryTime < now) {\n            expiredOrders.push(index);\n          }\n        });\n        \n        // 從後往前移除過期訂單\n        for (let i = expiredOrders.length - 1; i >= 0; i--) {\n          const orderIndex = expiredOrders[i];\n          const order = state.active[orderIndex];\n          \n          dispatch('showNotification', {\n            message: `${order.customer}的訂單已過期！`,\n            type: 'warning'\n          }, { root: true });\n          \n          commit('REMOVE_ORDER', orderIndex);\n        }\n      },\n      \n      // 生成新訂單\n      generateOrder({ state, commit, dispatch, rootState }) {\n        // 如果已達最大訂單數，不再生成\n        if (state.active.length >= state.maxActive) {\n          return;\n        }\n        \n        // 訂單要求的蜂蜜類型\n        const honeyTypes = Object.keys(rootState.honey.honeyTypes);\n        const requiredTypes = [];\n        \n        // 選擇1-3種蜂蜜類型\n        const typeCount = Math.floor(Math.random() * 3) + 1;\n        for (let i = 0; i < typeCount; i++) {\n          // 選擇一個尚未選擇的類型\n          let type;\n          do {\n            type = honeyTypes[Math.floor(Math.random() * honeyTypes.length)];\n          } while (requiredTypes.some(item => item.type === type));\n          \n          // 確定需求量\n          let amount;\n          switch (type) {\n            case 'common':\n              amount = Math.floor(Math.random() * 5) + 3; // 3-7kg\n              break;\n            case 'wildflower':\n              amount = Math.floor(Math.random() * 4) + 2; // 2-5kg\n              break;\n            case 'mountain':\n              amount = Math.floor(Math.random() * 3) + 1; // 1-3kg\n              break;\n            case 'rare':\n              amount = Math.random() < 0.7 ? 1 : 2; // 通常1kg，有時2kg\n              break;\n            default:\n              amount = 1;\n          }\n          \n          requiredTypes.push({ type, amount });\n        }\n        \n        // 計算訂單的基本價值\n        let baseValue = 0;\n        for (const item of requiredTypes) {\n          baseValue += item.amount * rootState.honey.honeyTypes[item.type].basePrice;\n        }\n        \n        // 添加額外獎勵 (10%-30%)\n        const bonusPercent = Math.floor(Math.random() * 21) + 10;\n        const bonusValue = Math.floor(baseValue * bonusPercent / 100);\n        const totalValue = baseValue + bonusValue;\n        \n        // 生成一個隨機客戶名稱\n        const customers = [\n          \"王大廚\", \"張麵包師\", \"甜點工坊\", \"健康食品店\", \n          \"李醫師\", \"有機商店\", \"山田農場\", \"日式料理店\",\n          \"五星飯店\", \"陳奶奶\", \"李爺爺\", \"美食博主\"\n        ];\n        \n        const customer = customers[Math.floor(Math.random() * customers.length)];\n        \n        // 生成過期時間 (12-36小時)\n        const expiryHours = Math.floor(Math.random() * 25) + 12;\n        const expiryTime = Date.now() + expiryHours * 60 * 60 * 1000;\n        \n        // 創建訂單對象\n        const order = {\n          id: Date.now(), // 唯一ID\n          customer,\n          requirements: requiredTypes,\n          baseValue,\n          bonusValue,\n          totalValue,\n          expiryTime,\n          createdAt: Date.now()\n        };\n        \n        // 添加訂單\n        commit('ADD_ORDER', order);\n        \n        // 通知玩家\n        dispatch('showNotification', {\n          message: `收到來自${customer}的新訂單！`,\n          type: 'info'\n        }, { root: true });\n      },\n      \n      // 完成訂單\n      fulfillOrder({ state, commit, dispatch, rootState }, orderIndex) {\n        const order = state.active[orderIndex];\n        if (!order) return;\n        \n        // 檢查是否有足夠的蜂蜜\n        let canFulfill = true;\n        for (const req of order.requirements) {\n          if (rootState.honey.inventory[req.type] < req.amount) {\n            canFulfill = false;\n            break;\n          }\n        }\n        \n        if (!canFulfill) {\n          dispatch('showNotification', {\n            message: '蜂蜜庫存不足，無法完成訂單！',\n            type: 'warning'\n          }, { root: true });\n          return;\n        }\n        \n        // 移除蜂蜜\n        for (const req of order.requirements) {\n          commit('honey/REMOVE_HONEY_BY_TYPE', { type: req.type, amount: req.amount }, { root: true });\n        }\n        \n        // 添加金錢\n        commit('ADD_MONEY', order.totalValue, { root: true });\n        \n        // 增加完成訂單數\n        commit('COMPLETE_ORDER');\n        \n        // 移除訂單\n        commit('REMOVE_ORDER', orderIndex);\n        \n        // 通知玩家\n        dispatch('showNotification', {\n          message: `成功完成${order.customer}的訂單！獲得${order.totalValue}元（含${order.bonusValue}元獎勵）`,\n          type: 'success'\n        }, { root: true });\n        \n        // 有機會獲得額外獎勵\n        if (Math.random() < 0.2) { // 20%幾率獲得額外獎勵\n          const extraRewards = [\n            { type: 'money', amount: Math.floor(Math.random() * 100) + 50, text: '額外小費' },\n            { type: 'bee', amount: 1, text: '贈送一隻蜜蜂' },\n            { type: 'health', amount: 10, text: '蜂巢健康度提升' }\n          ];\n          \n          const reward = extraRewards[Math.floor(Math.random() * extraRewards.length)];\n          \n          switch (reward.type) {\n            case 'money':\n              commit('ADD_MONEY', reward.amount, { root: true });\n              break;\n            case 'bee':\n              commit('bees/ADD_BEES', reward.amount, { root: true });\n              break;\n            case 'health': {\n              const newHealth = rootState.bees.hiveHealth + reward.amount;\n              commit('bees/SET_HIVE_HEALTH', newHealth, { root: true });\n              break;\n            }\n          }\n          \n          dispatch('showNotification', {\n            message: `${order.customer}很滿意！${reward.text}`,\n            type: 'success'\n          }, { root: true });\n\n          dispatch(\"tasks/trackFulfillOrder\", null, { root: true });\n          dispatch(\"achievements/checkAchievements\", null, { root: true });\n        }\n      }\n    }\n  };","export default {\n  namespaced: true,\n\n  state: {\n    activeMissions: [],\n    selectedArea: null,\n    maxMissions: 3,\n\n    // 採蜜區域\n    areas: {\n      garden: {\n        name: \"花園\",\n        description: \"接近蜂巢的花園，安全但花蜜較少\",\n        distance: 1,\n        baseDuration: 30, // 秒\n        reward: {\n          common: { min: 1, max: 3 },\n          wildflower: { min: 0, max: 1 },\n          mountain: { min: 0, max: 0 },\n          rare: { min: 0, max: 0 },\n        },\n        risk: 0.05, // 5% 失敗風險\n        beeCount: 1,\n      },\n      meadow: {\n        name: \"草地\",\n        description: \"附近的開闊草地，有更多品種的野花\",\n        distance: 2,\n        baseDuration: 60, // 秒\n        reward: {\n          common: { min: 2, max: 4 },\n          wildflower: { min: 1, max: 2 },\n          mountain: { min: 0, max: 0.5 },\n          rare: { min: 0, max: 0.1 },\n        },\n        risk: 0.1, // 10% 失敗風險\n        beeCount: 2,\n      },\n      forest: {\n        name: \"森林\",\n        description: \"距離較遠的森林，有許多獨特的花種\",\n        distance: 3,\n        baseDuration: 120, // 秒\n        reward: {\n          common: { min: 1, max: 2 },\n          wildflower: { min: 2, max: 4 },\n          mountain: { min: 1, max: 2 },\n          rare: { min: 0.1, max: 0.5 },\n        },\n        risk: 0.15, // 15% 失敗風險\n        beeCount: 3,\n      },\n      mountain: {\n        name: \"山區\",\n        description: \"遙遠的山區，有稀有的高海拔花種\",\n        distance: 5,\n        baseDuration: 180, // 秒\n        reward: {\n          common: { min: 0, max: 1 },\n          wildflower: { min: 1, max: 2 },\n          mountain: { min: 2, max: 4 },\n          rare: { min: 0.5, max: 1 },\n        },\n        risk: 0.25, // 25% 失敗風險\n        beeCount: 4,\n      },\n    },\n\n    // 已收集的蜂蜜記錄\n    honeyCollected: {\n      common: 0,\n      wildflower: 0,\n      mountain: 0,\n      rare: 0,\n    },\n\n    missionStats: {\n      totalMissions: 0,\n      successMissions: 0,\n      failedMissions: 0,\n    },\n    missionHistory: [], // 最近任務的歷史記錄\n  },\n\n  getters: {\n    canStartMission(state, getters, rootState, rootGetters) {\n      if (state.selectedArea === null) return false;\n\n      const areaData = state.areas[state.selectedArea];\n      const minBeesNeeded = areaData.beeCount;\n      const availableBees = rootGetters[\"bees/availableBees\"];\n\n      return (\n        availableBees >= minBeesNeeded &&\n        state.activeMissions.length < state.maxMissions\n      );\n    },\n\n    foragingStats(state) {\n      return {\n        totalMissions: state.activeMissions.length,\n        maxMissions: state.maxMissions,\n        totalHoneyCollected: Object.values(state.honeyCollected).reduce(\n          (a, b) => a + b,\n          0\n        ),\n      };\n    },\n  },\n\n  mutations: {\n    SET_SELECTED_AREA(state, area) {\n      state.selectedArea = area;\n    },\n\n    START_MISSION(state, mission) {\n      state.activeMissions.push(mission);\n    },\n\n    COMPLETE_MISSION(state, missionId) {\n      const index = state.activeMissions.findIndex((m) => m.id === missionId);\n      if (index !== -1) {\n        state.activeMissions.splice(index, 1);\n      }\n    },\n\n    ADD_COLLECTED_HONEY(state, { type, amount }) {\n      state.honeyCollected[type] += amount;\n    },\n\n    SET_FORAGING_DATA(state, data) {\n      if (data.activeMissions) state.activeMissions = data.activeMissions;\n      if (data.selectedArea) state.selectedArea = data.selectedArea;\n      if (data.honeyCollected) state.honeyCollected = data.honeyCollected;\n      if (data.maxMissions) state.maxMissions = data.maxMissions;\n      if (data.missionHistory) {\n        console.log(\"設置任務歷史記錄:\", data.missionHistory);\n        state.missionHistory = data.missionHistory;\n      }\n      if (data.missionStats) {\n        console.log(\"設置任務統計:\", data.missionStats);\n        state.missionStats = data.missionStats;\n      }\n    },\n\n    ADD_MISSION_RECORD(state, record) {\n      // 更新統計\n      state.missionStats.totalMissions++;\n      if (record.success) {\n        state.missionStats.successMissions++;\n      } else {\n        state.missionStats.failedMissions++;\n      }\n\n      // 添加到歷史記錄（最多保留10條）\n      state.missionHistory.unshift(record);\n      if (state.missionHistory.length > 10) {\n        state.missionHistory.pop();\n      }\n    },\n  },\n\n  actions: {\n    // 選擇採蜜區域\n    selectArea({ commit }, area) {\n      commit(\"SET_SELECTED_AREA\", area);\n    },\n\n    // 開始採蜜任務\n    startForagingMission(\n      { state, commit, rootState, rootGetters, dispatch },\n      missionData\n    ) {\n      if (!rootGetters[\"foraging/canStartMission\"]) {\n        dispatch(\n          \"showNotification\",\n          {\n            message: \"無法開始採蜜任務！請確保有足夠的蜜蜂。\",\n            type: \"warning\",\n          },\n          { root: true }\n        );\n        return;\n      }\n\n      const area = missionData.area;\n      const areaData = state.areas[area];\n\n      const beesToAssign = missionData.bees;\n\n      // 根據選擇的時間長度調整基礎持續時間\n      let baseDuration = areaData.baseDuration;\n\n      if (missionData.duration === \"medium\") {\n        baseDuration = baseDuration * 2; // 中程任務時間加倍\n      } else if (missionData.duration === \"long\") {\n        baseDuration = baseDuration * 4; // 長程任務時間四倍\n      }\n\n      console.log(\n        `任務時間計算: 基礎=${areaData.baseDuration}, 選擇=${missionData.duration}, 計算後=${baseDuration}`\n      );\n\n      // 計算任務持續時間，受天氣影響\n      const weatherMultiplier = rootState.weather.effectMultiplier || 1.0;\n      const duration = Math.ceil(baseDuration / weatherMultiplier);\n\n      // 創建新任務\n      const mission = {\n        id: Date.now(), // 唯一ID\n        area: area,\n        bees: beesToAssign,\n        risk: missionData.risk,\n        duration: missionData.duration, // 保存時間類型，而不是秒數\n        durationSeconds: duration, // 保存實際秒數\n        startTime: Date.now(),\n        endTime: Date.now() + duration * 1000,\n        inProgress: true,\n      };\n\n      commit(\"START_MISSION\", mission);\n\n      commit(\"bees/ASSIGN_BEES\", beesToAssign, { root: true });\n\n      let timeDisplay;\n      if (duration < 60) {\n        timeDisplay = `${duration} 秒`;\n      } else {\n        const minutes = Math.floor(duration / 60);\n        const seconds = duration % 60;\n        timeDisplay =\n          seconds > 0 ? `${minutes} 分 ${seconds} 秒` : `${minutes} 分鐘`;\n      }\n\n      dispatch(\n        \"showNotification\",\n        {\n          message: `派出 ${missionData.bees} 隻蜜蜂去 ${areaData.name} 採蜜，預計需要 ${timeDisplay}`,\n          type: \"info\",\n        },\n        { root: true }\n      );\n\n      // 設置完成計時器\n      setTimeout(() => {\n        dispatch(\"completeMission\", mission.id);\n      }, duration * 1000);\n    },\n\n    // 完成採蜜任務\n    completeMission({ state, commit, dispatch }, missionId) {\n      const missionIndex = state.activeMissions.findIndex(\n        (m) => m.id === missionId\n      );\n      if (missionIndex === -1) return;\n\n      const mission = state.activeMissions[missionIndex];\n      const areaData = state.areas[mission.area];\n      const beesToReturn = mission.bees;\n\n      // 計算任務是否成功 (失敗率受天氣影響)\n      const roll = Math.random();\n      const success = roll > areaData.risk;\n\n      // 準備記錄對象 - 使用任務中的蜜蜂數量，而非區域默認值\n      const missionRecord = {\n        id: mission.id,\n        area: mission.area,\n        date: Date.now(),\n        bees: mission.bees, // 使用任務記錄的蜜蜂數量\n        risk: areaData.risk, // 使用任務記錄的風險等級\n        success: success,\n        rewards: {},\n        lostBees: 0,\n      };\n\n      if (success) {\n        // 計算獲得的蜂蜜\n        const rewards = {};\n        // let totalHoney = 0;\n\n        for (const [type, range] of Object.entries(areaData.reward)) {\n          if (range.max <= 0) continue;\n\n          const amount = Math.random() * (range.max - range.min) + range.min;\n          if (amount > 0) {\n            rewards[type] = Number(amount.toFixed(1));\n            // totalHoney += rewards[type];\n\n            // 添加到收集記錄\n            commit(\"ADD_COLLECTED_HONEY\", { type, amount: rewards[type] });\n\n            // 添加到蜂蜜庫存\n            commit(\n              \"honey/ADD_HONEY_BY_TYPE\",\n              { type, amount: rewards[type] },\n              { root: true }\n            );\n          }\n        }\n\n        // 添加獎勵到記錄\n        missionRecord.rewards = rewards;\n\n        commit(\"bees/RETURN_BEES\", beesToReturn, { root: true });\n\n        // 通知玩家\n        let rewardText = Object.entries(rewards)\n          .map(\n            ([type, amount]) =>\n              `${amount}kg ${\n                state.honeyTypes ? state.honeyTypes[type].name : type\n              }`\n          )\n          .join(\"、\");\n\n        dispatch(\n          \"showNotification\",\n          {\n            message: `採蜜成功！從 ${areaData.name} 收穫了 ${rewardText}，已存入蜂蜜倉庫`,\n            type: \"success\",\n          },\n          { root: true }\n        );\n      } else {\n        // 任務失敗 - 減輕懲罰\n\n        // 修改這裡：降低蜜蜂損失機率，根據區域風險調整\n        // 風險越高的區域，損失機率越高，但整體降低\n        const lossChance = Math.min(0.1, areaData.risk / 5); // 最高只有10%機率損失蜜蜂\n\n        // 如果派遣的蜜蜂超過最低需求，進一步降低損失風險\n        const extraBees = Math.max(0, mission.bees - areaData.beeCount);\n        const reducedLossChance =\n          extraBees > 0 ? lossChance * (1 - extraBees * 0.1) : lossChance;\n\n        // 最終損失機率不低於1%\n        const finalLossChance = Math.max(0.01, reducedLossChance);\n\n        // 決定是否損失蜜蜂\n        const lostBees = Math.random() < finalLossChance ? 1 : 0;\n\n        missionRecord.lostBees = lostBees;\n\n        // 歸還未損失的蜜蜂\n        const beesToReturn = mission.bees - lostBees;\n        if (beesToReturn > 0) {\n          commit(\"bees/RETURN_BEES\", beesToReturn, { root: true });\n        }\n\n        // 如果有損失蜜蜂，更新蜜蜂數量\n        if (lostBees > 0) {\n          commit(\"bees/REMOVE_BEES\", lostBees, { root: true });\n        }\n\n        // 任務失敗，但仍可能帶回一些蜂蜜 (約成功時的20%)\n        if (Math.random() < 0.5) {\n          // 50%機率帶回一些蜂蜜\n          const rewards = {};\n\n          for (const [type, range] of Object.entries(areaData.reward)) {\n            if (range.max <= 0) continue;\n\n            // 失敗時只能獲得20%的蜂蜜\n            const amount =\n              Math.random() * (range.max - range.min) * 0.2 + range.min * 0.2;\n            if (amount > 0.1) {\n              // 只有超過0.1kg才記錄，避免太小的數量\n              rewards[type] = Number(amount.toFixed(1));\n\n              // 添加到收集記錄\n              commit(\"ADD_COLLECTED_HONEY\", { type, amount: rewards[type] });\n\n              // 添加到蜂蜜庫存\n              commit(\n                \"honey/ADD_HONEY_BY_TYPE\",\n                { type, amount: rewards[type] },\n                { root: true }\n              );\n            }\n          }\n\n          // 添加獎勵到記錄\n          missionRecord.rewards = rewards;\n\n          // 如果有收集到蜂蜜，在通知中說明\n          const rewardText = Object.entries(rewards)\n            .filter(([, amount]) => amount > 0)\n            .map(\n              ([type, amount]) =>\n                `${amount}kg ${\n                  state.honeyTypes ? state.honeyTypes[type].name : type\n                }`\n            )\n            .join(\"、\");\n\n          dispatch(\n            \"showNotification\",\n            {\n              message: `採蜜失敗！蜜蜂們在 ${areaData.name} 遇到了困難${\n                lostBees > 0 ? `，損失了 ${lostBees} 隻蜜蜂` : \"\"\n              }${rewardText ? `，但仍帶回了一些蜂蜜：${rewardText}` : \"\"}`,\n              type: \"warning\",\n            },\n            { root: true }\n          );\n        } else {\n          dispatch(\n            \"showNotification\",\n            {\n              message: `採蜜失敗！蜜蜂們在 ${areaData.name} 遇到了困難${\n                lostBees > 0 ? `，損失了 ${lostBees} 隻蜜蜂` : \"\"\n              }`,\n              type: \"danger\",\n            },\n            { root: true }\n          );\n        }\n      }\n\n      // 添加任務記錄\n      commit(\"ADD_MISSION_RECORD\", missionRecord);\n\n      // 移除任務\n      commit(\"COMPLETE_MISSION\", missionId);\n\n      dispatch(\"achievements/checkAchievements\", null, { root: true });\n    },\n  },\n};\n","export default {\n    namespaced: true,\n  \n    state: {\n      currentChallenge: null,\n      challengeHidden: false,\n      lastChallengeTime: null\n    },\n  \n    getters: {\n      hasChallengeActive(state) {\n        return state.currentChallenge !== null && !state.challengeHidden;\n      }\n    },\n  \n    mutations: {\n      SET_CHALLENGE(state, challenge) {\n        state.currentChallenge = challenge;\n        state.challengeHidden = false;\n      },\n      \n      CLEAR_CHALLENGE(state) {\n        state.currentChallenge = null;\n      },\n      \n      HIDE_CHALLENGE(state) {\n        state.challengeHidden = true;\n      },\n      \n      SET_LAST_CHALLENGE_TIME(state, time) {\n        state.lastChallengeTime = time;\n      }\n    },\n  \n    actions: {\n      // 檢查是否可以觸發挑戰\n      maybeStartChallenge({ state, commit, dispatch, rootState }) {\n        // 如果已有挑戰，不再觸發\n        if (state.currentChallenge) {\n          return;\n        }\n        \n        // 記錄上次挑戰的時間\n        const lastChallengeTime = state.lastChallengeTime || 0;\n        const now = Date.now();\n        \n        // 確保至少間隔15分鐘才能觸發新挑戰\n        if (now - lastChallengeTime < 15 * 60 * 1000) {\n          return;\n        }\n        \n        // 根據蜜蜂數量調整挑戰機率 - 蜜蜂越多，挑戰越頻繁\n        // 基礎機率：5%，最高可達20%\n        let baseChance = 0.05;\n        \n        // 如果蜜蜂超過5隻，每多5隻增加5%機率，最高20%\n        if (rootState.bees.bees > 5) {\n          const additionalChance = Math.min(0.15, (rootState.bees.bees - 5) / 5 * 0.05);\n          baseChance += additionalChance;\n        }\n        \n        // 隨機決定是否觸發\n        if (Math.random() > baseChance) {\n          return;\n        }\n        \n        // 記錄此次挑戰時間\n        commit('SET_LAST_CHALLENGE_TIME', now);\n        \n        // 隨機選擇挑戰類型\n        const challengeTypes = [\"pest\", \"environmental\", \"weather\"];\n        const type = challengeTypes[Math.floor(Math.random() * challengeTypes.length)];\n        \n        // 創建對應類型的挑戰\n        switch (type) {\n          case \"pest\":\n            dispatch('createPestChallenge');\n            break;\n          case \"environmental\":\n            dispatch('createEnvironmentalChallenge');\n            break;\n          case \"weather\":\n            dispatch('createWeatherChallenge', { weatherType: rootState.weather.current });\n            break;\n        }\n      },\n      \n      // 創建蜂螨挑戰\n      createPestChallenge({ commit, dispatch }) {\n        // 蜂螨爆發挑戰\n        const pestChallenge = {\n          id: \"mite\",\n          title: \"蜂螨爆發\",\n          description: \"蜂螨正在侵擾你的蜂群，可能導致蜜蜂生病或死亡！\",\n          severity: \"high\",\n          solutions: [\n            {\n              name: \"購買藥劑治療 (¥150)\",\n              cost: 150,\n              effectText: \"蜂群已被治療，健康恢復中\",\n              action: \"treatWithMedicine\"\n            },\n            {\n              name: \"自然療法 (¥50，風險更高)\",\n              cost: 50,\n              effectText: \"自然療法效果有限，蜂群仍有風險\",\n              action: \"treatNaturally\"\n            }\n          ]\n        };\n  \n        commit(\"SET_CHALLENGE\", {\n          type: \"pest\",\n          data: pestChallenge\n        });\n  \n        dispatch(\"showNotification\", {\n          message: `警告：${pestChallenge.title}！`,\n          type: \"warning\"\n        }, { root: true });\n      },\n      \n      // 創建環境挑戰\n      createEnvironmentalChallenge({ commit, dispatch }) {\n        // 環境問題挑戰\n        const envChallenges = [\n          {\n            id: \"pollution\",\n            title: \"環境污染\",\n            description: \"附近的工廠排放污染物，影響了蜜蜂的健康！\",\n            solutions: [\n              {\n                name: \"安裝過濾裝置 (¥200)\",\n                cost: 200,\n                effectText: \"過濾裝置有效阻擋了污染物\",\n                action: \"installFilter\"\n              },\n              {\n                name: \"遷移蜂巢 (¥100)\",\n                cost: 100,\n                effectText: \"蜂巢遷移到了更安全的地方\",\n                action: \"relocateHive\"\n              }\n            ]\n          },\n          {\n            id: \"pesticide\",\n            title: \"農藥噴灑\",\n            description: \"附近農田噴灑農藥，對蜜蜂造成傷害！\",\n            solutions: [\n              {\n                name: \"與農民協商 (¥120)\",\n                cost: 120,\n                effectText: \"成功說服農民使用有機方法\",\n                action: \"negotiateWithFarmers\"\n              },\n              {\n                name: \"加強蜂巢防護 (¥80)\",\n                cost: 80,\n                effectText: \"簡單的防護措施，效果有限\",\n                action: \"enhanceProtection\"\n              }\n            ]\n          }\n        ];\n  \n        // 隨機選擇一個環境挑戰\n        const envChallenge = envChallenges[Math.floor(Math.random() * envChallenges.length)];\n  \n        commit(\"SET_CHALLENGE\", {\n          type: \"environmental\",\n          data: envChallenge\n        });\n  \n        dispatch(\"showNotification\", {\n          message: `警告：${envChallenge.title}！`,\n          type: \"warning\"\n        }, { root: true });\n      },\n      \n      // 創建天氣挑戰\n      createWeatherChallenge({ commit, dispatch, rootState }, { weatherType }) {\n        // 天氣挑戰 - 可以使用傳入的天氣類型或隨機選擇一種惡劣天氣\n        if (!weatherType || rootState.weather.weatherTypes[weatherType].effect > 0.7) {\n          // 如果未指定天氣類型或當前天氣不是惡劣天氣，隨機選擇一種惡劣天氣\n          const badWeatherTypes = [\"rainy\", \"drought\", \"cold\"];\n          weatherType = badWeatherTypes[Math.floor(Math.random() * badWeatherTypes.length)];\n        }\n  \n        let weatherChallenge = {\n          id: weatherType,\n          title: rootState.weather.weatherTypes[weatherType].name,\n          description: `${rootState.weather.weatherTypes[weatherType].description}，蜂蜜產量降低到${rootState.weather.weatherTypes[weatherType].effect * 100}%！`,\n          solutions: []\n        };\n        \n        // 根據天氣類型添加解決方案\n        switch (weatherType) {\n          case \"rainy\":\n            weatherChallenge.solutions = [\n              {\n                name: \"安裝雨棚 (¥100)\",\n                cost: 100,\n                effectText: \"雨棚保護了蜂巢，產量恢復正常\",\n                action: \"installShelter\"\n              },\n              {\n                name: \"提供額外食物 (¥50)\",\n                cost: 50,\n                effectText: \"蜜蜂不需要飛行就能獲得食物\",\n                action: \"provideExtraFood\"\n              }\n            ];\n            break;\n          case \"drought\":\n            weatherChallenge.solutions = [\n              {\n                name: \"安裝灌溉系統 (¥150)\",\n                cost: 150,\n                effectText: \"花朵得到水分，花蜜產量回升\",\n                action: \"installIrrigation\"\n              },\n              {\n                name: \"種植耐旱植物 (¥80)\",\n                cost: 80,\n                effectText: \"新植物提供了穩定但有限的花蜜來源\",\n                action: \"plantDroughtResistant\"\n              }\n            ];\n            break;\n          case \"cold\":\n            weatherChallenge.solutions = [\n              {\n                name: \"安裝保溫設備 (¥120)\",\n                cost: 120,\n                effectText: \"蜂巢溫度升高，蜜蜂活動恢復正常\",\n                action: \"installHeater\"\n              },\n              {\n                name: \"提供高能量食物 (¥70)\",\n                cost: 70,\n                effectText: \"蜜蜂獲得額外能量抵抗寒冷\",\n                action: \"provideEnergyFood\"\n              }\n            ];\n            break;\n          default:\n            weatherChallenge.solutions = [\n              {\n                name: \"一般應對措施 (¥100)\",\n                cost: 100,\n                effectText: \"基本措施，有助於緩解問題\",\n                action: \"generalMeasures\"\n              }\n            ];\n        }\n  \n        commit(\"SET_CHALLENGE\", {\n          type: \"weather\",\n          data: weatherChallenge\n        });\n  \n        dispatch(\"showNotification\", {\n          message: `警告：${weatherChallenge.title}天氣挑戰！`,\n          type: \"warning\"\n        }, { root: true });\n      },\n      \n      // 應用挑戰解決方案\n      applySolution({ state, commit, dispatch, rootState }, solution) {\n        if (!state.currentChallenge) return;\n        \n        // 檢查是否有足夠的金錢\n        if (rootState.money < solution.cost) {\n          dispatch('showNotification', {\n            message: '金錢不足，無法應用此解決方案！',\n            type: 'warning'\n          }, { root: true });\n          return;\n        }\n        \n        // 扣除費用\n        commit('REMOVE_MONEY', solution.cost, { root: true });\n        \n        // 根據挑戰類型和解決方案執行相應操作\n        const challenge = state.currentChallenge;\n        console.log(`Applying solution for challenge: ${challenge.type}`, solution);\n        \n        // 根據解決方案的 action 執行不同效果\n        switch (solution.action) {\n          // 蜂螨挑戰解決方案\n          case \"treatWithMedicine\":\n            // 高效藥物治療，健康恢復更多\n            commit('bees/SET_HIVE_HEALTH', rootState.bees.hiveHealth + 20, { root: true });\n            break;\n          case \"treatNaturally\":\n            // 自然療法，健康恢復有限\n            commit('bees/SET_HIVE_HEALTH', rootState.bees.hiveHealth + 5, { root: true });\n            // 自然療法有機會失敗\n            if (Math.random() < 0.3) {\n              dispatch('showNotification', {\n                message: '自然療法效果有限，一些蜜蜂受到影響！',\n                type: 'warning'\n              }, { root: true });\n              commit('bees/REMOVE_BEES', 1, { root: true });\n            }\n            break;\n            \n          // 環境挑戰解決方案\n          case \"installFilter\":\n          case \"negotiateWithFarmers\":\n            // 高效解決方案，恢復健康並增加效率\n            commit('bees/SET_HIVE_HEALTH', rootState.bees.hiveHealth + 15, { root: true });\n            commit('bees/SET_HONEY_EFFICIENCY', rootState.bees.honeyPerBeePerMinute * 1.1, { root: true });\n            break;\n          case \"relocateHive\":\n          case \"enhanceProtection\":\n            // 基本解決方案，只恢復健康\n            commit('bees/SET_HIVE_HEALTH', rootState.bees.hiveHealth + 10, { root: true });\n            break;\n            \n          // 天氣挑戰解決方案\n          case \"installShelter\":\n          case \"installIrrigation\":\n          case \"installHeater\":\n            // 高效天氣解決方案，改善天氣效果\n            dispatch('weather/improveWeather', null, { root: true });\n            break;\n          case \"provideExtraFood\":\n          case \"plantDroughtResistant\":\n          case \"provideEnergyFood\":\n          case \"generalMeasures\": {\n            // 基本天氣解決方案，小幅改善效果\n            const currentWeather = rootState.weather.current;\n            const currentEffect = rootState.weather.effectMultiplier;\n            commit('weather/SET_WEATHER', {\n              current: currentWeather,\n              effectMultiplier: Math.min(1.0, currentEffect * 1.3), // 提高30%效果，但不超過1.0\n              daysRemaining: 1\n            }, { root: true });\n            break;\n          }\n        }\n        \n        // 通知玩家\n        dispatch('showNotification', {\n          message: `已應用解決方案：${solution.effectText}`,\n          type: 'success'\n        }, { root: true });\n        \n        // 清除挑戰\n        commit('CLEAR_CHALLENGE');\n        dispatch(\"achievements/checkAchievements\", null, { root: true });\n      },\n      \n      // 強制觸發挑戰 (測試用)\n      forceStartChallenge({ dispatch }) {\n        // 隨機選擇挑戰類型\n        const challengeTypes = [\"pest\", \"environmental\", \"weather\"];\n        const type = challengeTypes[Math.floor(Math.random() * challengeTypes.length)];\n        \n        // 創建對應類型的挑戰\n        switch (type) {\n          case \"pest\":\n            dispatch('createPestChallenge');\n            break;\n          case \"environmental\":\n            dispatch('createEnvironmentalChallenge');\n            break;\n          case \"weather\":\n            dispatch('createWeatherChallenge', { weatherType: null });\n            break;\n        }\n      },\n      \n      // 隱藏挑戰\n      hideChallenge({ commit }) {\n        commit('HIDE_CHALLENGE');\n      }\n    }\n  };","export default {\n    namespaced: true,\n  \n    state: {\n      current: 'sunny',\n      effectMultiplier: 1.0,\n      daysRemaining: 0,\n      \n      // 天氣類型定義\n      weatherTypes: {\n        sunny: {\n          name: '晴朗',\n          description: '陽光明媚，蜜蜂活動頻繁',\n          icon: '☀️',\n          effect: 1.0\n        },\n        cloudy: {\n          name: '多雲',\n          description: '天空多雲，蜜蜂活動略受影響',\n          icon: '☁️',\n          effect: 0.9\n        },\n        rainy: {\n          name: '下雨',\n          description: '雨水阻礙了蜜蜂採集花蜜',\n          icon: '🌧️',\n          effect: 0.6\n        },\n        windy: {\n          name: '大風',\n          description: '強風使蜜蜂難以飛行',\n          icon: '🌬️',\n          effect: 0.7\n        },\n        drought: {\n          name: '乾旱',\n          description: '乾旱使花朵缺乏花蜜',\n          icon: '🏜️',\n          effect: 0.5\n        },\n        cold: {\n          name: '寒冷',\n          description: '低溫使蜜蜂活動減緩',\n          icon: '❄️',\n          effect: 0.4\n        },\n        perfect: {\n          name: '完美天氣',\n          description: '理想的蜜蜂採集天氣，花朵盛開',\n          icon: '🌈',\n          effect: 1.2\n        }\n      }\n    },\n  \n    getters: {\n      // 獲取當前天氣數據\n      currentWeather(state) {\n        return {\n          type: state.current,\n          name: state.weatherTypes[state.current].name,\n          description: state.weatherTypes[state.current].description,\n          icon: state.weatherTypes[state.current].icon,\n          effect: state.effectMultiplier\n        };\n      },\n      \n      // 檢查是否為惡劣天氣\n      isBadWeather(state) {\n        return state.effectMultiplier < 0.8;\n      },\n      \n      // 天氣效果顏色\n      weatherEffectColor(state) {\n        if (state.effectMultiplier > 1.0) {\n          return '#4caf50'; // 綠色 (好)\n        } else if (state.effectMultiplier > 0.7) {\n          return '#ff9800'; // 橙色 (一般)\n        } else {\n          return '#e53935'; // 紅色 (差)\n        }\n      }\n    },\n  \n    mutations: {\n      SET_WEATHER(state, { current, effectMultiplier, daysRemaining }) {\n        state.current = current;\n        state.effectMultiplier = effectMultiplier;\n        state.daysRemaining = daysRemaining || 0;\n      },\n      \n      DECREASE_WEATHER_DAYS(state) {\n        if (state.daysRemaining > 0) {\n          state.daysRemaining--;\n        }\n      },\n      \n      RESET_WEATHER(state) {\n        state.current = 'sunny';\n        state.effectMultiplier = 1.0;\n        state.daysRemaining = 0;\n      }\n    },\n  \n    actions: {\n      // 隨機更換天氣\n      changeWeather({ state, commit, dispatch }) {\n        // 如果當前天氣還有剩餘天數，不更換\n        if (state.daysRemaining > 0) {\n          commit('DECREASE_WEATHER_DAYS');\n          return;\n        }\n        \n        // 天氣類型概率分佈 (加權隨機)\n        const weatherChances = {\n          sunny: 0.3,    // 30% 機率\n          cloudy: 0.25,  // 25% 機率\n          rainy: 0.15,   // 15% 機率\n          windy: 0.15,   // 15% 機率\n          drought: 0.05, // 5% 機率\n          cold: 0.05,    // 5% 機率\n          perfect: 0.05  // 5% 機率\n        };\n        \n        // 隨機選擇天氣\n        const roll = Math.random();\n        let selectedWeather = 'sunny'; // 默認晴天\n        let cumulativeChance = 0;\n        \n        for (const [weather, chance] of Object.entries(weatherChances)) {\n          cumulativeChance += chance;\n          if (roll < cumulativeChance) {\n            selectedWeather = weather;\n            break;\n          }\n        }\n        \n        // 設置新天氣，持續1-3天\n        const duration = Math.floor(Math.random() * 3) + 1;\n        \n        commit('SET_WEATHER', {\n          current: selectedWeather,\n          effectMultiplier: state.weatherTypes[selectedWeather].effect,\n          daysRemaining: duration\n        });\n        \n        // 通知玩家\n        dispatch('showNotification', {\n          message: `天氣變化: ${state.weatherTypes[selectedWeather].name} - ${state.weatherTypes[selectedWeather].description}`,\n          type: 'info'\n        }, { root: true });\n        \n        // 如果是惡劣天氣，可能觸發天氣挑戰\n        if (state.weatherTypes[selectedWeather].effect < 0.7 && Math.random() < 0.3) {\n          dispatch('challenges/createWeatherChallenge', {\n            weatherType: selectedWeather\n          }, { root: true });\n        }\n      },\n      \n      // 通過特殊能力改善天氣\n      improveWeather({ state, commit, dispatch }) {\n        // 如果已經是最佳天氣，不改變\n        if (state.current === 'perfect') {\n          dispatch('showNotification', {\n            message: '天氣已經是最佳狀態！',\n            type: 'info'\n          }, { root: true });\n          return;\n        }\n        \n        // 設置為完美天氣，持續1天\n        commit('SET_WEATHER', {\n          current: 'perfect',\n          effectMultiplier: state.weatherTypes['perfect'].effect,\n          daysRemaining: 1\n        });\n        \n        dispatch('showNotification', {\n          message: '使用了天氣改善技術！現在是完美的採蜜天氣',\n          type: 'success'\n        }, { root: true });\n      }\n    }\n  };","export default {\n    namespaced: true,\n  \n    state: {\n      currentTask: null,\n      clicksCompleted: 0,\n      clicksNeeded: 0,\n      taskProgress: 0,\n      taskName: '',\n      onComplete: null\n    },\n  \n    getters: {\n      isTaskActive(state) {\n        return state.currentTask !== null;\n      },\n      \n      taskProgressPercentage(state) {\n        if (state.clicksNeeded === 0) return 0;\n        return (state.clicksCompleted / state.clicksNeeded) * 100;\n      }\n    },\n  \n    mutations: {\n      SET_TASK(state, { taskName, clicksNeeded, onComplete }) {\n        state.currentTask = true;\n        state.clicksCompleted = 0;\n        state.clicksNeeded = clicksNeeded;\n        state.taskProgress = 0;\n        state.taskName = taskName;\n        state.onComplete = onComplete;\n      },\n      \n      CLEAR_TASK(state) {\n        state.currentTask = null;\n        state.clicksCompleted = 0;\n        state.clicksNeeded = 0;\n        state.taskProgress = 0;\n        state.taskName = '';\n        state.onComplete = null;\n      },\n      \n      PROGRESS_TASK(state) {\n        state.clicksCompleted++;\n        state.taskProgress = (state.clicksCompleted / state.clicksNeeded) * 100;\n      }\n    },\n  \n    actions: {\n      // 開始一個勞力任務\n      startLaborTask({ state, commit }, { taskName, clicksNeeded, onComplete }) {\n        // 如果已有進行中的任務，拒絕新任務\n        if (state.currentTask !== null) {\n          return;\n        }\n        \n        // 設置新任務\n        commit('SET_TASK', { taskName, clicksNeeded, onComplete });\n      },\n      \n      // 完成勞力任務的一次點擊\n      progressTask({ state, commit }) {\n        if (state.currentTask === null) return;\n        \n        commit('PROGRESS_TASK');\n        \n        // 檢查是否完成任務\n        if (state.clicksCompleted >= state.clicksNeeded) {\n          // 執行完成回調\n          if (typeof state.onComplete === 'function') {\n            state.onComplete();\n          }\n          \n          // 清除任務\n          commit('CLEAR_TASK');\n        }\n      },\n      \n      // 取消當前任務\n      cancelTask({ state, commit, dispatch }) {\n        if (state.currentTask === null) return;\n        \n        const taskName = state.taskName;\n        commit('CLEAR_TASK');\n        \n        dispatch('showNotification', {\n          message: `取消任務: ${taskName}`,\n          type: 'warning'\n        }, { root: true });\n      }\n    }\n  };","export default {\n    namespaced: true,\n    \n    state: {\n      tasks: [\n        {\n          id: 'daily-collect-honey',\n          title: '蜜蜂勤勞家',\n          description: '今日收集蜂蜜',\n          type: 'daily',\n          currentValue: 0,\n          targetValue: 10,\n          unit: 'kg',\n          rewards: {\n            money: 100\n          },\n          canClaim: false,\n          completed: false,\n          createdAt: Date.now(),\n          expiresAt: Date.now() + 86400000 // 24小時後過期\n        },\n        {\n          id: 'daily-sell-honey',\n          title: '養蜂商人',\n          description: '今日出售蜂蜜',\n          type: 'daily',\n          currentValue: 0,\n          targetValue: 5,\n          unit: 'kg',\n          rewards: {\n            money: 150\n          },\n          canClaim: false,\n          completed: false,\n          createdAt: Date.now(),\n          expiresAt: Date.now() + 86400000 // 24小時後過期\n        },\n        {\n          id: 'weekly-fulfill-orders',\n          title: '訂單達人',\n          description: '完成客戶訂單',\n          type: 'weekly',\n          currentValue: 0,\n          targetValue: 5,\n          unit: '筆',\n          rewards: {\n            money: 500,\n            honey: 5\n          },\n          canClaim: false,\n          completed: false,\n          createdAt: Date.now(),\n          expiresAt: Date.now() + 604800000 // 7天後過期\n        },\n        {\n          id: 'main-buy-bees',\n          title: '蜂巢擴張',\n          description: '購買蜜蜂',\n          type: 'main',\n          currentValue: 0,\n          targetValue: 10,\n          unit: '隻',\n          rewards: {\n            money: 200,\n            bees: 1\n          },\n          canClaim: false,\n          completed: false,\n          createdAt: Date.now()\n        },\n        {\n          id: 'main-upgrade-hive',\n          title: '蜂巢升級',\n          description: '升級你的蜂巢',\n          type: 'main',\n          currentValue: 0,\n          targetValue: 3,\n          unit: '次',\n          rewards: {\n            money: 300,\n            honey: 10\n          },\n          canClaim: false,\n          completed: false,\n          createdAt: Date.now()\n        }\n      ],\n      newTaskNotification: false\n    },\n    \n    getters: {\n      dailyTasks: state => state.tasks.filter(task => task.type === 'daily'),\n      weeklyTasks: state => state.tasks.filter(task => task.type === 'weekly'),\n      mainTasks: state => state.tasks.filter(task => task.type === 'main'),\n      \n      // 檢查是否有新任務可以領取\n      hasNewTasks: state => {\n        return state.tasks.some(task => task.canClaim && !task.completed);\n      }\n    },\n    \n    mutations: {\n      UPDATE_TASK_PROGRESS(state, { taskId, progress }) {\n        const task = state.tasks.find(task => task.id === taskId);\n        if (task) {\n          task.currentValue = Math.min(task.currentValue + progress, task.targetValue);\n          task.canClaim = task.currentValue >= task.targetValue && !task.completed;\n        }\n      },\n      \n      CLAIM_TASK_REWARD(state, taskId) {\n        const task = state.tasks.find(task => task.id === taskId);\n        if (task && task.canClaim) {\n          task.completed = true;\n          task.canClaim = false;\n        }\n      },\n      \n      REFRESH_TASKS(state) {\n        // 檢查過期任務並重新生成\n        const now = Date.now();\n        \n        // 處理每日任務\n        state.tasks = state.tasks.filter(task => {\n          // 保留未過期或已完成的主線任務\n          if (task.type === 'main') {\n            return true;\n          }\n          \n          // 保留未過期的每日/每週任務\n          if (!task.expiresAt || task.expiresAt > now) {\n            return true;\n          }\n          \n          // 過期任務不保留\n          return false;\n        });\n        \n        // 添加新的每日任務（如果需要）\n        if (state.tasks.filter(t => t.type === 'daily').length < 3) {\n          // 生成新的每日任務\n          // 這裡可以添加更多隨機任務\n        }\n        \n        // 添加新的每週任務（如果需要）\n        if (state.tasks.filter(t => t.type === 'weekly').length < 2) {\n          // 生成新的每週任務\n        }\n      },\n      \n      SET_NEW_TASK_NOTIFICATION(state, value) {\n        state.newTaskNotification = value;\n      },\n\n      SET_TASKS_DATA(state, tasksData) {\n        if (tasksData.tasks) {\n          state.tasks = tasksData.tasks;\n        }\n        if (tasksData.newTaskNotification !== undefined) {\n          state.newTaskNotification = tasksData.newTaskNotification;\n        }\n      },\n      \n      // 設置任務列表\n      SET_TASKS(state, tasks) {\n        state.tasks = tasks;\n      },\n    },\n    \n    actions: {\n      // 初始化任務系統\n      initTasks({ commit }) {\n        commit('REFRESH_TASKS');\n      },\n      \n      // 更新任務進度\n      updateProgress({ commit }, { taskId, progress }) {\n        commit('UPDATE_TASK_PROGRESS', { taskId, progress });\n      },\n      \n      // 領取任務獎勵\n      claimReward({ commit, state, dispatch }, taskId) {\n        const task = state.tasks.find(task => task.id === taskId);\n        if (!task || !task.canClaim) return;\n        \n        // 發放獎勵\n        if (task.rewards.money) {\n          dispatch('ADD_MONEY', task.rewards.money, { root: true });\n        }\n        \n        if (task.rewards.honey) {\n          // 添加蜂蜜到倉庫\n          dispatch('honey/ADD_HONEY_BY_TYPE', { \n            type: 'common', \n            amount: task.rewards.honey \n          }, { root: true });\n        }\n        \n        if (task.rewards.bees) {\n          dispatch('bees/ADD_BEES', task.rewards.bees, { root: true });\n        }\n        \n        // 標記任務為已完成\n        commit('CLAIM_TASK_REWARD', taskId);\n        \n        // 顯示通知\n        dispatch('showNotification', {\n          message: `已完成任務：${task.title}，獲得獎勵！`,\n          type: 'success'\n        }, { root: true });\n      },\n      \n      // 刷新任務\n      refreshTasks({ commit }) {\n        commit('REFRESH_TASKS');\n      },\n      \n      // 監聽各種遊戲事件並更新對應任務\n      trackCollectHoney({ commit }, amount) {\n        // 更新收集蜂蜜相關任務\n        commit('UPDATE_TASK_PROGRESS', { \n          taskId: 'daily-collect-honey', \n          progress: amount \n        });\n      },\n      \n      trackSellHoney({ commit }, amount) {\n        // 更新出售蜂蜜相關任務\n        commit('UPDATE_TASK_PROGRESS', { \n          taskId: 'daily-sell-honey', \n          progress: amount \n        });\n      },\n      \n      trackFulfillOrder({ commit }) {\n        // 更新完成訂單相關任務\n        commit('UPDATE_TASK_PROGRESS', { \n          taskId: 'weekly-fulfill-orders', \n          progress: 1 \n        });\n      },\n      \n      trackBuyBee({ commit }) {\n        // 更新購買蜜蜂相關任務\n        commit('UPDATE_TASK_PROGRESS', { \n          taskId: 'main-buy-bees', \n          progress: 1 \n        });\n      },\n      \n      trackUpgradeHive({ commit }) {\n        // 更新升級蜂巢相關任務\n        commit('UPDATE_TASK_PROGRESS', { \n          taskId: 'main-upgrade-hive', \n          progress: 1 \n        });\n      }\n    }\n  };","export default {\n    namespaced: true,\n    \n    state: {\n      achievements: [\n        // 蜜蜂相關成就\n        {\n          id: 'bees-10',\n          title: '小型蜂場',\n          description: '擁有10隻蜜蜂',\n          hint: '擴大你的蜂場規模',\n          icon: '🐝',\n          category: 'bees',\n          unlocked: false,\n          unlockedAt: null,\n          progress: 0,\n          target: 10\n        },\n        {\n          id: 'bees-50',\n          title: '中型蜂場',\n          description: '擁有50隻蜜蜂',\n          hint: '繼續擴大你的蜂場',\n          icon: '🐝',\n          category: 'bees',\n          unlocked: false,\n          unlockedAt: null,\n          progress: 0,\n          target: 50\n        },\n        {\n          id: 'bees-100',\n          title: '大型蜂場',\n          description: '擁有100隻蜜蜂',\n          hint: '建立一個龐大的蜂群',\n          icon: '🐝',\n          category: 'bees',\n          unlocked: false,\n          unlockedAt: null,\n          progress: 0,\n          target: 100\n        },\n        {\n          id: 'hive-level-5',\n          title: '高級蜂巢',\n          description: '將蜂巢升級到5級',\n          hint: '提升你的蜂巢等級',\n          icon: '🏠',\n          category: 'bees',\n          unlocked: false,\n          unlockedAt: null,\n          progress: 0,\n          target: 5\n        },\n        \n        // 蜂蜜相關成就\n        {\n          id: 'honey-100',\n          title: '蜂蜜初學者',\n          description: '累計收集100kg蜂蜜',\n          hint: '收集更多蜂蜜',\n          icon: '🍯',\n          category: 'honey',\n          unlocked: false,\n          unlockedAt: null,\n          progress: 0,\n          target: 100\n        },\n        {\n          id: 'honey-1000',\n          title: '蜂蜜專家',\n          description: '累計收集1000kg蜂蜜',\n          hint: '成為蜂蜜生產專家',\n          icon: '🍯',\n          category: 'honey',\n          unlocked: false,\n          unlockedAt: null,\n          progress: 0,\n          target: 1000\n        },\n        {\n          id: 'honey-storage-200',\n          title: '擴充倉庫',\n          description: '將蜂蜜倉庫容量擴充到200kg',\n          hint: '擴大你的儲存空間',\n          icon: '📦',\n          category: 'honey',\n          unlocked: false,\n          unlockedAt: null,\n          progress: 0,\n          target: 200\n        },\n        \n        // 採集相關成就\n        {\n          id: 'foraging-10',\n          title: '探險家',\n          description: '完成10次採蜜任務',\n          hint: '派遣蜜蜂出去採集',\n          icon: '🌿',\n          category: 'foraging',\n          unlocked: false,\n          unlockedAt: null,\n          progress: 0,\n          target: 10\n        },\n        {\n          id: 'rare-honey-5',\n          title: '稀有蜂蜜收藏家',\n          description: '收集5kg稀有蜂蜜',\n          hint: '尋找珍貴的花蜜來源',\n          icon: '🌸',\n          category: 'foraging',\n          unlocked: false,\n          unlockedAt: null,\n          progress: 0,\n          target: 5\n        },\n        \n        // 訂單相關成就\n        {\n          id: 'orders-10',\n          title: '可靠供應商',\n          description: '完成10筆訂單',\n          hint: '滿足客戶的需求',\n          icon: '📝',\n          category: 'orders',\n          unlocked: false,\n          unlockedAt: null,\n          progress: 0,\n          target: 10\n        },\n        {\n          id: 'orders-50',\n          title: '蜂蜜企業家',\n          description: '完成50筆訂單',\n          hint: '經營一個成功的蜂蜜生意',\n          icon: '💼',\n          category: 'orders',\n          unlocked: false,\n          unlockedAt: null,\n          progress: 0,\n          target: 50\n        },\n        \n        // 挑戰相關成就\n        {\n          id: 'challenges-5',\n          title: '問題解決者',\n          description: '成功應對5次養蜂挑戰',\n          hint: '解決蜂場遇到的各種挑戰',\n          icon: '⚔️',\n          category: 'challenges',\n          unlocked: false,\n          unlockedAt: null,\n          progress: 0,\n          target: 5\n        },\n        {\n          id: 'challenges-health-100',\n          title: '健康蜂場',\n          description: '保持蜂巢健康度在100%持續一週',\n          hint: '關注蜂巢的健康狀況',\n          icon: '❤️',\n          category: 'challenges',\n          unlocked: false,\n          unlockedAt: null,\n          progress: 0,\n          target: 7\n        }\n      ],\n      newAchievementNotification: false,\n      totalHoneyCollected: 0,\n      totalOrdersFulfilled: 0,\n      totalChallengesSolved: 0,\n      healthyDaysCount: 0\n    },\n    \n    getters: {\n      unlockedAchievements: state => state.achievements.filter(a => a.unlocked),\n      \n      hasNewAchievements: state => state.newAchievementNotification\n    },\n    \n    mutations: {\n      UPDATE_ACHIEVEMENT_PROGRESS(state, { achievementId, progress }) {\n        const achievement = state.achievements.find(a => a.id === achievementId);\n        if (achievement && !achievement.unlocked) {\n          achievement.progress = Math.min(achievement.progress + progress, achievement.target);\n          \n          // 檢查是否解鎖\n          if (achievement.progress >= achievement.target) {\n            achievement.unlocked = true;\n            achievement.unlockedAt = Date.now();\n            state.newAchievementNotification = true;\n          }\n        }\n      },\n      \n      UPDATE_BEES_COUNT(state, count) {\n        // 更新蜜蜂數量相關成就\n        state.achievements.forEach(achievement => {\n          if (['bees-10', 'bees-50', 'bees-100'].includes(achievement.id) && !achievement.unlocked) {\n            achievement.progress = count;\n            if (count >= achievement.target) {\n              achievement.unlocked = true;\n              achievement.unlockedAt = Date.now();\n              state.newAchievementNotification = true;\n            }\n          }\n        });\n      },\n      \n      UPDATE_HIVE_LEVEL(state, level) {\n        const achievement = state.achievements.find(a => a.id === 'hive-level-5');\n        if (achievement && !achievement.unlocked) {\n          achievement.progress = level;\n          if (level >= achievement.target) {\n            achievement.unlocked = true;\n            achievement.unlockedAt = Date.now();\n            state.newAchievementNotification = true;\n          }\n        }\n      },\n      \n      UPDATE_HONEY_COLLECTED(state, amount) {\n        state.totalHoneyCollected += amount;\n        \n        // 更新蜂蜜收集相關成就\n        state.achievements.forEach(achievement => {\n          if (['honey-100', 'honey-1000'].includes(achievement.id) && !achievement.unlocked) {\n            achievement.progress = state.totalHoneyCollected;\n            if (state.totalHoneyCollected >= achievement.target) {\n              achievement.unlocked = true;\n              achievement.unlockedAt = Date.now();\n              state.newAchievementNotification = true;\n            }\n          }\n        });\n      },\n      \n      UPDATE_HONEY_STORAGE_CAPACITY(state, capacity) {\n        const achievement = state.achievements.find(a => a.id === 'honey-storage-200');\n        if (achievement && !achievement.unlocked) {\n          achievement.progress = capacity;\n          if (capacity >= achievement.target) {\n            achievement.unlocked = true;\n            achievement.unlockedAt = Date.now();\n            state.newAchievementNotification = true;\n          }\n        }\n      },\n      \n      UPDATE_FORAGING_MISSIONS(state, count) {\n        const achievement = state.achievements.find(a => a.id === 'foraging-10');\n        if (achievement && !achievement.unlocked) {\n          achievement.progress = count;\n          if (count >= achievement.target) {\n            achievement.unlocked = true;\n            achievement.unlockedAt = Date.now();\n            state.newAchievementNotification = true;\n          }\n        }\n      },\n      \n      UPDATE_RARE_HONEY(state, amount) {\n        const achievement = state.achievements.find(a => a.id === 'rare-honey-5');\n        if (achievement && !achievement.unlocked) {\n          achievement.progress = amount;\n          if (amount >= achievement.target) {\n            achievement.unlocked = true;\n            achievement.unlockedAt = Date.now();\n            state.newAchievementNotification = true;\n          }\n        }\n      },\n      \n      UPDATE_ORDERS_FULFILLED(state, count) {\n        state.totalOrdersFulfilled = count;\n        \n        // 更新訂單相關成就\n        state.achievements.forEach(achievement => {\n          if (['orders-10', 'orders-50'].includes(achievement.id) && !achievement.unlocked) {\n            achievement.progress = state.totalOrdersFulfilled;\n            if (state.totalOrdersFulfilled >= achievement.target) {\n              achievement.unlocked = true;\n              achievement.unlockedAt = Date.now();\n              state.newAchievementNotification = true;\n            }\n          }\n        });\n      },\n      \n      UPDATE_CHALLENGES_SOLVED(state, count) {\n        state.totalChallengesSolved = count;\n        \n        const achievement = state.achievements.find(a => a.id === 'challenges-5');\n        if (achievement && !achievement.unlocked) {\n          achievement.progress = count;\n          if (count >= achievement.target) {\n            achievement.unlocked = true;\n            achievement.unlockedAt = Date.now();\n            state.newAchievementNotification = true;\n          }\n        }\n      },\n      \n      UPDATE_HEALTHY_DAYS(state, health) {\n        // 如果健康度是100%，增加天數\n        if (health === 100) {\n          state.healthyDaysCount++;\n        } else {\n          // 否則重置計數\n          state.healthyDaysCount = 0;\n        }\n        \n        const achievement = state.achievements.find(a => a.id === 'challenges-health-100');\n        if (achievement && !achievement.unlocked) {\n          achievement.progress = state.healthyDaysCount;\n          if (state.healthyDaysCount >= achievement.target) {\n            achievement.unlocked = true;\n            achievement.unlockedAt = Date.now();\n            state.newAchievementNotification = true;\n          }\n        }\n      },\n      \n      CLEAR_NEW_ACHIEVEMENT_NOTIFICATION(state) {\n        state.newAchievementNotification = false;\n      }\n    },\n    \n    actions: {\n      // 初始化成就系統\n      initAchievements({ commit, rootState }) {\n        // 初始化時更新成就進度\n        if (rootState.bees) {\n          commit('UPDATE_BEES_COUNT', rootState.bees.bees);\n          commit('UPDATE_HIVE_LEVEL', rootState.bees.hiveLevel);\n        }\n        \n        if (rootState.honey) {\n          commit('UPDATE_HONEY_STORAGE_CAPACITY', rootState.honey.capacity);\n        }\n        \n        if (rootState.orders) {\n          commit('UPDATE_ORDERS_FULFILLED', rootState.orders.completed.length);\n        }\n      },\n      \n      // 檢查和更新成就\n      checkAchievements({ commit, rootState }) {\n        // 這個方法可以定期調用，檢查遊戲狀態並更新相應的成就進度\n        if (rootState.bees) {\n          commit('UPDATE_BEES_COUNT', rootState.bees.bees);\n          commit('UPDATE_HIVE_LEVEL', rootState.bees.hiveLevel);\n          commit('UPDATE_HEALTHY_DAYS', rootState.bees.hiveHealth);\n        }\n        \n        if (rootState.honey) {\n          commit('UPDATE_HONEY_STORAGE_CAPACITY', rootState.honey.capacity);\n          \n          // 檢查稀有蜂蜜數量\n          if (rootState.honey.inventory && rootState.honey.inventory.rare) {\n            commit('UPDATE_RARE_HONEY', rootState.honey.inventory.rare);\n          }\n        }\n        \n        if (rootState.foraging && rootState.foraging.missionStats) {\n          commit('UPDATE_FORAGING_MISSIONS', rootState.foraging.missionStats.totalMissions);\n        }\n        \n        if (rootState.orders) {\n          commit('UPDATE_ORDERS_FULFILLED', rootState.orders.completed.length);\n        }\n        \n        if (rootState.challenges) {\n          commit('UPDATE_CHALLENGES_SOLVED', rootState.challenges.solvedChallenges || 0);\n        }\n      },\n      \n      // 清除新成就通知\n      clearNewAchievementNotification({ commit }) {\n        commit('CLEAR_NEW_ACHIEVEMENT_NOTIFICATION');\n      },\n      \n      // 記錄收集的蜂蜜\n      trackHoneyCollected({ commit }, amount) {\n        commit('UPDATE_HONEY_COLLECTED', amount);\n      }\n    }\n  };","export default {\n  namespaced: true,\n  \n  state: {\n    db: null,\n    auth: null,\n    currentUser: null,\n    isLoading: false,\n    error: null\n  },\n  \n  getters: {\n    isAuthenticated: state => !!state.currentUser,\n    userId: state => state.currentUser ? state.currentUser.uid : null,\n    userEmail: state => state.currentUser ? state.currentUser.email : null,\n    displayName: state => state.currentUser ? (state.currentUser.displayName || state.currentUser.email) : null\n  },\n  \n  mutations: {\n    SET_DB(state, db) {\n      state.db = db;\n    },\n    SET_AUTH(state, auth) {\n      state.auth = auth;\n    },\n    SET_CURRENT_USER(state, user) {\n      state.currentUser = user;\n    },\n    SET_LOADING(state, isLoading) {\n      state.isLoading = isLoading;\n    },\n    SET_ERROR(state, error) {\n      state.error = error;\n    }\n  },\n  \n  actions: {\n    // 設置 Firebase 實例\n    setInstances({ commit }, { db, auth }) {\n      commit('SET_DB', db);\n      commit('SET_AUTH', auth);\n    },\n    \n    // 設置當前用戶\n    setCurrentUser({ commit }, user) {\n      commit('SET_CURRENT_USER', user);\n      // 如果用戶登入，保存到 localStorage 以便本地存取\n      if (user) {\n        localStorage.setItem('beekeeper_current_user', user.uid);\n      } else {\n        localStorage.removeItem('beekeeper_current_user');\n      }\n    },\n    \n    // 處理錯誤\n    handleError({ commit }, error) {\n      console.error('Firebase 錯誤:', error);\n      commit('SET_ERROR', error.message);\n      setTimeout(() => {\n        commit('SET_ERROR', null);\n      }, 5000);\n    }\n  }\n};","// 修改導入，使用 Realtime Database 的 API\nimport { ref, set, get, child } from \"firebase/database\";\n\n// 存檔插件\nexport const saveGamePlugin = (store) => {\n  // 定期自動保存\n  setInterval(() => {\n    store.dispatch(\"persistence/saveGame\");\n  }, 60000); // 每分鐘保存一次\n};\n\nexport default {\n  namespaced: true,\n\n  actions: {\n    // 保存遊戲 - 修改為使用 Realtime Database\n    async saveGame({ rootState }) {\n      try {\n        // 獲取當前登入的用戶\n        const currentUser = rootState.firebase.currentUser;\n        const localUser = localStorage.getItem(\"beekeeper_current_user\");\n\n        if (!currentUser && !localUser) {\n          console.error(\"沒有登入用戶，無法保存遊戲\");\n          return;\n        }\n\n        const userId = currentUser ? currentUser.uid : localUser;\n\n        const gameData = {\n          money: rootState.money,\n\n          // 蜜蜂模組\n          bees: {\n            bees: rootState.bees.bees,\n            assignedBees: rootState.bees.assignedBees || 0, // 添加這行\n            hiveLevel: rootState.bees.hiveLevel,\n            hiveHealth: rootState.bees.hiveHealth,\n            hiveCapacity: rootState.bees.hiveCapacity,\n            honeyPerBeePerMinute: rootState.bees.honeyPerBeePerMinute,\n            costs: rootState.bees.costs,\n          },\n\n          // 蜂蜜模組\n          honey: {\n            production: rootState.honey.production,\n            inventory: rootState.honey.inventory,\n            capacity: rootState.honey.capacity,\n          },\n\n          // 訂單模組\n          orders: {\n            active: rootState.orders.active,\n            completed: rootState.orders.completed,\n            maxActive: rootState.orders.maxActive,\n          },\n\n          // 採蜜模組\n          foraging: {\n            areas: rootState.foraging.areas,\n            activeMissions: rootState.foraging.activeMissions,\n            selectedArea: rootState.foraging.selectedArea,\n            maxMissions: rootState.foraging.maxMissions,\n            honeyCollected: rootState.foraging.honeyCollected,\n            missionStats: rootState.foraging.missionStats,\n            missionHistory: rootState.foraging.missionHistory,\n          },\n\n          // 挑戰模組\n          challenges: {\n            currentChallenge: rootState.challenges.currentChallenge,\n            lastChallengeTime: rootState.challenges.lastChallengeTime,\n          },\n\n          laborTasks: {\n            currentTask: rootState.laborTasks.currentTask,\n            clicksCompleted: rootState.laborTasks.clicksCompleted,\n            clicksNeeded: rootState.laborTasks.clicksNeeded,\n            taskName: rootState.laborTasks.taskName,\n          },\n\n          tasks: {\n            tasks: rootState.tasks.tasks,\n            newTaskNotification: rootState.tasks.newTaskNotification,\n          },\n\n          // 天氣模組\n          weather: rootState.weather,\n\n          savedAt: Date.now(),\n        };\n\n        // 使用用戶名作為存檔的key，每個用戶有自己的存檔\n        localStorage.setItem(\n          `beekeeperGame_${userId}`,\n          JSON.stringify(gameData)\n        );\n\n        // Firebase Realtime Database 保存\n        if (rootState.firebase.database && currentUser) {\n          try {\n            // 獲取 Realtime Database 實例\n            const database = rootState.firebase.database;\n            \n            // 保存到 Realtime Database\n            const gameRef = ref(database, `gameData/${userId}`);\n            await set(gameRef, {\n              ...gameData,\n              lastSaved: new Date().toISOString()\n            });\n          } catch (firebaseError) {\n            console.error(\"Firebase 保存失敗:\", firebaseError);\n          }\n        }\n      } catch (e) {\n        console.error(\"保存遊戲時出錯:\", e);\n      }\n    },\n\n    // 載入遊戲 - 修改為使用 Realtime Database\n    async loadGame({ commit, rootState, dispatch }) {\n      try {\n        // 獲取當前登入的用戶\n        const currentUser = rootState.firebase.currentUser;\n        const localUser = localStorage.getItem(\"beekeeper_current_user\");\n        \n        if (!currentUser && !localUser) {\n          console.error(\"沒有登入用戶，無法載入遊戲\");\n          return false;\n        }\n        \n        const userId = currentUser ? currentUser.uid : localUser;\n        let gameData = null;\n        \n        // 嘗試從 Firebase Realtime Database 載入\n        if (rootState.firebase.database && currentUser) {\n          try {\n            // 獲取 Realtime Database 實例\n            const database = rootState.firebase.database;\n            \n            // 從 Realtime Database 讀取\n            const dbRef = ref(database);\n            const snapshot = await get(child(dbRef, `gameData/${userId}`));\n            \n            if (snapshot.exists()) {\n              gameData = snapshot.val();\n            } else {\n              console.log(`Firebase 中沒有找到用戶 ${userId} 的遊戲數據`);\n            }\n          } catch (firebaseError) {\n            console.error(\"Firebase 載入失敗:\", firebaseError);\n            console.error(\"詳細錯誤:\", firebaseError.message);\n          }\n        }\n        \n        // 如果 Firebase 載入失敗，嘗試從 localStorage 載入\n        if (!gameData) {\n          const savedGame = localStorage.getItem(`beekeeperGame_${userId}`);\n          \n          if (savedGame) {\n            try {\n              gameData = JSON.parse(savedGame);\n            } catch (parseError) {\n              console.error(\"解析本地存儲數據失敗:\", parseError);\n            }\n          }\n        }\n        \n        if (!gameData) {\n          console.log(`沒有找到保存的遊戲數據，初始化新遊戲`);\n          \n          // 初始化新遊戲\n          commit(\"bees/ADD_BEES\", 3, { root: true });\n          commit(\"bees/SET_HIVE_LEVEL\", 1, { root: true });\n          commit(\"bees/SET_HIVE_HEALTH\", 100, { root: true });\n          commit(\"honey/SET_HONEY_CAPACITY\", 100, { root: true });\n          commit(\"SET_MONEY\", 100, { root: true });\n          \n          // 如果有 Firebase 實例，也保存這個初始狀態\n          if (rootState.firebase.database && currentUser) {\n            dispatch(\"saveGame\");\n          }\n          \n          return true;\n        }\n        \n        // 數據驗證\n        if (!validateGameData(gameData)) {\n          console.error(\"遊戲數據無效，初始化新遊戲\");\n          commit(\"bees/ADD_BEES\", 3, { root: true });\n          return false;\n        }\n\n        // 載入遊戲數據到 store\n        // 金錢\n        if (typeof gameData.money === 'number') {\n          commit(\"SET_MONEY\", gameData.money, { root: true });\n        }\n        \n        // 載入蜜蜂模組數據\n        if (gameData.bees) {\n          const bees = gameData.bees;\n\n          if (bees.bees !== undefined) {\n            commit(\"bees/SET_BEES\", bees.bees, { root: true });\n          }\n\n          if (bees.hiveLevel !== undefined) {\n            commit(\"bees/SET_HIVE_LEVEL\", bees.hiveLevel, { root: true });\n          }\n\n          if (bees.hiveHealth !== undefined) {\n            commit(\"bees/SET_HIVE_HEALTH\", bees.hiveHealth, { root: true });\n          }\n\n          if (bees.assignedBees !== undefined) {\n            commit(\"bees/SET_ASSIGNED_BEES\", bees.assignedBees, { root: true });\n          }\n\n          if (bees.hiveCapacity !== undefined) {\n            commit(\"bees/SET_HIVE_CAPACITY\", bees.hiveCapacity, { root: true });\n          }\n\n          if (bees.honeyPerBeePerMinute !== undefined) {\n            commit(\"bees/SET_HONEY_EFFICIENCY\", bees.honeyPerBeePerMinute, {\n              root: true,\n            });\n          }\n\n          if (bees.costs) {\n            commit(\"bees/SET_COSTS\", bees.costs, { root: true });\n          }\n        }\n\n        // 載入蜂蜜模組數據\n        if (gameData.honey) {\n          const honey = gameData.honey;\n\n          // 檢查是新格式還是舊格式\n          if (typeof honey === \"object\" && honey.inventory) {\n            commit(\"honey/SET_HONEY_CAPACITY\", honey.capacity || 100, {\n              root: true,\n            });\n\n            // 設置蜂蜜產出\n            if (honey.production !== undefined) {\n              commit(\"honey/SET_PRODUCTION\", honey.production, { root: true });\n            } else if (honey.total !== undefined) {\n              // 兼容舊格式\n              commit(\"honey/SET_PRODUCTION\", honey.total, { root: true });\n            }\n\n            // 按類型添加蜂蜜到庫存\n            for (const type in honey.inventory) {\n              if (honey.inventory[type] > 0) {\n                commit(\n                  \"honey/ADD_HONEY_BY_TYPE\",\n                  {\n                    type,\n                    amount: honey.inventory[type],\n                  },\n                  { root: true }\n                );\n              }\n            }\n          } else {\n            commit(\"honey/SET_PRODUCTION\", honey, { root: true });\n          }\n        }\n\n        // 載入訂單模組數據\n        if (gameData.orders) {\n          commit(\"orders/SET_ORDERS\", gameData.orders, { root: true });\n        }\n\n        // 載入採蜜模組數據\n        if (gameData.foraging) {\n          const foragingData = {\n            activeMissions: gameData.foraging.activeMissions || [],\n            selectedArea: gameData.foraging.selectedArea || null,\n            honeyCollected: gameData.foraging.honeyCollected || {\n              common: 0,\n              wildflower: 0,\n              mountain: 0,\n              rare: 0,\n            },\n            maxMissions: gameData.foraging.maxMissions || 3,\n            missionHistory: gameData.foraging.missionHistory || [],\n            missionStats: gameData.foraging.missionStats || {\n              totalMissions: 0,\n              successMissions: 0,\n              failedMissions: 0,\n            },\n          };\n\n          commit(\"foraging/SET_FORAGING_DATA\", foragingData, { root: true });\n        }\n\n        // 載入任務模組數據\n        if (gameData.tasks) {\n          // 直接設置整個任務狀態\n          commit(\"tasks/SET_TASKS_DATA\", gameData.tasks, { root: true });\n\n          // 可選：分別設置任務列表和通知狀態\n          if (gameData.tasks.tasks) {\n            commit(\"tasks/SET_TASKS\", gameData.tasks.tasks, { root: true });\n          }\n\n          if (gameData.tasks.newTaskNotification !== undefined) {\n            commit(\n              \"tasks/SET_NEW_TASK_NOTIFICATION\",\n              gameData.tasks.newTaskNotification,\n              { root: true }\n            );\n          }\n        }\n\n        // 載入挑戰模組數據\n        if (gameData.challenges) {\n          if (gameData.challenges.currentChallenge) {\n            commit(\n              \"challenges/SET_CHALLENGE\",\n              gameData.challenges.currentChallenge,\n              { root: true }\n            );\n          }\n\n          if (gameData.challenges.lastChallengeTime) {\n            commit(\n              \"challenges/SET_LAST_CHALLENGE_TIME\",\n              gameData.challenges.lastChallengeTime,\n              { root: true }\n            );\n          }\n        }\n\n        // 載入天氣模組數據\n        if (gameData.weather) {\n          commit(\"weather/SET_WEATHER\", gameData.weather, { root: true });\n        }\n        return true;\n      } catch (e) {\n        console.error(\"加載遊戲數據時出錯:\", e);\n        console.error(\"詳細錯誤:\", e.stack);\n        // 初始化默認數據\n        commit(\"bees/ADD_BEES\", 3, { root: true });\n        return false;\n      } finally {\n        // 檢查成就\n        dispatch(\"achievements/checkAchievements\", null, { root: true });\n      }\n    },\n\n    // 刪除存檔 (可選) - 同時刪除本地和 Firebase 中的數據\n    async deleteGameSave({ rootState }, username) {\n      if (!username) {\n        console.error(\"沒有指定用戶名，無法刪除存檔\");\n        return;\n      }\n\n      // 刪除本地存檔\n      localStorage.removeItem(`beekeeperGame_${username}`);\n      console.log(`已刪除本地用戶 ${username} 的遊戲存檔`);\n\n      // 刪除 Firebase 存檔\n      const currentUser = rootState.firebase.currentUser;\n      if (rootState.firebase.database && currentUser && currentUser.uid === username) {\n        try {\n          const database = rootState.firebase.database;\n          const gameRef = ref(database, `gameData/${username}`);\n          await set(gameRef, null); // 設置為 null 來刪除數據\n          console.log(`已刪除 Firebase 中用戶 ${username} 的遊戲存檔`);\n        } catch (error) {\n          console.error(\"刪除 Firebase 存檔失敗:\", error);\n        }\n      }\n    },\n  },\n};\n\n// 保持驗證函數不變\nfunction validateGameData(data) {\n  if (!data) return false;\n  \n  // 檢查必要字段\n  return (\n    typeof data.money === 'number' &&\n    data.bees && \n    typeof data.bees.bees === 'number' &&\n    data.honey\n  );\n}\n","import { createStore } from \"vuex\";\n\n// 導入各模組\nimport beesModule from \"./modules/bees\";\nimport honeyModule from \"./modules/honey\";\nimport ordersModule from \"./modules/orders\";\nimport foragingModule from \"./modules/foraging\";\nimport challengesModule from \"./modules/challenges\";\nimport weatherModule from \"./modules/weather\";\nimport laborTasksModule from \"./modules/laborTasks\";\nimport tasks from \"./modules/tasks\";\nimport achievements from \"./modules/achievements\";\n\nimport firebase from \"./modules/firebase\";\n\n// 導入存檔系統\nimport persistenceModule from \"./helpers/persistence\";\nimport { saveGamePlugin } from \"./helpers/persistence\";\n\nexport default createStore({\n  // 根 state\n  state: {\n    currentBeeFact:\n      \"蜜蜂是地球上最重要的授粉者之一，對全球農業生產和生態系統至關重要。\",\n    money: 100,\n  },\n\n  // 根 mutations\n  mutations: {\n    SET_BEE_FACT(state, fact) {\n      state.currentBeeFact = fact;\n    },\n\n    SET_MONEY(state, amount) {\n      state.money = amount;\n    },\n\n    ADD_MONEY(state, amount) {\n      state.money += amount;\n    },\n\n    REMOVE_MONEY(state, amount) {\n      state.money = Math.max(0, state.money - amount);\n    },\n  },\n\n  // 根 actions\n  actions: {\n    // 顯示通知 (全局可用)\n    showNotification(context, { message, type = \"info\" }) {\n      const notificationArea = document.querySelector(\".notification-area\");\n      if (!notificationArea) {\n        console.error(\"無法找到通知區域元素\");\n        return;\n      }\n\n      const notification = document.createElement(\"div\");\n      notification.className = `notification ${type}`;\n      notification.textContent = message;\n\n      notificationArea.appendChild(notification);\n\n      // 3秒後自動消失\n      setTimeout(() => {\n        notification.style.animation = \"slideOut 0.3s forwards\";\n        setTimeout(() => {\n          notification.remove();\n        }, 300);\n      }, 3000);\n    },\n\n    // 初始化遊戲\n    setupGame({ commit, dispatch }) {\n      console.log(\"設置遊戲邏輯...\");\n\n      // 設置遊戲循環\n      setInterval(() => {\n        // 生產蜂蜜\n        dispatch(\"honey/produceHoney\");\n\n        // 自動保存遊戲 (每分鐘保存一次)\n        if (Date.now() % 60000 < 1000) {\n          dispatch(\"persistence/saveGame\");\n          dispatch(\"achievements/checkAchievements\");\n        }\n\n        // 隨機觸發挑戰 (每3分鐘有機率)\n        if (Date.now() % 180000 < 1000) {\n          dispatch(\"challenges/maybeStartChallenge\");\n        }\n      }, 1000);\n\n      // 訂單系統初始化\n      dispatch(\"orders/initOrders\");\n      dispatch(\"tasks/initTasks\");\n      dispatch(\"achievements/initAchievements\");\n\n      // 更新養蜂知識\n      const beeFacts = [\n        \"一隻工蜂一生中只能生產約1茶匙的蜂蜜。\",\n        \"蜂后一天可以產下多達2000顆蛋，是自己體重兩倍的蛋量。\",\n        \"蜜蜂會跳舞來告訴其他蜜蜂花蜜的位置。\",\n        \"蜜蜂翅膀每秒鐘可以拍打200次。\",\n        \"一個健康的蜂巢在夏季可以有高達80,000隻蜜蜂。\",\n      ];\n\n      commit(\n        \"SET_BEE_FACT\",\n        beeFacts[Math.floor(Math.random() * beeFacts.length)]\n      );\n\n      // 設置定時更新養蜂知識\n      setInterval(() => {\n        commit(\n          \"SET_BEE_FACT\",\n          beeFacts[Math.floor(Math.random() * beeFacts.length)]\n        );\n      }, 60000);\n    },\n\n    // 初始化遊戲 (先載入數據，再設置邏輯)\n    initGame({ dispatch }) {\n      console.log(\"初始化遊戲...\");\n      return dispatch(\"loadGame\").then(() => {\n        dispatch(\"setupGame\");\n      });\n    },\n\n    // 保存遊戲 (委派給 persistence 模組)\n    saveGame({ dispatch }) {\n      dispatch(\"persistence/saveGame\");\n    },\n\n    // 載入遊戲 (委派給 persistence 模組)\n    loadGame({ dispatch }) {\n      dispatch(\"persistence/loadGame\");\n    },\n  },\n\n  // 註冊模組\n  modules: {\n    bees: beesModule,\n    honey: honeyModule,\n    orders: ordersModule,\n    foraging: foragingModule,\n    challenges: challengesModule,\n    weather: weatherModule,\n    laborTasks: laborTasksModule,\n    persistence: persistenceModule,\n    tasks: tasks,\n    achievements: achievements,\n    firebase: firebase,\n  },\n\n  // 插件\n  plugins: [saveGamePlugin],\n});\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport './assets/global.css'\n\ncreateApp(App).use(store).use(router).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/beekeeper/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbeekeeper\"] = self[\"webpackChunkbeekeeper\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(2125); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","firebaseConfig","apiKey","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","app","initializeApp","db","getDatabase","auth","getAuth","name","data","currentUser","created","this","setFirebaseInstances","onAuthStateChanged","user","setCurrentUser","console","log","displayName","email","loadGame","$router","push","methods","mapActions","__exports__","render","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","src","_imports_0","alt","onSubmit","_cache","_withModifiers","args","$options","handleSubmit","_hoisted_3","type","_normalizeClass","active","$data","mode","onClick","$event","_hoisted_4","for","id","username","placeholder","maxlength","required","_hoisted_5","password","_hoisted_6","characterName","_createCommentVNode","message","messageType","disabled","canSubmit","isLoading","_hoisted_7","accounts","computed","trim","length","mounted","$route","query","error","decodeURIComponent","replace","path","loadAccounts","loginUser","registerUser","userCredential","signInWithEmailAndPassword","localStorage","setItem","uid","emailName","split","setTimeout","errorMessage","code","localLoginUser","createUserWithEmailAndPassword","Date","now","firebaseUid","saveAccounts","accountsData","getItem","JSON","parse","e","lastUser","stringify","ref","_toDisplayString","_ctx","currentWeather","icon","availableBees","_hoisted_8","_imports_1","_hoisted_9","honey","toFixed","_hoisted_10","_imports_2","_hoisted_11","money","_hoisted_12","_hoisted_13","_hoisted_14","_createTextVNode","style","_normalizeStyle","healthColorStyle","hiveHealth","hiveLevel","honeyPerBeePerMinute","hiveCapacity","_hoisted_15","collectHoney","canCollectHoney","_hoisted_16","buyBee","canBuyBee","beeCost","_hoisted_17","upgradeHive","canUpgradeHive","hiveUpgradeCost","_hoisted_18","checkHive","openForagingModal","openHoneyStorage","disableButtons","hasNewOrders","_hoisted_20","_hoisted_19","_hoisted_21","_hoisted_22","openTasksPanel","hasNewTasks","_hoisted_23","openAchievementsPanel","hasNewAchievements","_hoisted_24","_hoisted_25","currentChallenge","title","description","_hoisted_26","_Fragment","_renderList","solutions","solution","index","applySolution","_hoisted_27","challengeHidden","_hoisted_28","currentBeeFact","isModalActive","hidden","closeAllModals","_createVNode","_component_foraging_modal","isForagingModalActive","onCloseModal","closeForagingModal","onStartMission","startForagingMission","onSellAllHoney","sellAllHoney","onUpdateSelectedArea","updateSelectedArea","$store","state","laborTasks","currentTask","_component_labor_task_modal","task","onComplete","completeLaborTask","_component_honey_storage_modal","isHoneyStorageModalActive","closeHoneyStorageModal","_component_tasks_modal","isTasksModalActive","closeTasksModal","_component_achievements_modal","isAchievementsModalActive","closeAchievementsModal","$props","isActive","$emit","tabs","tab","activeTab","areas","area","locked","selectedArea","selectArea","yield","riskLevel","risk","time","min","max","maxBeesAssignable","beesAssigned","number","missionDuration","expectedYield","missionRisk","startMission","canStartMission","activeMissions","localMissions","mission","_hoisted_29","getAreaName","_hoisted_30","formatTime","timeRemaining","_hoisted_31","bees","_hoisted_32","width","progress","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","missionStats","totalMissions","_hoisted_37","_hoisted_38","successMissions","_hoisted_39","_hoisted_40","failedMissions","_hoisted_41","_hoisted_42","calculateSuccessRate","_hoisted_43","_hoisted_44","honeyTypes","backgroundColor","getHoneyColor","_hoisted_45","_hoisted_46","getHoneyAmount","_hoisted_47","calculateHoneyValue","_hoisted_48","calculateTotalHoney","calculateTotalValue","_hoisted_49","_hoisted_50","missionHistory","_hoisted_51","_hoisted_52","success","_hoisted_53","_hoisted_54","formatDate","date","_hoisted_55","_hoisted_56","_hoisted_57","formatHoneyGain","rewards","item","_hoisted_58","_hoisted_59","zero","amount","_hoisted_60","lostBees","props","Boolean","default","honeyColors","common","wildflower","mountain","rare","minLevel","price","missionTimer","mapState","storeSelectedArea","foraging","foragingAreas","honeyCollected","storedMissionStats","storedMissionHistory","calculateAssignedBees","beeCount","Math","find","a","yieldValue","watch","newVal","handler","deep","immediate","missions","updateLocalMissions","checkAndUnlockAreas","startMissionTimer","updated","beforeUnmount","clearMissionTimer","baseDuration","missionData","parseInt","duration","$nextTick","modalContent","document","querySelector","scrollTo","top","behavior","forEach","areaId","seconds","mins","floor","secs","toString","padStart","honeyType","undefined","rate","h","parseFloat","total","Object","values","reduce","sum","val","timestamp","getMonth","getDate","getHours","getMinutes","allTypes","map","endTime","totalDuration","startTime","elapsed","setInterval","clearInterval","taskName","performWork","completed","isCompleted","buttonText","localClicksDone","currentClicks","clicksCompleted","clicksNeeded","remainingClicks","closeModal","capacityPercentage","totalHoney","honeyCapacity","upgradeStorage","canUpgradeStorage","upgradeCost","inventory","honeyTypeColor","honeyTypeName","honeyTypeDescription","step","sellAmounts","sellHoney","canSell","calculateSellValue","allHoneyTypes","activeOrders","order","customer","formatRemainingTime","expiryTime","requirements","req","reqIndex","baseValue","bonusValue","totalValue","fulfillOrder","canFulfillOrder","capacity","orders","color","basePrice","dispatch","remainingMs","hours","minutes","filteredTasks","calculateProgress","currentValue","targetValue","unit","claimReward","canClaim","tasks","filter","claimTaskReward","refreshTasks","newValue","unlockedCount","totalAchievements","completionPercentage","categories","category","activeCategory","filteredAchievements","achievement","unlocked","hint","target","unlockedAt","achievements","mapGetters","unlockedAchievements","round","toLocaleDateString","components","ForagingModal","LaborTaskModal","HoneyStorageModal","TasksModal","AchievementsModal","production","costs","bee","hiveUpgrade","challenges","laborTask","weatherTypes","weather","then","setupGame","renderBees","$watch","window","addEventListener","saveGameBeforeUnload","removeEventListener","event","hiveContainer","$refs","firstChild","removeChild","containerWidth","clientWidth","containerHeight","clientHeight","safeMargin","i","createElement","className","left","random","animationDelay","posX","posY","distToLeft","distToRight","distToTop","distToBottom","maxSafeDistance","flyDistance","setProperty","centerDistance","sqrt","pow","animationDuration","appendChild","routes","redirect","component","LoginView","GameView","router","createRouter","history","createWebHistory","process","namespaced","assignedBees","getters","rootState","mutations","SET_BEES","ADD_BEES","REMOVE_BEES","ASSIGN_BEES","count","RETURN_BEES","SET_HIVE_LEVEL","level","SET_HIVE_CAPACITY","SET_HONEY_EFFICIENCY","efficiency","SET_COSTS","SET_HIVE_HEALTH","UPGRADE_HIVE","SET_ASSIGNED_BEES","actions","commit","rootGetters","root","availableSpace","ADD_HONEY_BY_TYPE","REMOVE_HONEY_BY_TYPE","amountToRemove","SET_HONEY_CAPACITY","SET_PRODUCTION","ADD_PRODUCTION","CLEAR_PRODUCTION","produceHoney","weatherMultiplier","effectMultiplier","honeyProduction","upgradeHoneyStorage","cost","newCapacity","sellHoneyByType","value","honeyToCollect","collectableAmount","typeChances","honeyDistribution","remainingHoney","collectedAmount","chance","entries","typeAmount","messageText","details","join","totalAmount","maxActive","ADD_ORDER","REMOVE_ORDER","splice","COMPLETE_ORDER","SET_ORDERS","initOrders","initialOrderCount","checkExpiredOrders","expiredOrders","orderIndex","generateOrder","keys","requiredTypes","typeCount","some","bonusPercent","customers","expiryHours","createdAt","canFulfill","extraRewards","text","reward","newHealth","maxMissions","garden","distance","meadow","forest","areaData","minBeesNeeded","foragingStats","totalHoneyCollected","b","SET_SELECTED_AREA","START_MISSION","COMPLETE_MISSION","missionId","findIndex","m","ADD_COLLECTED_HONEY","SET_FORAGING_DATA","ADD_MISSION_RECORD","record","unshift","pop","beesToAssign","ceil","durationSeconds","inProgress","timeDisplay","completeMission","missionIndex","beesToReturn","roll","missionRecord","range","Number","rewardText","lossChance","extraBees","reducedLossChance","finalLossChance","lastChallengeTime","hasChallengeActive","SET_CHALLENGE","challenge","CLEAR_CHALLENGE","HIDE_CHALLENGE","SET_LAST_CHALLENGE_TIME","maybeStartChallenge","baseChance","additionalChance","challengeTypes","weatherType","current","createPestChallenge","pestChallenge","severity","effectText","action","createEnvironmentalChallenge","envChallenges","envChallenge","createWeatherChallenge","effect","badWeatherTypes","weatherChallenge","currentEffect","daysRemaining","forceStartChallenge","hideChallenge","sunny","cloudy","rainy","windy","drought","cold","perfect","isBadWeather","weatherEffectColor","SET_WEATHER","DECREASE_WEATHER_DAYS","RESET_WEATHER","changeWeather","weatherChances","selectedWeather","cumulativeChance","improveWeather","taskProgress","isTaskActive","taskProgressPercentage","SET_TASK","CLEAR_TASK","PROGRESS_TASK","startLaborTask","progressTask","cancelTask","expiresAt","newTaskNotification","dailyTasks","weeklyTasks","mainTasks","UPDATE_TASK_PROGRESS","taskId","CLAIM_TASK_REWARD","REFRESH_TASKS","t","SET_NEW_TASK_NOTIFICATION","SET_TASKS_DATA","tasksData","SET_TASKS","initTasks","updateProgress","trackCollectHoney","trackSellHoney","trackFulfillOrder","trackBuyBee","trackUpgradeHive","newAchievementNotification","totalOrdersFulfilled","totalChallengesSolved","healthyDaysCount","UPDATE_ACHIEVEMENT_PROGRESS","achievementId","UPDATE_BEES_COUNT","includes","UPDATE_HIVE_LEVEL","UPDATE_HONEY_COLLECTED","UPDATE_HONEY_STORAGE_CAPACITY","UPDATE_FORAGING_MISSIONS","UPDATE_RARE_HONEY","UPDATE_ORDERS_FULFILLED","UPDATE_CHALLENGES_SOLVED","UPDATE_HEALTHY_DAYS","health","CLEAR_NEW_ACHIEVEMENT_NOTIFICATION","initAchievements","checkAchievements","solvedChallenges","clearNewAchievementNotification","trackHoneyCollected","isAuthenticated","userId","userEmail","SET_DB","SET_AUTH","SET_CURRENT_USER","SET_LOADING","SET_ERROR","setInstances","removeItem","handleError","saveGamePlugin","store","saveGame","firebase","localUser","gameData","savedAt","database","gameRef","set","lastSaved","toISOString","firebaseError","dbRef","snapshot","get","child","exists","savedGame","parseError","validateGameData","foragingData","stack","deleteGameSave","createStore","SET_BEE_FACT","fact","SET_MONEY","ADD_MONEY","REMOVE_MONEY","showNotification","context","notificationArea","notification","textContent","animation","remove","beeFacts","initGame","modules","beesModule","honeyModule","ordersModule","foragingModule","challengesModule","weatherModule","laborTasksModule","persistence","persistenceModule","plugins","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","r","d","definition","o","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}